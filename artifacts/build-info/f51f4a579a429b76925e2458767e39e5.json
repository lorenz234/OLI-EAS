{
	"id": "f51f4a579a429b76925e2458767e39e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"resolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { SchemaResolver } from \"EAS/SchemaResolver.sol\";\nimport { IEAS, Attestation } from \"EAS/IEAS.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title A schema resolver that checks whether the sender is the owner of the contract behind attestation.recipient.\n */\ncontract OwnerRecipientResolver is SchemaResolver {\n    constructor(IEAS eas) SchemaResolver(eas) {}\n\n    function onAttest(Attestation calldata attestation, uint256 /*value*/) internal view override returns (bool) {\n        \n        // Return false if the attestation.recipient field is empty (zero address)\n        if (attestation.recipient == address(0)) {\n            return false;\n        }\n\n        // First we check if a OwnableCheck should be performed\n        bool ownableCheck = extractOwnableCheckFromData(attestation.data);\n\n        // If OwnableCheck false, allow attestation\n        if (!ownableCheck) {\n            return true;\n        }\n\n        // Now that we know a OwnableCheck is True, we start with the check if the contract is owned by the sender\n\n        // First we make sure the attestation.recipient is a contract, else return false\n        if (attestation.recipient.code.length == 0) {\n            return false;\n        }\n\n        // Second we make sure the input chain_id matches chainId\n        uint256 currentChainId;\n        assembly {\n            currentChainId := chainid()\n        }\n        \n        uint256 expectedChainId = extractChainIdFromData(attestation.data);\n        if (currentChainId != expectedChainId) {\n            return false;\n        }\n\n        // Third we cast the recipient address to Ownable\n        Ownable ownableContract = Ownable(attestation.recipient);\n\n        try ownableContract.owner() returns (address owner) {\n            // If the sender is the owner of the contract, allow attestation\n            return attestation.attester == owner;\n        } catch {\n            // If the call to owner() fails, it means the contract is not Ownable by the sender\n            return false;\n        }\n    }\n\n    function extractChainIdFromData(bytes memory data) internal pure returns (uint256) {\n        require(data.length >= 256, \"Data too short\"); // 8 * 32 bytes = 256 bytes\n        \n        // Extract the chain ID from position 10\n        uint256 extractedValue;\n        assembly {\n            extractedValue := mload(add(data, 256)) // Load the chain ID value from position 8 (8 * 32 bytes)\n        }\n        \n        return extractedValue;\n    }\n\n    function extractOwnableCheckFromData(bytes memory data) internal pure returns (bool) {\n        require(data.length >= 288, \"Data too short\");\n        \n        // Extract the OwnerCheck from position 9, but we're only interested in the last bit\n        uint256 extractedValue;\n        assembly {\n            extractedValue := mload(add(data, 288)) // Load the first x bytes\n            extractedValue := and(extractedValue, 0x1) // Mask only the last bit\n        }\n        \n        return extractedValue == 1;\n    }\n\n    function onRevoke(Attestation calldata /*attestation*/, uint256 /*value*/) internal pure override returns (bool) {\n        return true;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"EAS/IEAS.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { ISchemaRegistry } from \"./ISchemaRegistry.sol\";\nimport { ISemver } from \"./ISemver.sol\";\nimport { Attestation, Signature } from \"./Common.sol\";\n\n/// @notice A struct representing the arguments of the attestation request.\nstruct AttestationRequestData {\n    address recipient; // The recipient of the attestation.\n    uint64 expirationTime; // The time when the attestation expires (Unix timestamp).\n    bool revocable; // Whether the attestation is revocable.\n    bytes32 refUID; // The UID of the related attestation.\n    bytes data; // Custom attestation data.\n    uint256 value; // An explicit ETH amount to send to the resolver. This is important to prevent accidental user errors.\n}\n\n/// @notice A struct representing the full arguments of the attestation request.\nstruct AttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData data; // The arguments of the attestation request.\n}\n\n/// @notice A struct representing the full arguments of the full delegated attestation request.\nstruct DelegatedAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData data; // The arguments of the attestation request.\n    Signature signature; // The ECDSA signature data.\n    address attester; // The attesting account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the full arguments of the multi attestation request.\nstruct MultiAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData[] data; // The arguments of the attestation request.\n}\n\n/// @notice A struct representing the full arguments of the delegated multi attestation request.\nstruct MultiDelegatedAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData[] data; // The arguments of the attestation requests.\n    Signature[] signatures; // The ECDSA signatures data. Please note that the signatures are assumed to be signed with increasing nonces.\n    address attester; // The attesting account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the arguments of the revocation request.\nstruct RevocationRequestData {\n    bytes32 uid; // The UID of the attestation to revoke.\n    uint256 value; // An explicit ETH amount to send to the resolver. This is important to prevent accidental user errors.\n}\n\n/// @notice A struct representing the full arguments of the revocation request.\nstruct RevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData data; // The arguments of the revocation request.\n}\n\n/// @notice A struct representing the arguments of the full delegated revocation request.\nstruct DelegatedRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData data; // The arguments of the revocation request.\n    Signature signature; // The ECDSA signature data.\n    address revoker; // The revoking account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the full arguments of the multi revocation request.\nstruct MultiRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData[] data; // The arguments of the revocation request.\n}\n\n/// @notice A struct representing the full arguments of the delegated multi revocation request.\nstruct MultiDelegatedRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData[] data; // The arguments of the revocation requests.\n    Signature[] signatures; // The ECDSA signatures data. Please note that the signatures are assumed to be signed with increasing nonces.\n    address revoker; // The revoking account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @title IEAS\n/// @notice EAS - Ethereum Attestation Service interface.\ninterface IEAS is ISemver {\n    /// @notice Emitted when an attestation has been made.\n    /// @param recipient The recipient of the attestation.\n    /// @param attester The attesting account.\n    /// @param uid The UID of the new attestation.\n    /// @param schemaUID The UID of the schema.\n    event Attested(address indexed recipient, address indexed attester, bytes32 uid, bytes32 indexed schemaUID);\n\n    /// @notice Emitted when an attestation has been revoked.\n    /// @param recipient The recipient of the attestation.\n    /// @param attester The attesting account.\n    /// @param schemaUID The UID of the schema.\n    /// @param uid The UID the revoked attestation.\n    event Revoked(address indexed recipient, address indexed attester, bytes32 uid, bytes32 indexed schemaUID);\n\n    /// @notice Emitted when a data has been timestamped.\n    /// @param data The data.\n    /// @param timestamp The timestamp.\n    event Timestamped(bytes32 indexed data, uint64 indexed timestamp);\n\n    /// @notice Emitted when a data has been revoked.\n    /// @param revoker The address of the revoker.\n    /// @param data The data.\n    /// @param timestamp The timestamp.\n    event RevokedOffchain(address indexed revoker, bytes32 indexed data, uint64 indexed timestamp);\n\n    /// @notice Returns the address of the global schema registry.\n    /// @return The address of the global schema registry.\n    function getSchemaRegistry() external view returns (ISchemaRegistry);\n\n    /// @notice Attests to a specific schema.\n    /// @param request The arguments of the attestation request.\n    /// @return The UID of the new attestation.\n    ///\n    /// Example:\n    ///     attest({\n    ///         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",\n    ///         data: {\n    ///             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",\n    ///             expirationTime: 0,\n    ///             revocable: true,\n    ///             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    ///             data: \"0xF00D\",\n    ///             value: 0\n    ///         }\n    ///     })\n    function attest(AttestationRequest calldata request) external payable returns (bytes32);\n\n    /// @notice Attests to a specific schema via the provided ECDSA signature.\n    /// @param delegatedRequest The arguments of the delegated attestation request.\n    /// @return The UID of the new attestation.\n    ///\n    /// Example:\n    ///     attestByDelegation({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 0\n    ///         },\n    ///         signature: {\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',\n    ///         deadline: 1673891048\n    ///     })\n    function attestByDelegation(\n        DelegatedAttestationRequest calldata delegatedRequest\n    ) external payable returns (bytes32);\n\n    /// @notice Attests to multiple schemas.\n    /// @param multiRequests The arguments of the multi attestation requests. The requests should be grouped by distinct\n    ///     schema ids to benefit from the best batching optimization.\n    /// @return The UIDs of the new attestations.\n    ///\n    /// Example:\n    ///     multiAttest([{\n    ///         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',\n    ///         data: [{\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 0,\n    ///             revocable: false,\n    ///             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',\n    ///             data: '0x00',\n    ///             value: 0\n    ///         }],\n    ///     },\n    ///     {\n    ///         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n    ///         data: [{\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 0,\n    ///             revocable: true,\n    ///             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',\n    ///             data: '0x12345678',\n    ///             value: 0\n    ///         },\n    ///     }])\n    function multiAttest(MultiAttestationRequest[] calldata multiRequests) external payable returns (bytes32[] memory);\n\n    /// @notice Attests to multiple schemas using via provided ECDSA signatures.\n    /// @param multiDelegatedRequests The arguments of the delegated multi attestation requests. The requests should be\n    ///     grouped by distinct schema ids to benefit from the best batching optimization.\n    /// @return The UIDs of the new attestations.\n    ///\n    /// Example:\n    ///     multiAttestByDelegation([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 0\n    ///         },\n    ///         {\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 0,\n    ///             revocable: false,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x00',\n    ///             value: 0\n    ///         }],\n    ///         signatures: [{\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         {\n    ///             v: 28,\n    ///             r: '0x487s...67bb',\n    ///             s: '0x12ad...2366'\n    ///         }],\n    ///         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',\n    ///         deadline: 1673891048\n    ///     }])\n    function multiAttestByDelegation(\n        MultiDelegatedAttestationRequest[] calldata multiDelegatedRequests\n    ) external payable returns (bytes32[] memory);\n\n    /// @notice Revokes an existing attestation to a specific schema.\n    /// @param request The arguments of the revocation request.\n    ///\n    /// Example:\n    ///     revoke({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',\n    ///             value: 0\n    ///         }\n    ///     })\n    function revoke(RevocationRequest calldata request) external payable;\n\n    /// @notice Revokes an existing attestation to a specific schema via the provided ECDSA signature.\n    /// @param delegatedRequest The arguments of the delegated revocation request.\n    ///\n    /// Example:\n    ///     revokeByDelegation({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',\n    ///             value: 0\n    ///         },\n    ///         signature: {\n    ///             v: 27,\n    ///             r: '0xb593...7142',\n    ///             s: '0x0f5b...2cce'\n    ///         },\n    ///         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n    ///         deadline: 1673891048\n    ///     })\n    function revokeByDelegation(DelegatedRevocationRequest calldata delegatedRequest) external payable;\n\n    /// @notice Revokes existing attestations to multiple schemas.\n    /// @param multiRequests The arguments of the multi revocation requests. The requests should be grouped by distinct\n    ///     schema ids to benefit from the best batching optimization.\n    ///\n    /// Example:\n    ///     multiRevoke([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n    ///             value: 0\n    ///         }],\n    ///     },\n    ///     {\n    ///         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n    ///         data: [{\n    ///             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',\n    ///             value: 0\n    ///         },\n    ///     }])\n    function multiRevoke(MultiRevocationRequest[] calldata multiRequests) external payable;\n\n    /// @notice Revokes existing attestations to multiple schemas via provided ECDSA signatures.\n    /// @param multiDelegatedRequests The arguments of the delegated multi revocation attestation requests. The requests\n    ///     should be grouped by distinct schema ids to benefit from the best batching optimization.\n    ///\n    /// Example:\n    ///     multiRevokeByDelegation([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n    ///             value: 0\n    ///         }],\n    ///         signatures: [{\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         {\n    ///             v: 28,\n    ///             r: '0x487s...67bb',\n    ///             s: '0x12ad...2366'\n    ///         }],\n    ///         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n    ///         deadline: 1673891048\n    ///     }])\n    function multiRevokeByDelegation(\n        MultiDelegatedRevocationRequest[] calldata multiDelegatedRequests\n    ) external payable;\n\n    /// @notice Timestamps the specified bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was timestamped with.\n    function timestamp(bytes32 data) external returns (uint64);\n\n    /// @notice Timestamps the specified multiple bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was timestamped with.\n    function multiTimestamp(bytes32[] calldata data) external returns (uint64);\n\n    /// @notice Revokes the specified bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was revoked with.\n    function revokeOffchain(bytes32 data) external returns (uint64);\n\n    /// @notice Revokes the specified multiple bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was revoked with.\n    function multiRevokeOffchain(bytes32[] calldata data) external returns (uint64);\n\n    /// @notice Returns an existing attestation by UID.\n    /// @param uid The UID of the attestation to retrieve.\n    /// @return The attestation data members.\n    function getAttestation(bytes32 uid) external view returns (Attestation memory);\n\n    /// @notice Checks whether an attestation exists.\n    /// @param uid The UID of the attestation to retrieve.\n    /// @return Whether an attestation exists.\n    function isAttestationValid(bytes32 uid) external view returns (bool);\n\n    /// @notice Returns the timestamp that the specified data was timestamped with.\n    /// @param data The data to query.\n    /// @return The timestamp the data was timestamped with.\n    function getTimestamp(bytes32 data) external view returns (uint64);\n\n    /// @notice Returns the timestamp that the specified data was timestamped with.\n    /// @param data The data to query.\n    /// @return The timestamp the data was timestamped with.\n    function getRevokeOffchain(address revoker, bytes32 data) external view returns (uint64);\n}"
			},
			"EAS/SchemaResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport { AccessDenied, InvalidEAS, InvalidLength, uncheckedInc } from \"./Common.sol\";\nimport { IEAS, Attestation } from \"./IEAS.sol\";\nimport { Semver } from \"./Semver.sol\";\nimport { ISchemaResolver } from \"./ISchemaResolver.sol\";\n\n/// @title SchemaResolver\n/// @notice The base schema resolver contract.\nabstract contract SchemaResolver is ISchemaResolver, Semver {\n    error InsufficientValue();\n    error NotPayable();\n\n    // The global EAS contract.\n    IEAS internal immutable _eas;\n\n    /// @dev Creates a new resolver.\n    /// @param eas The address of the global EAS contract.\n    constructor(IEAS eas) Semver(1, 3, 0) {\n        if (address(eas) == address(0)) {\n            revert InvalidEAS();\n        }\n\n        _eas = eas;\n    }\n\n    /// @dev Ensures that only the EAS contract can make this call.\n    modifier onlyEAS() {\n        _onlyEAS();\n\n        _;\n    }\n\n    /// @inheritdoc ISchemaResolver\n    function isPayable() public pure virtual returns (bool) {\n        return false;\n    }\n\n    /// @dev ETH callback.\n    receive() external payable virtual {\n        if (!isPayable()) {\n            revert NotPayable();\n        }\n    }\n\n    /// @inheritdoc ISchemaResolver\n    function attest(Attestation calldata attestation) external payable onlyEAS returns (bool) {\n        return onAttest(attestation, msg.value);\n    }\n\n    /// @inheritdoc ISchemaResolver\n    function multiAttest(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable onlyEAS returns (bool) {\n        uint256 length = attestations.length;\n        if (length != values.length) {\n            revert InvalidLength();\n        }\n\n        // We are keeping track of the remaining ETH amount that can be sent to resolvers and will keep deducting\n        // from it to verify that there isn't any attempt to send too much ETH to resolvers. Please note that unless\n        // some ETH was stuck in the contract by accident (which shouldn't happen in normal conditions), it won't be\n        // possible to send too much ETH anyway.\n        uint256 remainingValue = msg.value;\n\n        for (uint256 i = 0; i < length; i = uncheckedInc(i)) {\n            // Ensure that the attester/revoker doesn't try to spend more than available.\n            uint256 value = values[i];\n            if (value > remainingValue) {\n                revert InsufficientValue();\n            }\n\n            // Forward the attestation to the underlying resolver and return false in case it isn't approved.\n            if (!onAttest(attestations[i], value)) {\n                return false;\n            }\n\n            unchecked {\n                // Subtract the ETH amount, that was provided to this attestation, from the global remaining ETH amount.\n                remainingValue -= value;\n            }\n        }\n\n        return true;\n    }\n\n    /// @inheritdoc ISchemaResolver\n    function revoke(Attestation calldata attestation) external payable onlyEAS returns (bool) {\n        return onRevoke(attestation, msg.value);\n    }\n\n    /// @inheritdoc ISchemaResolver\n    function multiRevoke(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable onlyEAS returns (bool) {\n        uint256 length = attestations.length;\n        if (length != values.length) {\n            revert InvalidLength();\n        }\n\n        // We are keeping track of the remaining ETH amount that can be sent to resolvers and will keep deducting\n        // from it to verify that there isn't any attempt to send too much ETH to resolvers. Please note that unless\n        // some ETH was stuck in the contract by accident (which shouldn't happen in normal conditions), it won't be\n        // possible to send too much ETH anyway.\n        uint256 remainingValue = msg.value;\n\n        for (uint256 i = 0; i < length; i = uncheckedInc(i)) {\n            // Ensure that the attester/revoker doesn't try to spend more than available.\n            uint256 value = values[i];\n            if (value > remainingValue) {\n                revert InsufficientValue();\n            }\n\n            // Forward the revocation to the underlying resolver and return false in case it isn't approved.\n            if (!onRevoke(attestations[i], value)) {\n                return false;\n            }\n\n            unchecked {\n                // Subtract the ETH amount, that was provided to this attestation, from the global remaining ETH amount.\n                remainingValue -= value;\n            }\n        }\n\n        return true;\n    }\n\n    /// @notice A resolver callback that should be implemented by child contracts.\n    /// @param attestation The new attestation.\n    /// @param value An explicit ETH amount that was sent to the resolver. Please note that this value is verified in\n    ///     both attest() and multiAttest() callbacks EAS-only callbacks and that in case of multi attestations, it'll\n    ///     usually hold that msg.value != value, since msg.value aggregated the sent ETH amounts for all the\n    ///     attestations in the batch.\n    /// @return Whether the attestation is valid.\n    function onAttest(Attestation calldata attestation, uint256 value) internal virtual returns (bool);\n\n    /// @notice Processes an attestation revocation and verifies if it can be revoked.\n    /// @param attestation The existing attestation to be revoked.\n    /// @param value An explicit ETH amount that was sent to the resolver. Please note that this value is verified in\n    ///     both revoke() and multiRevoke() callbacks EAS-only callbacks and that in case of multi attestations, it'll\n    ///     usually hold that msg.value != value, since msg.value aggregated the sent ETH amounts for all the\n    ///     attestations in the batch.\n    /// @return Whether the attestation can be revoked.\n    function onRevoke(Attestation calldata attestation, uint256 value) internal virtual returns (bool);\n\n    /// @dev Ensures that only the EAS contract can make this call.\n    function _onlyEAS() private view {\n        if (msg.sender != address(_eas)) {\n            revert AccessDenied();\n        }\n    }\n}"
			},
			"EAS/ISchemaResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { Attestation } from \"./Common.sol\";\nimport { ISemver } from \"./ISemver.sol\";\n\n/// @title ISchemaResolver\n/// @notice The interface of an optional schema resolver.\ninterface ISchemaResolver is ISemver {\n    /// @notice Checks if the resolver can be sent ETH.\n    /// @return Whether the resolver supports ETH transfers.\n    function isPayable() external pure returns (bool);\n\n    /// @notice Processes an attestation and verifies whether it's valid.\n    /// @param attestation The new attestation.\n    /// @return Whether the attestation is valid.\n    function attest(Attestation calldata attestation) external payable returns (bool);\n\n    /// @notice Processes multiple attestations and verifies whether they are valid.\n    /// @param attestations The new attestations.\n    /// @param values Explicit ETH amounts which were sent with each attestation.\n    /// @return Whether all the attestations are valid.\n    function multiAttest(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable returns (bool);\n\n    /// @notice Processes an attestation revocation and verifies if it can be revoked.\n    /// @param attestation The existing attestation to be revoked.\n    /// @return Whether the attestation can be revoked.\n    function revoke(Attestation calldata attestation) external payable returns (bool);\n\n    /// @notice Processes revocation of multiple attestation and verifies they can be revoked.\n    /// @param attestations The existing attestations to be revoked.\n    /// @param values Explicit ETH amounts which were sent with each revocation.\n    /// @return Whether the attestations can be revoked.\n    function multiRevoke(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable returns (bool);\n}"
			},
			"EAS/Semver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport { Strings } from \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport { ISemver } from \"./ISemver.sol\";\n\n/// @title Semver\n/// @notice A simple contract for managing contract versions.\ncontract Semver is ISemver {\n    // Contract's major version number.\n    uint256 private immutable _major;\n\n    // Contract's minor version number.\n    uint256 private immutable _minor;\n\n    // Contract's patch version number.\n    uint256 private immutable _patch;\n\n    /// @dev Create a new Semver instance.\n    /// @param major Major version number.\n    /// @param minor Minor version number.\n    /// @param patch Patch version number.\n    constructor(uint256 major, uint256 minor, uint256 patch) {\n        _major = major;\n        _minor = minor;\n        _patch = patch;\n    }\n\n    /// @notice Returns the full semver contract version.\n    /// @return Semver contract version as a string.\n    function version() external view returns (string memory) {\n        return\n            string(\n                abi.encodePacked(Strings.toString(_major), \".\", Strings.toString(_minor), \".\", Strings.toString(_patch))\n            );\n    }\n}"
			},
			"EAS/Common.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// A representation of an empty/uninitialized UID.\nbytes32 constant EMPTY_UID = 0;\n\n// A zero expiration represents an non-expiring attestation.\nuint64 constant NO_EXPIRATION_TIME = 0;\n\nerror AccessDenied();\nerror DeadlineExpired();\nerror InvalidEAS();\nerror InvalidLength();\nerror InvalidSignature();\nerror NotFound();\n\n/// @notice A struct representing ECDSA signature data.\nstruct Signature {\n    uint8 v; // The recovery ID.\n    bytes32 r; // The x-coordinate of the nonce R.\n    bytes32 s; // The signature data.\n}\n\n/// @notice A struct representing a single attestation.\nstruct Attestation {\n    bytes32 uid; // A unique identifier of the attestation.\n    bytes32 schema; // The unique identifier of the schema.\n    uint64 time; // The time when the attestation was created (Unix timestamp).\n    uint64 expirationTime; // The time when the attestation expires (Unix timestamp).\n    uint64 revocationTime; // The time when the attestation was revoked (Unix timestamp).\n    bytes32 refUID; // The UID of the related attestation.\n    address recipient; // The recipient of the attestation.\n    address attester; // The attester/sender of the attestation.\n    bool revocable; // Whether the attestation is revocable.\n    bytes data; // Custom attestation data.\n}\n\n/// @notice A helper function to work with unchecked iterators in loops.\nfunction uncheckedInc(uint256 i) pure returns (uint256 j) {\n    unchecked {\n        j = i + 1;\n    }\n}"
			},
			"EAS/ISemver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title ISemver\n/// @notice A semver interface.\ninterface ISemver {\n    /// @notice Returns the full semver contract version.\n    /// @return Semver contract version as a string.\n    function version() external view returns (string memory);\n}"
			},
			"EAS/ISchemaRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { ISemver } from \"./ISemver.sol\";\n\nimport { ISchemaResolver } from \"./ISchemaResolver.sol\";\n\n/// @notice A struct representing a record for a submitted schema.\nstruct SchemaRecord {\n    bytes32 uid; // The unique identifier of the schema.\n    ISchemaResolver resolver; // Optional schema resolver.\n    bool revocable; // Whether the schema allows revocations explicitly.\n    string schema; // Custom specification of the schema (e.g., an ABI).\n}\n\n/// @title ISchemaRegistry\n/// @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol.\ninterface ISchemaRegistry is ISemver {\n    /// @notice Emitted when a new schema has been registered\n    /// @param uid The schema UID.\n    /// @param registerer The address of the account used to register the schema.\n    /// @param schema The schema data.\n    event Registered(bytes32 indexed uid, address indexed registerer, SchemaRecord schema);\n\n    /// @notice Submits and reserves a new schema\n    /// @param schema The schema data schema.\n    /// @param resolver An optional schema resolver.\n    /// @param revocable Whether the schema allows revocations explicitly.\n    /// @return The UID of the new schema.\n    function register(string calldata schema, ISchemaResolver resolver, bool revocable) external returns (bytes32);\n\n    /// @notice Returns an existing schema by UID\n    /// @param uid The UID of the schema to retrieve.\n    /// @return The schema data members.\n    function getSchema(bytes32 uid) external view returns (SchemaRecord memory);\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x73719A36DA4CA9FA064C29D66775C55A0C9AA2E930345CB3D57303 CALLDATALOAD SWAP2 0xAF SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "657:1315:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x73719A36DA4CA9FA064C29D66775C55A0C9AA2E930345CB3D57303 CALLDATALOAD SWAP2 0xAF SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "657:1315:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"EAS/Common.sol",
								"EAS/IEAS.sol",
								"EAS/ISchemaRegistry.sol",
								"EAS/ISchemaResolver.sol",
								"EAS/ISemver.sol",
								"EAS/SchemaResolver.sol",
								"EAS/Semver.sol",
								"resolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122081b8928b25b87bde8f013aeebe738ad386c3331281cbe21443eec0cdd09cfd1b64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122081b8928b25b87bde8f013aeebe738ad386c3331281cbe21443eec0cdd09cfd1b64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB8 SWAP3 DUP12 0x25 0xB8 PUSH28 0xDE8F013AEEBE738AD386C3331281CBE21443EEC0CDD09CFD1B64736F PUSH13 0x634300081B0033000000000000 ",
							"sourceMap": "251:3680:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122081b8928b25b87bde8f013aeebe738ad386c3331281cbe21443eec0cdd09cfd1b64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB8 SWAP3 DUP12 0x25 0xB8 PUSH28 0xDE8F013AEEBE738AD386C3331281CBE21443EEC0CDD09CFD1B64736F PUSH13 0x634300081B0033000000000000 ",
							"sourceMap": "251:3680:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toChecksumHexString(address)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081b8928b25b87bde8f013aeebe738ad386c3331281cbe21443eec0cdd09cfd1b64736f6c634300081b0033",
									".code": [
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"EAS/Common.sol",
								"EAS/IEAS.sol",
								"EAS/ISchemaRegistry.sol",
								"EAS/ISchemaResolver.sol",
								"EAS/ISemver.sol",
								"EAS/SchemaResolver.sol",
								"EAS/Semver.sol",
								"resolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122098d2046a190af600fce4601d38d5806f82a8692aefbb4a1fc0b03b984f7246be64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122098d2046a190af600fce4601d38d5806f82a8692aefbb4a1fc0b03b984f7246be64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD2 DIV PUSH11 0x190AF600FCE4601D38D580 PUSH16 0x82A8692AEFBB4A1FC0B03B984F7246BE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "281:28026:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122098d2046a190af600fce4601d38d5806f82a8692aefbb4a1fc0b03b984f7246be64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD2 DIV PUSH11 0x190AF600FCE4601D38D580 PUSH16 0x82A8692AEFBB4A1FC0B03B984F7246BE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "281:28026:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098d2046a190af600fce4601d38d5806f82a8692aefbb4a1fc0b03b984f7246be64736f6c634300081b0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"EAS/Common.sol",
								"EAS/IEAS.sol",
								"EAS/ISchemaRegistry.sol",
								"EAS/ISchemaResolver.sol",
								"EAS/ISemver.sol",
								"EAS/SchemaResolver.sol",
								"EAS/Semver.sol",
								"resolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xB2 CHAINID CALLDATACOPY ISZERO OR SLT 0xC3 SDIV 0xBF 0x4F GASPRICE BLOBBASEFEE SMOD BALANCE PREVRANDAO LOG2 0xA5 BLOCKHASH PUSH9 0x9C8A87EA327F39F972 0x29 CALLDATALOAD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "769:34173:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xB2 CHAINID CALLDATACOPY ISZERO OR SLT 0xC3 SDIV 0xBF 0x4F GASPRICE BLOBBASEFEE SMOD BALANCE PREVRANDAO LOG2 0xA5 BLOCKHASH PUSH9 0x9C8A87EA327F39F972 0x29 CALLDATALOAD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "769:34173:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"EAS/Common.sol",
								"EAS/IEAS.sol",
								"EAS/ISchemaRegistry.sol",
								"EAS/ISchemaResolver.sol",
								"EAS/ISemver.sol",
								"EAS/SchemaResolver.sol",
								"EAS/Semver.sol",
								"resolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122056101c1463d4fa7edf5badfe74da2215d3883cf4115ef445104f328da8ddd57964736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122056101c1463d4fa7edf5badfe74da2215d3883cf4115ef445104f328da8ddd57964736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP LT SHR EQ PUSH4 0xD4FA7EDF JUMPDEST 0xAD INVALID PUSH21 0xDA2215D3883CF4115EF445104F328DA8DDD5796473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "258:2354:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122056101c1463d4fa7edf5badfe74da2215d3883cf4115ef445104f328da8ddd57964736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP LT SHR EQ PUSH4 0xD4FA7EDF JUMPDEST 0xAD INVALID PUSH21 0xDA2215D3883CF4115EF445104F328DA8DDD5796473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "258:2354:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"ternary(bool,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056101c1463d4fa7edf5badfe74da2215d3883cf4115ef445104f328da8ddd57964736f6c634300081b0033",
									".code": [
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"EAS/Common.sol",
								"EAS/IEAS.sol",
								"EAS/ISchemaRegistry.sol",
								"EAS/ISchemaResolver.sol",
								"EAS/ISemver.sol",
								"EAS/SchemaResolver.sol",
								"EAS/Semver.sol",
								"resolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"EAS/IEAS.sol": {
				"IEAS": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "attester",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "schemaUID",
									"type": "bytes32"
								}
							],
							"name": "Attested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "attester",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "schemaUID",
									"type": "bytes32"
								}
							],
							"name": "Revoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "revoker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "RevokedOffchain",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "Timestamped",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint64",
													"name": "expirationTime",
													"type": "uint64"
												},
												{
													"internalType": "bool",
													"name": "revocable",
													"type": "bool"
												},
												{
													"internalType": "bytes32",
													"name": "refUID",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct AttestationRequestData",
											"name": "data",
											"type": "tuple"
										}
									],
									"internalType": "struct AttestationRequest",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint64",
													"name": "expirationTime",
													"type": "uint64"
												},
												{
													"internalType": "bool",
													"name": "revocable",
													"type": "bool"
												},
												{
													"internalType": "bytes32",
													"name": "refUID",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct AttestationRequestData",
											"name": "data",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												}
											],
											"internalType": "struct Signature",
											"name": "signature",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "deadline",
											"type": "uint64"
										}
									],
									"internalType": "struct DelegatedAttestationRequest",
									"name": "delegatedRequest",
									"type": "tuple"
								}
							],
							"name": "attestByDelegation",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								}
							],
							"name": "getAttestation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "revoker",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "getRevokeOffchain",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSchemaRegistry",
							"outputs": [
								{
									"internalType": "contract ISchemaRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								}
							],
							"name": "isAttestationValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint64",
													"name": "expirationTime",
													"type": "uint64"
												},
												{
													"internalType": "bool",
													"name": "revocable",
													"type": "bool"
												},
												{
													"internalType": "bytes32",
													"name": "refUID",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct AttestationRequestData[]",
											"name": "data",
											"type": "tuple[]"
										}
									],
									"internalType": "struct MultiAttestationRequest[]",
									"name": "multiRequests",
									"type": "tuple[]"
								}
							],
							"name": "multiAttest",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint64",
													"name": "expirationTime",
													"type": "uint64"
												},
												{
													"internalType": "bool",
													"name": "revocable",
													"type": "bool"
												},
												{
													"internalType": "bytes32",
													"name": "refUID",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct AttestationRequestData[]",
											"name": "data",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												}
											],
											"internalType": "struct Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "deadline",
											"type": "uint64"
										}
									],
									"internalType": "struct MultiDelegatedAttestationRequest[]",
									"name": "multiDelegatedRequests",
									"type": "tuple[]"
								}
							],
							"name": "multiAttestByDelegation",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "uid",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct RevocationRequestData[]",
											"name": "data",
											"type": "tuple[]"
										}
									],
									"internalType": "struct MultiRevocationRequest[]",
									"name": "multiRequests",
									"type": "tuple[]"
								}
							],
							"name": "multiRevoke",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "uid",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct RevocationRequestData[]",
											"name": "data",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												}
											],
											"internalType": "struct Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "revoker",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "deadline",
											"type": "uint64"
										}
									],
									"internalType": "struct MultiDelegatedRevocationRequest[]",
									"name": "multiDelegatedRequests",
									"type": "tuple[]"
								}
							],
							"name": "multiRevokeByDelegation",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "multiRevokeOffchain",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "multiTimestamp",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "uid",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct RevocationRequestData",
											"name": "data",
											"type": "tuple"
										}
									],
									"internalType": "struct RevocationRequest",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "uid",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												}
											],
											"internalType": "struct RevocationRequestData",
											"name": "data",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												}
											],
											"internalType": "struct Signature",
											"name": "signature",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "revoker",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "deadline",
											"type": "uint64"
										}
									],
									"internalType": "struct DelegatedRevocationRequest",
									"name": "delegatedRequest",
									"type": "tuple"
								}
							],
							"name": "revokeByDelegation",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "revokeOffchain",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "timestamp",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Attested(address,address,bytes32,bytes32)": {
								"params": {
									"attester": "The attesting account.",
									"recipient": "The recipient of the attestation.",
									"schemaUID": "The UID of the schema.",
									"uid": "The UID of the new attestation."
								}
							},
							"Revoked(address,address,bytes32,bytes32)": {
								"params": {
									"attester": "The attesting account.",
									"recipient": "The recipient of the attestation.",
									"schemaUID": "The UID of the schema.",
									"uid": "The UID the revoked attestation."
								}
							},
							"RevokedOffchain(address,bytes32,uint64)": {
								"params": {
									"data": "The data.",
									"revoker": "The address of the revoker.",
									"timestamp": "The timestamp."
								}
							},
							"Timestamped(bytes32,uint64)": {
								"params": {
									"data": "The data.",
									"timestamp": "The timestamp."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))": {
								"params": {
									"request": "The arguments of the attestation request."
								},
								"returns": {
									"_0": "The UID of the new attestation. Example:     attest({         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",         data: {             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",             expirationTime: 0,             revocable: true,             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",             data: \"0xF00D\",             value: 0         }     })"
								}
							},
							"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))": {
								"params": {
									"delegatedRequest": "The arguments of the delegated attestation request."
								},
								"returns": {
									"_0": "The UID of the new attestation. Example:     attestByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         signature: {             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',         deadline: 1673891048     })"
								}
							},
							"getAttestation(bytes32)": {
								"params": {
									"uid": "The UID of the attestation to retrieve."
								},
								"returns": {
									"_0": "The attestation data members."
								}
							},
							"getRevokeOffchain(address,bytes32)": {
								"params": {
									"data": "The data to query."
								},
								"returns": {
									"_0": "The timestamp the data was timestamped with."
								}
							},
							"getSchemaRegistry()": {
								"returns": {
									"_0": "The address of the global schema registry."
								}
							},
							"getTimestamp(bytes32)": {
								"params": {
									"data": "The data to query."
								},
								"returns": {
									"_0": "The timestamp the data was timestamped with."
								}
							},
							"isAttestationValid(bytes32)": {
								"params": {
									"uid": "The UID of the attestation to retrieve."
								},
								"returns": {
									"_0": "Whether an attestation exists."
								}
							},
							"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])": {
								"params": {
									"multiRequests": "The arguments of the multi attestation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization."
								},
								"returns": {
									"_0": "The UIDs of the new attestations. Example:     multiAttest([{         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 1000         },         {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 0,             revocable: false,             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',             data: '0x00',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: true,             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',             data: '0x12345678',             value: 0         },     }])"
								}
							},
							"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
								"params": {
									"multiDelegatedRequests": "The arguments of the delegated multi attestation requests. The requests should be     grouped by distinct schema ids to benefit from the best batching optimization."
								},
								"returns": {
									"_0": "The UIDs of the new attestations. Example:     multiAttestByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         {             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: false,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x00',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',         deadline: 1673891048     }])"
								}
							},
							"multiRevoke((bytes32,(bytes32,uint256)[])[])": {
								"params": {
									"multiRequests": "The arguments of the multi revocation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization. Example:     multiRevoke([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',             value: 0         },     }])"
								}
							},
							"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
								"params": {
									"multiDelegatedRequests": "The arguments of the delegated multi revocation attestation requests. The requests     should be grouped by distinct schema ids to benefit from the best batching optimization. Example:     multiRevokeByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     }])"
								}
							},
							"multiRevokeOffchain(bytes32[])": {
								"params": {
									"data": "The data to timestamp."
								},
								"returns": {
									"_0": "The timestamp the data was revoked with."
								}
							},
							"multiTimestamp(bytes32[])": {
								"params": {
									"data": "The data to timestamp."
								},
								"returns": {
									"_0": "The timestamp the data was timestamped with."
								}
							},
							"revoke((bytes32,(bytes32,uint256)))": {
								"params": {
									"request": "The arguments of the revocation request. Example:     revoke({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',             value: 0         }     })"
								}
							},
							"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))": {
								"params": {
									"delegatedRequest": "The arguments of the delegated revocation request. Example:     revokeByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',             value: 0         },         signature: {             v: 27,             r: '0xb593...7142',             s: '0x0f5b...2cce'         },         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     })"
								}
							},
							"revokeOffchain(bytes32)": {
								"params": {
									"data": "The data to timestamp."
								},
								"returns": {
									"_0": "The timestamp the data was revoked with."
								}
							},
							"timestamp(bytes32)": {
								"params": {
									"data": "The data to timestamp."
								},
								"returns": {
									"_0": "The timestamp the data was timestamped with."
								}
							},
							"version()": {
								"returns": {
									"_0": "Semver contract version as a string."
								}
							}
						},
						"title": "IEAS",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))": "f17325e7",
							"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))": "3c042715",
							"getAttestation(bytes32)": "a3112a64",
							"getRevokeOffchain(address,bytes32)": "b469318d",
							"getSchemaRegistry()": "f10b5cc8",
							"getTimestamp(bytes32)": "d45c4435",
							"isAttestationValid(bytes32)": "e30bb563",
							"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])": "44adc90e",
							"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": "95411525",
							"multiRevoke((bytes32,(bytes32,uint256)[])[])": "4cb7e9e5",
							"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": "0eabf660",
							"multiRevokeOffchain(bytes32[])": "13893f61",
							"multiTimestamp(bytes32[])": "e71ff365",
							"revoke((bytes32,(bytes32,uint256)))": "46926267",
							"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))": "a6d4dbc7",
							"revokeOffchain(bytes32)": "cf190f34",
							"timestamp(bytes32)": "4d003070",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Attested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"RevokedOffchain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"Timestamped\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct AttestationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedAttestationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"attestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchemaRegistry\",\"outputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"isAttestationValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiAttestationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedAttestationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiRevocationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedRevocationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct RevocationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedRevocationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"revokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"revokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID of the new attestation.\"}},\"Revoked(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID the revoked attestation.\"}},\"RevokedOffchain(address,bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"revoker\":\"The address of the revoker.\",\"timestamp\":\"The timestamp.\"}},\"Timestamped(bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"timestamp\":\"The timestamp.\"}}},\"kind\":\"dev\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"params\":{\"request\":\"The arguments of the attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attest({         schema: \\\"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\\\",         data: {             recipient: \\\"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\\\",             expirationTime: 0,             revocable: true,             refUID: \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",             data: \\\"0xF00D\\\",             value: 0         }     })\"}},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attestByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         signature: {             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',         deadline: 1673891048     })\"}},\"getAttestation(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"The attestation data members.\"}},\"getRevokeOffchain(address,bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"getSchemaRegistry()\":{\"returns\":{\"_0\":\"The address of the global schema registry.\"}},\"getTimestamp(bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"isAttestationValid(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"Whether an attestation exists.\"}},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi attestation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttest([{         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 1000         },         {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 0,             revocable: false,             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',             data: '0x00',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: true,             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',             data: '0x12345678',             value: 0         },     }])\"}},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi attestation requests. The requests should be     grouped by distinct schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttestByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         {             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: false,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x00',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',         deadline: 1673891048     }])\"}},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi revocation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization. Example:     multiRevoke([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',             value: 0         },     }])\"}},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi revocation attestation requests. The requests     should be grouped by distinct schema ids to benefit from the best batching optimization. Example:     multiRevokeByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     }])\"}},\"multiRevokeOffchain(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"multiTimestamp(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"revoke((bytes32,(bytes32,uint256)))\":{\"params\":{\"request\":\"The arguments of the revocation request. Example:     revoke({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',             value: 0         }     })\"}},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated revocation request. Example:     revokeByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',             value: 0         },         signature: {             v: 27,             r: '0xb593...7142',             s: '0x0f5b...2cce'         },         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     })\"}},\"revokeOffchain(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"timestamp(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"IEAS\",\"version\":1},\"userdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been made.\"},\"Revoked(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been revoked.\"},\"RevokedOffchain(address,bytes32,uint64)\":{\"notice\":\"Emitted when a data has been revoked.\"},\"Timestamped(bytes32,uint64)\":{\"notice\":\"Emitted when a data has been timestamped.\"}},\"kind\":\"user\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"notice\":\"Attests to a specific schema.\"},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Attests to a specific schema via the provided ECDSA signature.\"},\"getAttestation(bytes32)\":{\"notice\":\"Returns an existing attestation by UID.\"},\"getRevokeOffchain(address,bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"getSchemaRegistry()\":{\"notice\":\"Returns the address of the global schema registry.\"},\"getTimestamp(bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"isAttestationValid(bytes32)\":{\"notice\":\"Checks whether an attestation exists.\"},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"notice\":\"Attests to multiple schemas.\"},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Attests to multiple schemas using via provided ECDSA signatures.\"},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"notice\":\"Revokes existing attestations to multiple schemas.\"},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Revokes existing attestations to multiple schemas via provided ECDSA signatures.\"},\"multiRevokeOffchain(bytes32[])\":{\"notice\":\"Revokes the specified multiple bytes32 data.\"},\"multiTimestamp(bytes32[])\":{\"notice\":\"Timestamps the specified multiple bytes32 data.\"},\"revoke((bytes32,(bytes32,uint256)))\":{\"notice\":\"Revokes an existing attestation to a specific schema.\"},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Revokes an existing attestation to a specific schema via the provided ECDSA signature.\"},\"revokeOffchain(bytes32)\":{\"notice\":\"Revokes the specified bytes32 data.\"},\"timestamp(bytes32)\":{\"notice\":\"Timestamps the specified bytes32 data.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"EAS - Ethereum Attestation Service interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"EAS/IEAS.sol\":\"IEAS\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EAS/Common.sol\":{\"keccak256\":\"0x9007deeeb757cfd4c504887f0c82b49f43fe92de13f4ffd9400f457d8c5276c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://949de4842085918b42d71c50f837b468e77871fc1417f480d2a6618f75eeb57d\",\"dweb:/ipfs/QmbyYxXLvryZBHdNKijCmZzwsgU4bnTXszyA38F5Xdg5h1\"]},\"EAS/IEAS.sol\":{\"keccak256\":\"0xdc4fed434a7d7907767ba1dc6a8e9ddc94ede6df08fbea5d827077ef22e8bd8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297555c22ff767608088c01ba2efe6da4dff7e95b7eb614e09d72cb36d0c989b\",\"dweb:/ipfs/QmQ7YWcBxiaf2mXZL1VLFsYSJPtVTHbWSBuimATVLMC7U4\"]},\"EAS/ISchemaRegistry.sol\":{\"keccak256\":\"0x9f23d5b875dd34e36512ff4ba75615ac5eb56ee20c6451ef2b70da99d95bf006\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad6ef991e5d45128cd5632b88088b4c2fc65153f1da313fb6b603f7db0f27749\",\"dweb:/ipfs/QmQGxZEmQ7xYiCVQFEp9N2jjBtJYKd1CYNUNGoGYmV2F47\"]},\"EAS/ISchemaResolver.sol\":{\"keccak256\":\"0x4df78a9ec7244d6f75d58b01c223e865316e16a071eb9d36d28adddcb784d787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0399b3b62b3f95f12a6f09c397249dbf7f517fc6a2a0bc1be1cd0cc962d85888\",\"dweb:/ipfs/QmYozmYWNnntXQaiVigovQRJuVoxHg78btYxZrLwMDQfx8\"]},\"EAS/ISemver.sol\":{\"keccak256\":\"0x6c6073e407395170dfc58d74be5e4cba5d2f6680d2c9aeade07e591dd7c6d5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f57462c6e329fcf5960e75e9f9a405429f416fec1debcfd4c79c2f10c04dd4\",\"dweb:/ipfs/QmehZy36QoFsBKMMbCo5Jmta5y3uU3so4e4C14MHzx2VDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Attested(address,address,bytes32,bytes32)": {
								"notice": "Emitted when an attestation has been made."
							},
							"Revoked(address,address,bytes32,bytes32)": {
								"notice": "Emitted when an attestation has been revoked."
							},
							"RevokedOffchain(address,bytes32,uint64)": {
								"notice": "Emitted when a data has been revoked."
							},
							"Timestamped(bytes32,uint64)": {
								"notice": "Emitted when a data has been timestamped."
							}
						},
						"kind": "user",
						"methods": {
							"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))": {
								"notice": "Attests to a specific schema."
							},
							"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))": {
								"notice": "Attests to a specific schema via the provided ECDSA signature."
							},
							"getAttestation(bytes32)": {
								"notice": "Returns an existing attestation by UID."
							},
							"getRevokeOffchain(address,bytes32)": {
								"notice": "Returns the timestamp that the specified data was timestamped with."
							},
							"getSchemaRegistry()": {
								"notice": "Returns the address of the global schema registry."
							},
							"getTimestamp(bytes32)": {
								"notice": "Returns the timestamp that the specified data was timestamped with."
							},
							"isAttestationValid(bytes32)": {
								"notice": "Checks whether an attestation exists."
							},
							"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])": {
								"notice": "Attests to multiple schemas."
							},
							"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
								"notice": "Attests to multiple schemas using via provided ECDSA signatures."
							},
							"multiRevoke((bytes32,(bytes32,uint256)[])[])": {
								"notice": "Revokes existing attestations to multiple schemas."
							},
							"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
								"notice": "Revokes existing attestations to multiple schemas via provided ECDSA signatures."
							},
							"multiRevokeOffchain(bytes32[])": {
								"notice": "Revokes the specified multiple bytes32 data."
							},
							"multiTimestamp(bytes32[])": {
								"notice": "Timestamps the specified multiple bytes32 data."
							},
							"revoke((bytes32,(bytes32,uint256)))": {
								"notice": "Revokes an existing attestation to a specific schema."
							},
							"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))": {
								"notice": "Revokes an existing attestation to a specific schema via the provided ECDSA signature."
							},
							"revokeOffchain(bytes32)": {
								"notice": "Revokes the specified bytes32 data."
							},
							"timestamp(bytes32)": {
								"notice": "Timestamps the specified bytes32 data."
							},
							"version()": {
								"notice": "Returns the full semver contract version."
							}
						},
						"notice": "EAS - Ethereum Attestation Service interface.",
						"version": 1
					}
				}
			},
			"EAS/ISchemaRegistry.sol": {
				"ISchemaRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "registerer",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "contract ISchemaResolver",
											"name": "resolver",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "string",
											"name": "schema",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct SchemaRecord",
									"name": "schema",
									"type": "tuple"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "uid",
									"type": "bytes32"
								}
							],
							"name": "getSchema",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "contract ISchemaResolver",
											"name": "resolver",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "string",
											"name": "schema",
											"type": "string"
										}
									],
									"internalType": "struct SchemaRecord",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "schema",
									"type": "string"
								},
								{
									"internalType": "contract ISchemaResolver",
									"name": "resolver",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								}
							],
							"name": "register",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Registered(bytes32,address,(bytes32,address,bool,string))": {
								"params": {
									"registerer": "The address of the account used to register the schema.",
									"schema": "The schema data.",
									"uid": "The schema UID."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getSchema(bytes32)": {
								"params": {
									"uid": "The UID of the schema to retrieve."
								},
								"returns": {
									"_0": "The schema data members."
								}
							},
							"register(string,address,bool)": {
								"params": {
									"resolver": "An optional schema resolver.",
									"revocable": "Whether the schema allows revocations explicitly.",
									"schema": "The schema data schema."
								},
								"returns": {
									"_0": "The UID of the new schema."
								}
							},
							"version()": {
								"returns": {
									"_0": "Semver contract version as a string."
								}
							}
						},
						"title": "ISchemaRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getSchema(bytes32)": "a2ea7c6e",
							"register(string,address,bool)": "60d7a278",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SchemaRecord\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"params\":{\"registerer\":\"The address of the account used to register the schema.\",\"schema\":\"The schema data.\",\"uid\":\"The schema UID.\"}}},\"kind\":\"dev\",\"methods\":{\"getSchema(bytes32)\":{\"params\":{\"uid\":\"The UID of the schema to retrieve.\"},\"returns\":{\"_0\":\"The schema data members.\"}},\"register(string,address,bool)\":{\"params\":{\"resolver\":\"An optional schema resolver.\",\"revocable\":\"Whether the schema allows revocations explicitly.\",\"schema\":\"The schema data schema.\"},\"returns\":{\"_0\":\"The UID of the new schema.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"ISchemaRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"notice\":\"Emitted when a new schema has been registered\"}},\"kind\":\"user\",\"methods\":{\"getSchema(bytes32)\":{\"notice\":\"Returns an existing schema by UID\"},\"register(string,address,bool)\":{\"notice\":\"Submits and reserves a new schema\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The interface of global attestation schemas for the Ethereum Attestation Service protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"EAS/ISchemaRegistry.sol\":\"ISchemaRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EAS/Common.sol\":{\"keccak256\":\"0x9007deeeb757cfd4c504887f0c82b49f43fe92de13f4ffd9400f457d8c5276c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://949de4842085918b42d71c50f837b468e77871fc1417f480d2a6618f75eeb57d\",\"dweb:/ipfs/QmbyYxXLvryZBHdNKijCmZzwsgU4bnTXszyA38F5Xdg5h1\"]},\"EAS/ISchemaRegistry.sol\":{\"keccak256\":\"0x9f23d5b875dd34e36512ff4ba75615ac5eb56ee20c6451ef2b70da99d95bf006\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad6ef991e5d45128cd5632b88088b4c2fc65153f1da313fb6b603f7db0f27749\",\"dweb:/ipfs/QmQGxZEmQ7xYiCVQFEp9N2jjBtJYKd1CYNUNGoGYmV2F47\"]},\"EAS/ISchemaResolver.sol\":{\"keccak256\":\"0x4df78a9ec7244d6f75d58b01c223e865316e16a071eb9d36d28adddcb784d787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0399b3b62b3f95f12a6f09c397249dbf7f517fc6a2a0bc1be1cd0cc962d85888\",\"dweb:/ipfs/QmYozmYWNnntXQaiVigovQRJuVoxHg78btYxZrLwMDQfx8\"]},\"EAS/ISemver.sol\":{\"keccak256\":\"0x6c6073e407395170dfc58d74be5e4cba5d2f6680d2c9aeade07e591dd7c6d5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f57462c6e329fcf5960e75e9f9a405429f416fec1debcfd4c79c2f10c04dd4\",\"dweb:/ipfs/QmehZy36QoFsBKMMbCo5Jmta5y3uU3so4e4C14MHzx2VDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Registered(bytes32,address,(bytes32,address,bool,string))": {
								"notice": "Emitted when a new schema has been registered"
							}
						},
						"kind": "user",
						"methods": {
							"getSchema(bytes32)": {
								"notice": "Returns an existing schema by UID"
							},
							"register(string,address,bool)": {
								"notice": "Submits and reserves a new schema"
							},
							"version()": {
								"notice": "Returns the full semver contract version."
							}
						},
						"notice": "The interface of global attestation schemas for the Ethereum Attestation Service protocol.",
						"version": 1
					}
				}
			},
			"EAS/ISchemaResolver.sol": {
				"ISchemaResolver": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPayable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiAttest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiRevoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "revoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The new attestation."
								},
								"returns": {
									"_0": "Whether the attestation is valid."
								}
							},
							"isPayable()": {
								"returns": {
									"_0": "Whether the resolver supports ETH transfers."
								}
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The new attestations.",
									"values": "Explicit ETH amounts which were sent with each attestation."
								},
								"returns": {
									"_0": "Whether all the attestations are valid."
								}
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The existing attestations to be revoked.",
									"values": "Explicit ETH amounts which were sent with each revocation."
								},
								"returns": {
									"_0": "Whether the attestations can be revoked."
								}
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The existing attestation to be revoked."
								},
								"returns": {
									"_0": "Whether the attestation can be revoked."
								}
							},
							"version()": {
								"returns": {
									"_0": "Semver contract version as a string."
								}
							}
						},
						"title": "ISchemaResolver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
							"isPayable()": "ce46e046",
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"ISchemaResolver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The interface of an optional schema resolver.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"EAS/ISchemaResolver.sol\":\"ISchemaResolver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EAS/Common.sol\":{\"keccak256\":\"0x9007deeeb757cfd4c504887f0c82b49f43fe92de13f4ffd9400f457d8c5276c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://949de4842085918b42d71c50f837b468e77871fc1417f480d2a6618f75eeb57d\",\"dweb:/ipfs/QmbyYxXLvryZBHdNKijCmZzwsgU4bnTXszyA38F5Xdg5h1\"]},\"EAS/ISchemaResolver.sol\":{\"keccak256\":\"0x4df78a9ec7244d6f75d58b01c223e865316e16a071eb9d36d28adddcb784d787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0399b3b62b3f95f12a6f09c397249dbf7f517fc6a2a0bc1be1cd0cc962d85888\",\"dweb:/ipfs/QmYozmYWNnntXQaiVigovQRJuVoxHg78btYxZrLwMDQfx8\"]},\"EAS/ISemver.sol\":{\"keccak256\":\"0x6c6073e407395170dfc58d74be5e4cba5d2f6680d2c9aeade07e591dd7c6d5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f57462c6e329fcf5960e75e9f9a405429f416fec1debcfd4c79c2f10c04dd4\",\"dweb:/ipfs/QmehZy36QoFsBKMMbCo5Jmta5y3uU3so4e4C14MHzx2VDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation and verifies whether it's valid."
							},
							"isPayable()": {
								"notice": "Checks if the resolver can be sent ETH."
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes multiple attestations and verifies whether they are valid."
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes revocation of multiple attestation and verifies they can be revoked."
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation revocation and verifies if it can be revoked."
							},
							"version()": {
								"notice": "Returns the full semver contract version."
							}
						},
						"notice": "The interface of an optional schema resolver.",
						"version": 1
					}
				}
			},
			"EAS/ISemver.sol": {
				"ISemver": {
					"abi": [
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"version()": {
								"returns": {
									"_0": "Semver contract version as a string."
								}
							}
						},
						"title": "ISemver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"ISemver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"A semver interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"EAS/ISemver.sol\":\"ISemver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EAS/ISemver.sol\":{\"keccak256\":\"0x6c6073e407395170dfc58d74be5e4cba5d2f6680d2c9aeade07e591dd7c6d5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f57462c6e329fcf5960e75e9f9a405429f416fec1debcfd4c79c2f10c04dd4\",\"dweb:/ipfs/QmehZy36QoFsBKMMbCo5Jmta5y3uU3so4e4C14MHzx2VDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"version()": {
								"notice": "Returns the full semver contract version."
							}
						},
						"notice": "A semver interface.",
						"version": 1
					}
				}
			},
			"EAS/SchemaResolver.sol": {
				"SchemaResolver": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessDenied",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidEAS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPayable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiAttest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiRevoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "revoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The new attestation."
								},
								"returns": {
									"_0": "Whether the attestation is valid."
								}
							},
							"constructor": {
								"details": "Creates a new resolver.",
								"params": {
									"eas": "The address of the global EAS contract."
								}
							},
							"isPayable()": {
								"returns": {
									"_0": "Whether the resolver supports ETH transfers."
								}
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The new attestations.",
									"values": "Explicit ETH amounts which were sent with each attestation."
								},
								"returns": {
									"_0": "Whether all the attestations are valid."
								}
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The existing attestations to be revoked.",
									"values": "Explicit ETH amounts which were sent with each revocation."
								},
								"returns": {
									"_0": "Whether the attestations can be revoked."
								}
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The existing attestation to be revoked."
								},
								"returns": {
									"_0": "Whether the attestation can be revoked."
								}
							},
							"version()": {
								"returns": {
									"_0": "Semver contract version as a string."
								}
							}
						},
						"title": "SchemaResolver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
							"isPayable()": "ce46e046",
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"constructor\":{\"details\":\"Creates a new resolver.\",\"params\":{\"eas\":\"The address of the global EAS contract.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"SchemaResolver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The base schema resolver contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"EAS/SchemaResolver.sol\":\"SchemaResolver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"EAS/Common.sol\":{\"keccak256\":\"0x9007deeeb757cfd4c504887f0c82b49f43fe92de13f4ffd9400f457d8c5276c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://949de4842085918b42d71c50f837b468e77871fc1417f480d2a6618f75eeb57d\",\"dweb:/ipfs/QmbyYxXLvryZBHdNKijCmZzwsgU4bnTXszyA38F5Xdg5h1\"]},\"EAS/IEAS.sol\":{\"keccak256\":\"0xdc4fed434a7d7907767ba1dc6a8e9ddc94ede6df08fbea5d827077ef22e8bd8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297555c22ff767608088c01ba2efe6da4dff7e95b7eb614e09d72cb36d0c989b\",\"dweb:/ipfs/QmQ7YWcBxiaf2mXZL1VLFsYSJPtVTHbWSBuimATVLMC7U4\"]},\"EAS/ISchemaRegistry.sol\":{\"keccak256\":\"0x9f23d5b875dd34e36512ff4ba75615ac5eb56ee20c6451ef2b70da99d95bf006\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad6ef991e5d45128cd5632b88088b4c2fc65153f1da313fb6b603f7db0f27749\",\"dweb:/ipfs/QmQGxZEmQ7xYiCVQFEp9N2jjBtJYKd1CYNUNGoGYmV2F47\"]},\"EAS/ISchemaResolver.sol\":{\"keccak256\":\"0x4df78a9ec7244d6f75d58b01c223e865316e16a071eb9d36d28adddcb784d787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0399b3b62b3f95f12a6f09c397249dbf7f517fc6a2a0bc1be1cd0cc962d85888\",\"dweb:/ipfs/QmYozmYWNnntXQaiVigovQRJuVoxHg78btYxZrLwMDQfx8\"]},\"EAS/ISemver.sol\":{\"keccak256\":\"0x6c6073e407395170dfc58d74be5e4cba5d2f6680d2c9aeade07e591dd7c6d5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f57462c6e329fcf5960e75e9f9a405429f416fec1debcfd4c79c2f10c04dd4\",\"dweb:/ipfs/QmehZy36QoFsBKMMbCo5Jmta5y3uU3so4e4C14MHzx2VDp\"]},\"EAS/SchemaResolver.sol\":{\"keccak256\":\"0xb6dc636c973996ca481d6522decae3ecae8c043c8d2ca5228e8f53a6c0210951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7f2f9db27662ba6aea6be58351e1cc834a1c84122a6cecfcb6d293628a1364\",\"dweb:/ipfs/QmTkQ7gDaJaY4tgneQyNxmbz9AovJQmMfuZgG8akbAqu5K\"]},\"EAS/Semver.sol\":{\"keccak256\":\"0xcb67b60a08b4acb41ccda1ee2a44bb3d4291f3da9ecd60eed49991bdbfafb972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eea3e91b983ce442be39c0a88c93627043d1c6de342be99562916a948a5933e3\",\"dweb:/ipfs/QmTFeE2vsjwn1pNeSMWAoQ4NivUTHza5DYMgJA854Ddx8F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation and verifies whether it's valid."
							},
							"isPayable()": {
								"notice": "Checks if the resolver can be sent ETH."
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes multiple attestations and verifies whether they are valid."
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes revocation of multiple attestation and verifies they can be revoked."
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation revocation and verifies if it can be revoked."
							},
							"version()": {
								"notice": "Returns the full semver contract version."
							}
						},
						"notice": "The base schema resolver contract.",
						"version": 1
					}
				}
			},
			"EAS/Semver.sol": {
				"Semver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "major",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "patch",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Create a new Semver instance.",
								"params": {
									"major": "Major version number.",
									"minor": "Minor version number.",
									"patch": "Patch version number."
								}
							},
							"version()": {
								"returns": {
									"_0": "Semver contract version as a string."
								}
							}
						},
						"title": "Semver",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"EAS/Semver.sol\":250:1182  contract Semver is ISemver {... */\n  mstore(0x40, 0xe0)\n    /* \"EAS/Semver.sol\":692:828  constructor(uint256 major, uint256 minor, uint256 patch) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"EAS/Semver.sol\":768:773  major */\n  dup3\n    /* \"EAS/Semver.sol\":759:773  _major = major */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"EAS/Semver.sol\":792:797  minor */\n  dup2\n    /* \"EAS/Semver.sol\":783:797  _minor = minor */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"EAS/Semver.sol\":816:821  patch */\n  dup1\n    /* \"EAS/Semver.sol\":807:821  _patch = patch */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"EAS/Semver.sol\":692:828  constructor(uint256 major, uint256 minor, uint256 patch) {... */\n  pop\n  pop\n  pop\n    /* \"EAS/Semver.sol\":250:1182  contract Semver is ISemver {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_11:\n    /* \"#utility.yul\":490:514   */\n  tag_19\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_20:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_12:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_22\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1357   */\ntag_3:\n    /* \"#utility.yul\":782:788   */\n  0x00\n    /* \"#utility.yul\":790:796   */\n  0x00\n    /* \"#utility.yul\":798:804   */\n  0x00\n    /* \"#utility.yul\":847:849   */\n  0x60\n    /* \"#utility.yul\":835:844   */\n  dup5\n    /* \"#utility.yul\":826:833   */\n  dup7\n    /* \"#utility.yul\":822:845   */\n  sub\n    /* \"#utility.yul\":818:850   */\n  slt\n    /* \"#utility.yul\":815:934   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":853:932   */\n  tag_25\n  tag_8\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":815:934   */\ntag_24:\n    /* \"#utility.yul\":973:974   */\n  0x00\n    /* \"#utility.yul\":998:1062   */\n  tag_26\n    /* \"#utility.yul\":1054:1061   */\n  dup7\n    /* \"#utility.yul\":1045:1051   */\n  dup3\n    /* \"#utility.yul\":1034:1043   */\n  dup8\n    /* \"#utility.yul\":1030:1052   */\n  add\n    /* \"#utility.yul\":998:1062   */\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":988:1062   */\n  swap4\n  pop\n    /* \"#utility.yul\":944:1072   */\n  pop\n    /* \"#utility.yul\":1111:1113   */\n  0x20\n    /* \"#utility.yul\":1137:1201   */\n  tag_27\n    /* \"#utility.yul\":1193:1200   */\n  dup7\n    /* \"#utility.yul\":1184:1190   */\n  dup3\n    /* \"#utility.yul\":1173:1182   */\n  dup8\n    /* \"#utility.yul\":1169:1191   */\n  add\n    /* \"#utility.yul\":1137:1201   */\n  tag_12\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":1127:1201   */\n  swap3\n  pop\n    /* \"#utility.yul\":1082:1211   */\n  pop\n    /* \"#utility.yul\":1250:1252   */\n  0x40\n    /* \"#utility.yul\":1276:1340   */\n  tag_28\n    /* \"#utility.yul\":1332:1339   */\n  dup7\n    /* \"#utility.yul\":1323:1329   */\n  dup3\n    /* \"#utility.yul\":1312:1321   */\n  dup8\n    /* \"#utility.yul\":1308:1330   */\n  add\n    /* \"#utility.yul\":1276:1340   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1266:1340   */\n  swap2\n  pop\n    /* \"#utility.yul\":1221:1350   */\n  pop\n    /* \"#utility.yul\":694:1357   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"EAS/Semver.sol\":250:1182  contract Semver is ISemver {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x23c684a78f9820665a20ed31bf386897191055b65494dcfb66ed5fda9b5cd46e\")\n  0x00\n  assignImmutable(\"0x7de0743527792565740abce014f44dd9e71031f5fd0bd2000c0f94c4df62d2aa\")\n  0x00\n  assignImmutable(\"0xe585060c6ad225b52739efa59556a11848af44f46a7f6ef69d0aef037ade7020\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"EAS/Semver.sol\":250:1182  contract Semver is ISemver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x54fd4d50\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"EAS/Semver.sol\":945:1180  function version() external view returns (string memory) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"EAS/Semver.sol\":987:1000  string memory */\n      0x60\n        /* \"EAS/Semver.sol\":1072:1096  Strings.toString(_major) */\n      tag_9\n        /* \"EAS/Semver.sol\":1089:1095  _major */\n      immutable(\"0xe585060c6ad225b52739efa59556a11848af44f46a7f6ef69d0aef037ade7020\")\n        /* \"EAS/Semver.sol\":1072:1088  Strings.toString */\n      tag_10\n        /* \"EAS/Semver.sol\":1072:1096  Strings.toString(_major) */\n      jump\t// in\n    tag_9:\n        /* \"EAS/Semver.sol\":1103:1127  Strings.toString(_minor) */\n      tag_11\n        /* \"EAS/Semver.sol\":1120:1126  _minor */\n      immutable(\"0x7de0743527792565740abce014f44dd9e71031f5fd0bd2000c0f94c4df62d2aa\")\n        /* \"EAS/Semver.sol\":1103:1119  Strings.toString */\n      tag_10\n        /* \"EAS/Semver.sol\":1103:1127  Strings.toString(_minor) */\n      jump\t// in\n    tag_11:\n        /* \"EAS/Semver.sol\":1134:1158  Strings.toString(_patch) */\n      tag_12\n        /* \"EAS/Semver.sol\":1151:1157  _patch */\n      immutable(\"0x23c684a78f9820665a20ed31bf386897191055b65494dcfb66ed5fda9b5cd46e\")\n        /* \"EAS/Semver.sol\":1134:1150  Strings.toString */\n      tag_10\n        /* \"EAS/Semver.sol\":1134:1158  Strings.toString(_patch) */\n      jump\t// in\n    tag_12:\n        /* \"EAS/Semver.sol\":1055:1159  abi.encodePacked(Strings.toString(_major), \".\", Strings.toString(_minor), \".\", Strings.toString(_patch)) */\n      add(0x20, mload(0x40))\n      tag_13\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"EAS/Semver.sol\":1012:1173  return... */\n      swap1\n      pop\n        /* \"EAS/Semver.sol\":945:1180  function version() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1269  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_16\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_17\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_16:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n    tag_18:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_21:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":944:950  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":940:942  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":936:951  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":928:934  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:952  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":917:952  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":986:990  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1015  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1114:1124  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1109:1111  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1102:1107  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1098:1112  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1093:1125  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1091  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1080:1126  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1170:1172  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1161:1172  value /= 10 */\n      dup6\n      dup2\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1203:1204  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1194:1199  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1194:1204  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n      tag_22\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1190:1211  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1246:1252  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1239:1252  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1269  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25316:26232  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25369:25376  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25388:25402  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25405:25406  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25388:25406  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25453:25461  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25444:25449  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25444:25461  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25440:25543  if (value >= 10 ** 64) {... */\n      tag_29\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25490:25498  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25481:25498  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_30\n      jumpi\n      tag_31\n      tag_26\n      jump\t// in\n    tag_31:\n    tag_30:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25526:25528  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25516:25528  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25440:25543  if (value >= 10 ** 64) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25569:25577  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25560:25565  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25560:25577  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25556:25659  if (value >= 10 ** 32) {... */\n      tag_32\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25606:25614  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25597:25614  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_33\n      jumpi\n      tag_34\n      tag_26\n      jump\t// in\n    tag_34:\n    tag_33:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25642:25644  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25632:25644  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25556:25659  if (value >= 10 ** 32) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25685:25693  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25676:25681  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25676:25693  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25672:25775  if (value >= 10 ** 16) {... */\n      tag_35\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25722:25730  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25713:25730  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_36\n      jumpi\n      tag_37\n      tag_26\n      jump\t// in\n    tag_37:\n    tag_36:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25758:25760  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25748:25760  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25672:25775  if (value >= 10 ** 16) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25801:25808  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25792:25797  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25792:25808  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25788:25888  if (value >= 10 ** 8) {... */\n      tag_38\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25837:25844  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25828:25844  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_39\n      jumpi\n      tag_40\n      tag_26\n      jump\t// in\n    tag_40:\n    tag_39:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25872:25873  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25862:25873  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25788:25888  if (value >= 10 ** 8) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25914:25921  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25905:25910  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25905:25921  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25901:26001  if (value >= 10 ** 4) {... */\n      tag_41\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25950:25957  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25941:25957  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_42\n      jumpi\n      tag_43\n      tag_26\n      jump\t// in\n    tag_43:\n    tag_42:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25985:25986  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25975:25986  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25901:26001  if (value >= 10 ** 4) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26027:26034  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26018:26023  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26018:26034  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26014:26114  if (value >= 10 ** 2) {... */\n      tag_44\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26063:26070  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26054:26070  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_45\n      jumpi\n      tag_46\n      tag_26\n      jump\t// in\n    tag_46:\n    tag_45:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26098:26099  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26088:26099  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26014:26114  if (value >= 10 ** 2) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26140:26147  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26131:26136  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26131:26147  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26127:26193  if (value >= 10 ** 1) {... */\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26177:26178  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26167:26178  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26127:26193  if (value >= 10 ** 1) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26219:26225  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26212:26225  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25316:26232  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_48:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_49:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_50:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_51:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_52:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_63\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_48\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":711:782   */\n      tag_64\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_49\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_65\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_50\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":881:910   */\n      tag_66\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_51\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_7:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_68\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_52\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1390   */\n    tag_53:\n        /* \"#utility.yul\":1344:1355   */\n      0x00\n        /* \"#utility.yul\":1381:1384   */\n      dup2\n        /* \"#utility.yul\":1366:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1786   */\n    tag_54:\n        /* \"#utility.yul\":1502:1505   */\n      0x00\n        /* \"#utility.yul\":1530:1569   */\n      tag_71\n        /* \"#utility.yul\":1563:1568   */\n      dup3\n        /* \"#utility.yul\":1530:1569   */\n      tag_48\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1585:1674   */\n      tag_72\n        /* \"#utility.yul\":1667:1673   */\n      dup2\n        /* \"#utility.yul\":1662:1665   */\n      dup6\n        /* \"#utility.yul\":1585:1674   */\n      tag_53\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1578:1674   */\n      swap4\n      pop\n        /* \"#utility.yul\":1683:1748   */\n      tag_73\n        /* \"#utility.yul\":1741:1747   */\n      dup2\n        /* \"#utility.yul\":1736:1739   */\n      dup6\n        /* \"#utility.yul\":1729:1733   */\n      0x20\n        /* \"#utility.yul\":1722:1727   */\n      dup7\n        /* \"#utility.yul\":1718:1734   */\n      add\n        /* \"#utility.yul\":1683:1748   */\n      tag_50\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1773:1779   */\n      dup1\n        /* \"#utility.yul\":1768:1771   */\n      dup5\n        /* \"#utility.yul\":1764:1780   */\n      add\n        /* \"#utility.yul\":1757:1780   */\n      swap2\n      pop\n        /* \"#utility.yul\":1506:1786   */\n      pop\n        /* \"#utility.yul\":1396:1786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1792:1943   */\n    tag_55:\n        /* \"#utility.yul\":1932:1935   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1920:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1930   */\n      add\n        /* \"#utility.yul\":1909:1936   */\n      mstore\n        /* \"#utility.yul\":1792:1943   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2349   */\n    tag_56:\n        /* \"#utility.yul\":2109:2112   */\n      0x00\n        /* \"#utility.yul\":2130:2214   */\n      tag_76\n        /* \"#utility.yul\":2212:2213   */\n      0x01\n        /* \"#utility.yul\":2207:2210   */\n      dup4\n        /* \"#utility.yul\":2130:2214   */\n      tag_53\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2123:2214   */\n      swap2\n      pop\n        /* \"#utility.yul\":2223:2316   */\n      tag_77\n        /* \"#utility.yul\":2312:2315   */\n      dup3\n        /* \"#utility.yul\":2223:2316   */\n      tag_55\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2341:2342   */\n      0x01\n        /* \"#utility.yul\":2336:2339   */\n      dup3\n        /* \"#utility.yul\":2332:2343   */\n      add\n        /* \"#utility.yul\":2325:2343   */\n      swap1\n      pop\n        /* \"#utility.yul\":1949:2349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2355:3482   */\n    tag_14:\n        /* \"#utility.yul\":2785:2788   */\n      0x00\n        /* \"#utility.yul\":2807:2902   */\n      tag_79\n        /* \"#utility.yul\":2898:2901   */\n      dup3\n        /* \"#utility.yul\":2889:2895   */\n      dup7\n        /* \"#utility.yul\":2807:2902   */\n      tag_54\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2800:2902   */\n      swap2\n      pop\n        /* \"#utility.yul\":2919:3067   */\n      tag_80\n        /* \"#utility.yul\":3063:3066   */\n      dup3\n        /* \"#utility.yul\":2919:3067   */\n      tag_56\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2912:3067   */\n      swap2\n      pop\n        /* \"#utility.yul\":3084:3179   */\n      tag_81\n        /* \"#utility.yul\":3175:3178   */\n      dup3\n        /* \"#utility.yul\":3166:3172   */\n      dup6\n        /* \"#utility.yul\":3084:3179   */\n      tag_54\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3077:3179   */\n      swap2\n      pop\n        /* \"#utility.yul\":3196:3344   */\n      tag_82\n        /* \"#utility.yul\":3340:3343   */\n      dup3\n        /* \"#utility.yul\":3196:3344   */\n      tag_56\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3189:3344   */\n      swap2\n      pop\n        /* \"#utility.yul\":3361:3456   */\n      tag_83\n        /* \"#utility.yul\":3452:3455   */\n      dup3\n        /* \"#utility.yul\":3443:3449   */\n      dup5\n        /* \"#utility.yul\":3361:3456   */\n      tag_54\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3354:3456   */\n      swap2\n      pop\n        /* \"#utility.yul\":3473:3476   */\n      dup2\n        /* \"#utility.yul\":3466:3476   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:3482   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3488:3668   */\n    tag_20:\n        /* \"#utility.yul\":3536:3613   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3533:3534   */\n      0x00\n        /* \"#utility.yul\":3526:3614   */\n      mstore\n        /* \"#utility.yul\":3633:3637   */\n      0x41\n        /* \"#utility.yul\":3630:3631   */\n      0x04\n        /* \"#utility.yul\":3623:3638   */\n      mstore\n        /* \"#utility.yul\":3657:3661   */\n      0x24\n        /* \"#utility.yul\":3654:3655   */\n      0x00\n        /* \"#utility.yul\":3647:3662   */\n      revert\n        /* \"#utility.yul\":3674:3854   */\n    tag_26:\n        /* \"#utility.yul\":3722:3799   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3719:3720   */\n      0x00\n        /* \"#utility.yul\":3712:3800   */\n      mstore\n        /* \"#utility.yul\":3819:3823   */\n      0x12\n        /* \"#utility.yul\":3816:3817   */\n      0x04\n        /* \"#utility.yul\":3809:3824   */\n      mstore\n        /* \"#utility.yul\":3843:3847   */\n      0x24\n        /* \"#utility.yul\":3840:3841   */\n      0x00\n        /* \"#utility.yul\":3833:3848   */\n      revert\n\n    auxdata: 0xa2646970667358221220c4e7c1f882b6cab4c2de81ec80eca081f03e5c133eee3619632e7dd6b06ac78e64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_4925": {
									"entryPoint": null,
									"id": 4925,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 85,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 81,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 94,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1360:15",
										"nodeType": "YulBlock",
										"src": "0:1360:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:32:15",
													"nodeType": "YulBlock",
													"src": "379:32:15",
													"statements": [
														{
															"nativeSrc": "389:16:15",
															"nodeType": "YulAssignment",
															"src": "389:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:15",
																"nodeType": "YulIdentifier",
																"src": "400:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:77:15"
											},
											{
												"body": {
													"nativeSrc": "460:79:15",
													"nodeType": "YulBlock",
													"src": "460:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:15",
																"nodeType": "YulBlock",
																"src": "517:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:15",
																					"nodeType": "YulLiteral",
																					"src": "526:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:15",
																					"nodeType": "YulLiteral",
																					"src": "529:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:15"
																			},
																			"nativeSrc": "519:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:15"
																		},
																		"nativeSrc": "519:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:15"
																				},
																				"nativeSrc": "490:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:15"
																		},
																		"nativeSrc": "480:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:15"
																},
																"nativeSrc": "473:43:15",
																"nodeType": "YulFunctionCall",
																"src": "473:43:15"
															},
															"nativeSrc": "470:63:15",
															"nodeType": "YulIf",
															"src": "470:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:15",
														"nodeType": "YulTypedName",
														"src": "453:5:15",
														"type": ""
													}
												],
												"src": "417:122:15"
											},
											{
												"body": {
													"nativeSrc": "608:80:15",
													"nodeType": "YulBlock",
													"src": "608:80:15",
													"statements": [
														{
															"nativeSrc": "618:22:15",
															"nodeType": "YulAssignment",
															"src": "618:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:15"
																},
																"nativeSrc": "627:13:15",
																"nodeType": "YulFunctionCall",
																"src": "627:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:15"
																},
																"nativeSrc": "649:33:15",
																"nodeType": "YulFunctionCall",
																"src": "649:33:15"
															},
															"nativeSrc": "649:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:15",
														"nodeType": "YulTypedName",
														"src": "586:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:15",
														"nodeType": "YulTypedName",
														"src": "594:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:15",
														"nodeType": "YulTypedName",
														"src": "602:5:15",
														"type": ""
													}
												],
												"src": "545:143:15"
											},
											{
												"body": {
													"nativeSrc": "805:552:15",
													"nodeType": "YulBlock",
													"src": "805:552:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "851:83:15",
																"nodeType": "YulBlock",
																"src": "851:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "853:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "853:77:15"
																			},
																			"nativeSrc": "853:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "853:79:15"
																		},
																		"nativeSrc": "853:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "853:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "826:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "835:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "835:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "822:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "822:3:15"
																		},
																		"nativeSrc": "822:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "822:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "847:2:15",
																		"nodeType": "YulLiteral",
																		"src": "847:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "818:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:15"
																},
																"nativeSrc": "818:32:15",
																"nodeType": "YulFunctionCall",
																"src": "818:32:15"
															},
															"nativeSrc": "815:119:15",
															"nodeType": "YulIf",
															"src": "815:119:15"
														},
														{
															"nativeSrc": "944:128:15",
															"nodeType": "YulBlock",
															"src": "944:128:15",
															"statements": [
																{
																	"nativeSrc": "959:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "959:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "973:1:15",
																		"nodeType": "YulLiteral",
																		"src": "973:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "963:6:15",
																			"nodeType": "YulTypedName",
																			"src": "963:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "988:74:15",
																	"nodeType": "YulAssignment",
																	"src": "988:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1034:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1034:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1045:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1045:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1030:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1030:3:15"
																				},
																				"nativeSrc": "1030:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1030:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1054:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1054:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "998:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "998:31:15"
																		},
																		"nativeSrc": "998:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "998:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "988:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "988:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1082:129:15",
															"nodeType": "YulBlock",
															"src": "1082:129:15",
															"statements": [
																{
																	"nativeSrc": "1097:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1097:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1111:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1111:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1101:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1101:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1127:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1127:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1173:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1173:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1184:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1184:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1169:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1169:3:15"
																				},
																				"nativeSrc": "1169:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1193:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1193:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1137:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1137:31:15"
																		},
																		"nativeSrc": "1137:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1127:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1127:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1221:129:15",
															"nodeType": "YulBlock",
															"src": "1221:129:15",
															"statements": [
																{
																	"nativeSrc": "1236:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1236:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1250:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1250:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1240:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1240:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1266:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1266:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1312:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1312:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1323:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1323:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1308:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1308:3:15"
																				},
																				"nativeSrc": "1308:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1308:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1332:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1332:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1276:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1276:31:15"
																		},
																		"nativeSrc": "1276:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1266:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1266:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:663:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "759:9:15",
														"nodeType": "YulTypedName",
														"src": "759:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "770:7:15",
														"nodeType": "YulTypedName",
														"src": "770:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "782:6:15",
														"nodeType": "YulTypedName",
														"src": "782:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "790:6:15",
														"nodeType": "YulTypedName",
														"src": "790:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "798:6:15",
														"nodeType": "YulTypedName",
														"src": "798:6:15",
														"type": ""
													}
												],
												"src": "694:663:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e060405234801561000f575f5ffd5b506040516105f23803806105f283398181016040528101906100319190610088565b82608081815250508160a081815250508060c081815250505050506100d8565b5f5ffd5b5f819050919050565b61006781610055565b8114610071575f5ffd5b50565b5f815190506100828161005e565b92915050565b5f5f5f6060848603121561009f5761009e610051565b5b5f6100ac86828701610074565b93505060206100bd86828701610074565b92505060406100ce86828701610074565b9150509250925092565b60805160a05160c0516104f36100ff5f395f60a401525f607b01525f605201526104f35ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806354fd4d501461002d575b5f5ffd5b61003561004b565b6040516100429190610379565b60405180910390f35b60606100767f00000000000000000000000000000000000000000000000000000000000000006100ee565b61009f7f00000000000000000000000000000000000000000000000000000000000000006100ee565b6100c87f00000000000000000000000000000000000000000000000000000000000000006100ee565b6040516020016100da9392919061041d565b604051602081830303815290604052905090565b60605f60016100fc846101b8565b0190505f8167ffffffffffffffff81111561011a57610119610463565b5b6040519080825280601f01601f19166020018201604052801561014c5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156101ad578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816101a2576101a1610490565b5b0494505f8503610159575b819350505050919050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610214577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161020a57610209610490565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610251576d04ee2d6d415b85acef8100000000838161024757610246610490565b5b0492506020810190505b662386f26fc10000831061028057662386f26fc10000838161027657610275610490565b5b0492506010810190505b6305f5e10083106102a9576305f5e100838161029f5761029e610490565b5b0492506008810190505b61271083106102ce5761271083816102c4576102c3610490565b5b0492506004810190505b606483106102f157606483816102e7576102e6610490565b5b0492506002810190505b600a8310610300576001810190505b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61034b82610309565b6103558185610313565b9350610365818560208601610323565b61036e81610331565b840191505092915050565b5f6020820190508181035f8301526103918184610341565b905092915050565b5f81905092915050565b5f6103ad82610309565b6103b78185610399565b93506103c7818560208601610323565b80840191505092915050565b7f2e000000000000000000000000000000000000000000000000000000000000005f82015250565b5f610407600183610399565b9150610412826103d3565b600182019050919050565b5f61042882866103a3565b9150610433826103fb565b915061043f82856103a3565b915061044a826103fb565b915061045682846103a3565b9150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220c4e7c1f882b6cab4c2de81ec80eca081f03e5c133eee3619632e7dd6b06ac78e64736f6c634300081b0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F2 CODESIZE SUB DUP1 PUSH2 0x5F2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x88 JUMP JUMPDEST DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH2 0xD8 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x55 JUMP JUMPDEST DUP2 EQ PUSH2 0x71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x82 DUP2 PUSH2 0x5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH2 0x9E PUSH2 0x51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAC DUP7 DUP3 DUP8 ADD PUSH2 0x74 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBD DUP7 DUP3 DUP8 ADD PUSH2 0x74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCE DUP7 DUP3 DUP8 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x4F3 PUSH2 0xFF PUSH0 CODECOPY PUSH0 PUSH1 0xA4 ADD MSTORE PUSH0 PUSH1 0x7B ADD MSTORE PUSH0 PUSH1 0x52 ADD MSTORE PUSH2 0x4F3 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x76 PUSH32 0x0 PUSH2 0xEE JUMP JUMPDEST PUSH2 0x9F PUSH32 0x0 PUSH2 0xEE JUMP JUMPDEST PUSH2 0xC8 PUSH32 0x0 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xFC DUP5 PUSH2 0x1B8 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AD JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A2 JUMPI PUSH2 0x1A1 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x159 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x214 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x20A JUMPI PUSH2 0x209 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x251 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x247 JUMPI PUSH2 0x246 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x280 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2A9 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x29F JUMPI PUSH2 0x29E PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2CE JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2C4 JUMPI PUSH2 0x2C3 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2F1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x300 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34B DUP3 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x355 DUP2 DUP6 PUSH2 0x313 JUMP JUMPDEST SWAP4 POP PUSH2 0x365 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST PUSH2 0x36E DUP2 PUSH2 0x331 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x391 DUP2 DUP5 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3AD DUP3 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x3B7 DUP2 DUP6 PUSH2 0x399 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x407 PUSH1 0x1 DUP4 PUSH2 0x399 JUMP JUMPDEST SWAP2 POP PUSH2 0x412 DUP3 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP3 DUP7 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x433 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 POP PUSH2 0x43F DUP3 DUP6 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x44A DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 POP PUSH2 0x456 DUP3 DUP5 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xE7 0xC1 0xF8 DUP3 0xB6 0xCA 0xB4 0xC2 0xDE DUP2 0xEC DUP1 0xEC LOG0 DUP2 CREATE RETURNDATACOPY TLOAD SGT RETURNDATACOPY 0xEE CALLDATASIZE NOT PUSH4 0x2E7DD6B0 PUSH11 0xC78E64736F6C634300081B STOP CALLER ",
							"sourceMap": "250:932:13:-:0;;;692:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;768:5;759:14;;;;;;792:5;783:14;;;;;;816:5;807:14;;;;;;692:136;;;250:932;;88:117:15;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:663::-;782:6;790;798;847:2;835:9;826:7;822:23;818:32;815:119;;;853:79;;:::i;:::-;815:119;973:1;998:64;1054:7;1045:6;1034:9;1030:22;998:64;:::i;:::-;988:74;;944:128;1111:2;1137:64;1193:7;1184:6;1173:9;1169:22;1137:64;:::i;:::-;1127:74;;1082:129;1250:2;1276:64;1332:7;1323:6;1312:9;1308:22;1276:64;:::i;:::-;1266:74;;1221:129;694:663;;;;;:::o;250:932:13:-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@log10_1927": {
									"entryPoint": 440,
									"id": 1927,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_297": {
									"entryPoint": 238,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@version_4953": {
									"entryPoint": 75,
									"id": 4953,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3857:15",
										"nodeType": "YulBlock",
										"src": "0:3857:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "208:73:15",
													"nodeType": "YulBlock",
													"src": "208:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:15"
																},
																"nativeSrc": "218:19:15",
																"nodeType": "YulFunctionCall",
																"src": "218:19:15"
															},
															"nativeSrc": "218:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:15"
														},
														{
															"nativeSrc": "246:29:15",
															"nodeType": "YulAssignment",
															"src": "246:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:15",
																		"nodeType": "YulLiteral",
																		"src": "270:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:15"
																},
																"nativeSrc": "261:14:15",
																"nodeType": "YulFunctionCall",
																"src": "261:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:15",
														"nodeType": "YulTypedName",
														"src": "180:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:15",
														"nodeType": "YulTypedName",
														"src": "185:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:15",
														"nodeType": "YulTypedName",
														"src": "196:11:15",
														"type": ""
													}
												],
												"src": "112:169:15"
											},
											{
												"body": {
													"nativeSrc": "349:77:15",
													"nodeType": "YulBlock",
													"src": "349:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:15"
																},
																"nativeSrc": "360:23:15",
																"nodeType": "YulFunctionCall",
																"src": "360:23:15"
															},
															"nativeSrc": "360:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:15"
																		},
																		"nativeSrc": "399:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:15",
																		"nodeType": "YulLiteral",
																		"src": "417:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:15"
																},
																"nativeSrc": "392:27:15",
																"nodeType": "YulFunctionCall",
																"src": "392:27:15"
															},
															"nativeSrc": "392:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:15",
														"nodeType": "YulTypedName",
														"src": "331:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:15",
														"nodeType": "YulTypedName",
														"src": "336:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:15",
														"nodeType": "YulTypedName",
														"src": "341:6:15",
														"type": ""
													}
												],
												"src": "287:139:15"
											},
											{
												"body": {
													"nativeSrc": "480:54:15",
													"nodeType": "YulBlock",
													"src": "480:54:15",
													"statements": [
														{
															"nativeSrc": "490:38:15",
															"nodeType": "YulAssignment",
															"src": "490:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:15",
																				"nodeType": "YulLiteral",
																				"src": "515:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:15"
																		},
																		"nativeSrc": "504:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:15",
																				"nodeType": "YulLiteral",
																				"src": "524:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:15"
																		},
																		"nativeSrc": "520:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:15"
																},
																"nativeSrc": "500:28:15",
																"nodeType": "YulFunctionCall",
																"src": "500:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:15",
														"nodeType": "YulTypedName",
														"src": "463:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:15",
														"nodeType": "YulTypedName",
														"src": "473:6:15",
														"type": ""
													}
												],
												"src": "432:102:15"
											},
											{
												"body": {
													"nativeSrc": "632:285:15",
													"nodeType": "YulBlock",
													"src": "632:285:15",
													"statements": [
														{
															"nativeSrc": "642:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:15"
																},
																"nativeSrc": "656:39:15",
																"nodeType": "YulFunctionCall",
																"src": "656:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:15",
																	"nodeType": "YulTypedName",
																	"src": "646:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:15",
															"nodeType": "YulAssignment",
															"src": "704:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:15"
																},
																"nativeSrc": "711:71:15",
																"nodeType": "YulFunctionCall",
																"src": "711:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:15",
																				"nodeType": "YulLiteral",
																				"src": "837:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:15"
																		},
																		"nativeSrc": "826:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:15"
																},
																"nativeSrc": "791:65:15",
																"nodeType": "YulFunctionCall",
																"src": "791:65:15"
															},
															"nativeSrc": "791:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:15"
														},
														{
															"nativeSrc": "865:46:15",
															"nodeType": "YulAssignment",
															"src": "865:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:15"
																		},
																		"nativeSrc": "881:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:15"
																},
																"nativeSrc": "872:39:15",
																"nodeType": "YulFunctionCall",
																"src": "872:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:15",
														"nodeType": "YulTypedName",
														"src": "613:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:15",
														"nodeType": "YulTypedName",
														"src": "620:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:15",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													}
												],
												"src": "540:377:15"
											},
											{
												"body": {
													"nativeSrc": "1041:195:15",
													"nodeType": "YulBlock",
													"src": "1041:195:15",
													"statements": [
														{
															"nativeSrc": "1051:26:15",
															"nodeType": "YulAssignment",
															"src": "1051:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:15"
																},
																"nativeSrc": "1059:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:15"
																		},
																		"nativeSrc": "1094:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:15"
																		},
																		"nativeSrc": "1113:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:15"
																},
																"nativeSrc": "1087:47:15",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:15"
															},
															"nativeSrc": "1087:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:15"
														},
														{
															"nativeSrc": "1143:86:15",
															"nodeType": "YulAssignment",
															"src": "1143:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:15"
																},
																"nativeSrc": "1151:78:15",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:15",
														"nodeType": "YulTypedName",
														"src": "1013:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:15",
														"nodeType": "YulTypedName",
														"src": "1025:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:15",
														"nodeType": "YulTypedName",
														"src": "1036:4:15",
														"type": ""
													}
												],
												"src": "923:313:15"
											},
											{
												"body": {
													"nativeSrc": "1356:34:15",
													"nodeType": "YulBlock",
													"src": "1356:34:15",
													"statements": [
														{
															"nativeSrc": "1366:18:15",
															"nodeType": "YulAssignment",
															"src": "1366:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "1381:3:15",
																"nodeType": "YulIdentifier",
																"src": "1381:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1366:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "1366:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1242:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1328:3:15",
														"nodeType": "YulTypedName",
														"src": "1328:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1333:6:15",
														"nodeType": "YulTypedName",
														"src": "1333:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1344:11:15",
														"nodeType": "YulTypedName",
														"src": "1344:11:15",
														"type": ""
													}
												],
												"src": "1242:148:15"
											},
											{
												"body": {
													"nativeSrc": "1506:280:15",
													"nodeType": "YulBlock",
													"src": "1506:280:15",
													"statements": [
														{
															"nativeSrc": "1516:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1516:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1563:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1563:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1530:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "1530:32:15"
																},
																"nativeSrc": "1530:39:15",
																"nodeType": "YulFunctionCall",
																"src": "1530:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1520:6:15",
																	"nodeType": "YulTypedName",
																	"src": "1520:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1578:96:15",
															"nodeType": "YulAssignment",
															"src": "1578:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1662:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1662:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1667:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1667:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1585:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "1585:76:15"
																},
																"nativeSrc": "1585:89:15",
																"nodeType": "YulFunctionCall",
																"src": "1585:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1578:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1722:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1722:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1729:4:15",
																				"nodeType": "YulLiteral",
																				"src": "1729:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1718:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1718:3:15"
																		},
																		"nativeSrc": "1718:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1718:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1683:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "1683:34:15"
																},
																"nativeSrc": "1683:65:15",
																"nodeType": "YulFunctionCall",
																"src": "1683:65:15"
															},
															"nativeSrc": "1683:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "1683:65:15"
														},
														{
															"nativeSrc": "1757:23:15",
															"nodeType": "YulAssignment",
															"src": "1757:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1768:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1773:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1773:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1764:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1764:3:15"
																},
																"nativeSrc": "1764:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1764:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1757:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1396:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1487:5:15",
														"nodeType": "YulTypedName",
														"src": "1487:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1494:3:15",
														"nodeType": "YulTypedName",
														"src": "1494:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1502:3:15",
														"nodeType": "YulTypedName",
														"src": "1502:3:15",
														"type": ""
													}
												],
												"src": "1396:390:15"
											},
											{
												"body": {
													"nativeSrc": "1898:45:15",
													"nodeType": "YulBlock",
													"src": "1898:45:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1920:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1928:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1928:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1916:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1916:3:15"
																		},
																		"nativeSrc": "1916:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1916:14:15"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "1932:3:15",
																		"nodeType": "YulLiteral",
																		"src": "1932:3:15",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1909:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:15"
																},
																"nativeSrc": "1909:27:15",
																"nodeType": "YulFunctionCall",
																"src": "1909:27:15"
															},
															"nativeSrc": "1909:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "1909:27:15"
														}
													]
												},
												"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
												"nativeSrc": "1792:151:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1890:6:15",
														"nodeType": "YulTypedName",
														"src": "1890:6:15",
														"type": ""
													}
												],
												"src": "1792:151:15"
											},
											{
												"body": {
													"nativeSrc": "2113:236:15",
													"nodeType": "YulBlock",
													"src": "2113:236:15",
													"statements": [
														{
															"nativeSrc": "2123:91:15",
															"nodeType": "YulAssignment",
															"src": "2123:91:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2207:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2207:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2212:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2130:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "2130:76:15"
																},
																"nativeSrc": "2130:84:15",
																"nodeType": "YulFunctionCall",
																"src": "2130:84:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2123:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2123:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2312:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2312:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																	"nativeSrc": "2223:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "2223:88:15"
																},
																"nativeSrc": "2223:93:15",
																"nodeType": "YulFunctionCall",
																"src": "2223:93:15"
															},
															"nativeSrc": "2223:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "2223:93:15"
														},
														{
															"nativeSrc": "2325:18:15",
															"nodeType": "YulAssignment",
															"src": "2325:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2336:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2336:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2341:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2341:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2332:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:15"
																},
																"nativeSrc": "2332:11:15",
																"nodeType": "YulFunctionCall",
																"src": "2332:11:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2325:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2325:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1949:400:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2101:3:15",
														"nodeType": "YulTypedName",
														"src": "2101:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2109:3:15",
														"nodeType": "YulTypedName",
														"src": "2109:3:15",
														"type": ""
													}
												],
												"src": "1949:400:15"
											},
											{
												"body": {
													"nativeSrc": "2789:693:15",
													"nodeType": "YulBlock",
													"src": "2789:693:15",
													"statements": [
														{
															"nativeSrc": "2800:102:15",
															"nodeType": "YulAssignment",
															"src": "2800:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2889:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2889:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2898:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2898:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2807:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "2807:81:15"
																},
																"nativeSrc": "2807:95:15",
																"nodeType": "YulFunctionCall",
																"src": "2807:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2800:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2800:3:15"
																}
															]
														},
														{
															"nativeSrc": "2912:155:15",
															"nodeType": "YulAssignment",
															"src": "2912:155:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3063:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3063:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2919:142:15",
																	"nodeType": "YulIdentifier",
																	"src": "2919:142:15"
																},
																"nativeSrc": "2919:148:15",
																"nodeType": "YulFunctionCall",
																"src": "2919:148:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2912:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2912:3:15"
																}
															]
														},
														{
															"nativeSrc": "3077:102:15",
															"nodeType": "YulAssignment",
															"src": "3077:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3166:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3166:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3175:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3175:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3084:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "3084:81:15"
																},
																"nativeSrc": "3084:95:15",
																"nodeType": "YulFunctionCall",
																"src": "3084:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3077:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3077:3:15"
																}
															]
														},
														{
															"nativeSrc": "3189:155:15",
															"nodeType": "YulAssignment",
															"src": "3189:155:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3340:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3340:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3196:142:15",
																	"nodeType": "YulIdentifier",
																	"src": "3196:142:15"
																},
																"nativeSrc": "3196:148:15",
																"nodeType": "YulFunctionCall",
																"src": "3196:148:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3189:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3189:3:15"
																}
															]
														},
														{
															"nativeSrc": "3354:102:15",
															"nodeType": "YulAssignment",
															"src": "3354:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3443:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3443:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3452:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3452:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3361:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "3361:81:15"
																},
																"nativeSrc": "3361:95:15",
																"nodeType": "YulFunctionCall",
																"src": "3361:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3354:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:15"
																}
															]
														},
														{
															"nativeSrc": "3466:10:15",
															"nodeType": "YulAssignment",
															"src": "3466:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "3473:3:15",
																"nodeType": "YulIdentifier",
																"src": "3473:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3466:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3466:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2355:1127:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2752:3:15",
														"nodeType": "YulTypedName",
														"src": "2752:3:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2758:6:15",
														"nodeType": "YulTypedName",
														"src": "2758:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2766:6:15",
														"nodeType": "YulTypedName",
														"src": "2766:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2774:6:15",
														"nodeType": "YulTypedName",
														"src": "2774:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2785:3:15",
														"nodeType": "YulTypedName",
														"src": "2785:3:15",
														"type": ""
													}
												],
												"src": "2355:1127:15"
											},
											{
												"body": {
													"nativeSrc": "3516:152:15",
													"nodeType": "YulBlock",
													"src": "3516:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3533:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3533:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3536:77:15",
																		"nodeType": "YulLiteral",
																		"src": "3536:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3526:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3526:6:15"
																},
																"nativeSrc": "3526:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3526:88:15"
															},
															"nativeSrc": "3526:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3526:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3630:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3633:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3633:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3623:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:15"
																},
																"nativeSrc": "3623:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3623:15:15"
															},
															"nativeSrc": "3623:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3623:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3654:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3654:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3657:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3657:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3647:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:15"
																},
																"nativeSrc": "3647:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3647:15:15"
															},
															"nativeSrc": "3647:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3647:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3488:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3488:180:15"
											},
											{
												"body": {
													"nativeSrc": "3702:152:15",
													"nodeType": "YulBlock",
													"src": "3702:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3719:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3719:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3722:77:15",
																		"nodeType": "YulLiteral",
																		"src": "3722:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3712:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:15"
																},
																"nativeSrc": "3712:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3712:88:15"
															},
															"nativeSrc": "3712:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3712:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3816:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3816:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3819:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3819:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3809:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:15"
																},
																"nativeSrc": "3809:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3809:15:15"
															},
															"nativeSrc": "3809:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3809:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3840:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3840:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3843:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3843:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3833:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:15"
																},
																"nativeSrc": "3833:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3833:15:15"
															},
															"nativeSrc": "3833:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3833:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "3674:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3674:180:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"4898": [
									{
										"length": 32,
										"start": 82
									}
								],
								"4900": [
									{
										"length": 32,
										"start": 123
									}
								],
								"4902": [
									{
										"length": 32,
										"start": 164
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806354fd4d501461002d575b5f5ffd5b61003561004b565b6040516100429190610379565b60405180910390f35b60606100767f00000000000000000000000000000000000000000000000000000000000000006100ee565b61009f7f00000000000000000000000000000000000000000000000000000000000000006100ee565b6100c87f00000000000000000000000000000000000000000000000000000000000000006100ee565b6040516020016100da9392919061041d565b604051602081830303815290604052905090565b60605f60016100fc846101b8565b0190505f8167ffffffffffffffff81111561011a57610119610463565b5b6040519080825280601f01601f19166020018201604052801561014c5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156101ad578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816101a2576101a1610490565b5b0494505f8503610159575b819350505050919050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610214577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161020a57610209610490565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610251576d04ee2d6d415b85acef8100000000838161024757610246610490565b5b0492506020810190505b662386f26fc10000831061028057662386f26fc10000838161027657610275610490565b5b0492506010810190505b6305f5e10083106102a9576305f5e100838161029f5761029e610490565b5b0492506008810190505b61271083106102ce5761271083816102c4576102c3610490565b5b0492506004810190505b606483106102f157606483816102e7576102e6610490565b5b0492506002810190505b600a8310610300576001810190505b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61034b82610309565b6103558185610313565b9350610365818560208601610323565b61036e81610331565b840191505092915050565b5f6020820190508181035f8301526103918184610341565b905092915050565b5f81905092915050565b5f6103ad82610309565b6103b78185610399565b93506103c7818560208601610323565b80840191505092915050565b7f2e000000000000000000000000000000000000000000000000000000000000005f82015250565b5f610407600183610399565b9150610412826103d3565b600182019050919050565b5f61042882866103a3565b9150610433826103fb565b915061043f82856103a3565b915061044a826103fb565b915061045682846103a3565b9150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220c4e7c1f882b6cab4c2de81ec80eca081f03e5c133eee3619632e7dd6b06ac78e64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x76 PUSH32 0x0 PUSH2 0xEE JUMP JUMPDEST PUSH2 0x9F PUSH32 0x0 PUSH2 0xEE JUMP JUMPDEST PUSH2 0xC8 PUSH32 0x0 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xFC DUP5 PUSH2 0x1B8 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AD JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A2 JUMPI PUSH2 0x1A1 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x159 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x214 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x20A JUMPI PUSH2 0x209 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x251 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x247 JUMPI PUSH2 0x246 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x280 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2A9 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x29F JUMPI PUSH2 0x29E PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2CE JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2C4 JUMPI PUSH2 0x2C3 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2F1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x300 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34B DUP3 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x355 DUP2 DUP6 PUSH2 0x313 JUMP JUMPDEST SWAP4 POP PUSH2 0x365 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST PUSH2 0x36E DUP2 PUSH2 0x331 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x391 DUP2 DUP5 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3AD DUP3 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x3B7 DUP2 DUP6 PUSH2 0x399 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x407 PUSH1 0x1 DUP4 PUSH2 0x399 JUMP JUMPDEST SWAP2 POP PUSH2 0x412 DUP3 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP3 DUP7 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x433 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 POP PUSH2 0x43F DUP3 DUP6 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x44A DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 POP PUSH2 0x456 DUP3 DUP5 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xE7 0xC1 0xF8 DUP3 0xB6 0xCA 0xB4 0xC2 0xDE DUP2 0xEC DUP1 0xEC LOG0 DUP2 CREATE RETURNDATACOPY TLOAD SGT RETURNDATACOPY 0xEE CALLDATASIZE NOT PUSH4 0x2E7DD6B0 PUSH11 0xC78E64736F6C634300081B STOP CALLER ",
							"sourceMap": "250:932:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:235;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;987:13;1072:24;1089:6;1072:16;:24::i;:::-;1103;1120:6;1103:16;:24::i;:::-;1134;1151:6;1134:16;:24::i;:::-;1055:104;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1012:161;;945:235;:::o;637:632:3:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;25316:916:4:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:148::-;1344:11;1381:3;1366:18;;1242:148;;;;:::o;1396:390::-;1502:3;1530:39;1563:5;1530:39;:::i;:::-;1585:89;1667:6;1662:3;1585:89;:::i;:::-;1578:96;;1683:65;1741:6;1736:3;1729:4;1722:5;1718:16;1683:65;:::i;:::-;1773:6;1768:3;1764:16;1757:23;;1506:280;1396:390;;;;:::o;1792:151::-;1932:3;1928:1;1920:6;1916:14;1909:27;1792:151;:::o;1949:400::-;2109:3;2130:84;2212:1;2207:3;2130:84;:::i;:::-;2123:91;;2223:93;2312:3;2223:93;:::i;:::-;2341:1;2336:3;2332:11;2325:18;;1949:400;;;:::o;2355:1127::-;2785:3;2807:95;2898:3;2889:6;2807:95;:::i;:::-;2800:102;;2919:148;3063:3;2919:148;:::i;:::-;2912:155;;3084:95;3175:3;3166:6;3084:95;:::i;:::-;3077:102;;3196:148;3340:3;3196:148;:::i;:::-;3189:155;;3361:95;3452:3;3443:6;3361:95;:::i;:::-;3354:102;;3473:3;3466:10;;2355:1127;;;;;;:::o;3488:180::-;3536:77;3533:1;3526:88;3633:4;3630:1;3623:15;3657:4;3654:1;3647:15;3674:180;3722:77;3719:1;3712:88;3819:4;3816:1;3809:15;3843:4;3840:1;3833:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "253400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"version()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 692,
									"end": 828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 692,
									"end": 828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 768,
									"end": 773,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 759,
									"end": 773,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 792,
									"end": 797,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 783,
									"end": 797,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 816,
									"end": 821,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 807,
									"end": 821,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 782,
									"end": 788,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 796,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 804,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 849,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 835,
									"end": 844,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 826,
									"end": 833,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 822,
									"end": 845,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 818,
									"end": 850,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 815,
									"end": 934,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 815,
									"end": 934,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 815,
									"end": 934,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 853,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 853,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 853,
									"end": 932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 853,
									"end": 932,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 853,
									"end": 932,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 815,
									"end": 934,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 815,
									"end": 934,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1034,
									"end": 1043,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1052,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 998,
									"end": 1062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 988,
									"end": 1062,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 988,
									"end": 1062,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 944,
									"end": 1072,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1111,
									"end": 1113,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 1193,
									"end": 1200,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1184,
									"end": 1190,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1182,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1191,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 1137,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1127,
									"end": 1201,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1127,
									"end": 1201,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1082,
									"end": 1211,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1250,
									"end": 1252,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 1332,
									"end": 1339,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1323,
									"end": 1329,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1312,
									"end": 1321,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 1276,
									"end": 1340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1266,
									"end": 1340,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1266,
									"end": 1340,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1221,
									"end": 1350,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 694,
									"end": 1357,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "tag",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "4902"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "4900"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "4898"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1182,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4e7c1f882b6cab4c2de81ec80eca081f03e5c133eee3619632e7dd6b06ac78e64736f6c634300081b0033",
									".code": [
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "54FD4D50"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1182,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 945,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 945,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1000,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4898"
										},
										{
											"begin": 1072,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1072,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1103,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4900"
										},
										{
											"begin": 1103,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1103,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1103,
											"end": 1127,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4902"
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1134,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1158,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1134,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1055,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 928,
											"end": 934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 952,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 917,
											"end": 952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 917,
											"end": 952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 990,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1109,
											"end": 1111,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1112,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1126,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1161,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1190,
											"end": 1211,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25369,
											"end": 25376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25388,
											"end": 25402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25405,
											"end": 25406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25388,
											"end": 25406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25388,
											"end": 25406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25453,
											"end": 25461,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 25444,
											"end": 25449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25444,
											"end": 25461,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25490,
											"end": 25498,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 25481,
											"end": 25498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25526,
											"end": 25528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25569,
											"end": 25577,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 25560,
											"end": 25565,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25560,
											"end": 25577,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25606,
											"end": 25614,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 25597,
											"end": 25614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25642,
											"end": 25644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25685,
											"end": 25693,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25676,
											"end": 25681,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25676,
											"end": 25693,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25722,
											"end": 25730,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 25713,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25758,
											"end": 25760,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25801,
											"end": 25808,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 25792,
											"end": 25797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25792,
											"end": 25808,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25837,
											"end": 25844,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 25828,
											"end": 25844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25872,
											"end": 25873,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25914,
											"end": 25921,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 25905,
											"end": 25910,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25905,
											"end": 25921,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25950,
											"end": 25957,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 25941,
											"end": 25957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25985,
											"end": 25986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26027,
											"end": 26034,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 26018,
											"end": 26023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 26018,
											"end": 26034,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 26063,
											"end": 26070,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 26054,
											"end": 26070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26098,
											"end": 26099,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26140,
											"end": 26147,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 26131,
											"end": 26136,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 26131,
											"end": 26147,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 26177,
											"end": 26178,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26219,
											"end": 26225,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1390,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1242,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1344,
											"end": 1355,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1384,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1390,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1390,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1390,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1390,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1786,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1396,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1502,
											"end": 1505,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1563,
											"end": 1568,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1530,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 1530,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1530,
											"end": 1569,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1530,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1585,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1662,
											"end": 1665,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1585,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1585,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1585,
											"end": 1674,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1585,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1578,
											"end": 1674,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1578,
											"end": 1674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1683,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1683,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1683,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1683,
											"end": 1748,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 1683,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1773,
											"end": 1779,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1780,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1506,
											"end": 1786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1786,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1786,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1792,
											"end": 1943,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1792,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1932,
											"end": 1935,
											"name": "PUSH",
											"source": 15,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1916,
											"end": 1930,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1792,
											"end": 1943,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1792,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2349,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 1949,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2109,
											"end": 2112,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2207,
											"end": 2210,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 2130,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2214,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 2130,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2123,
											"end": 2214,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2123,
											"end": 2214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2223,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2325,
											"end": 2343,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2325,
											"end": 2343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2349,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2349,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2785,
											"end": 2788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2898,
											"end": 2901,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2895,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 2807,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 2902,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2807,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2902,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2919,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 3067,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2919,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3067,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3067,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 3175,
											"end": 3178,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3166,
											"end": 3172,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3084,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3179,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 3084,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3179,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3196,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 3340,
											"end": 3343,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3196,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 3196,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3196,
											"end": 3344,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 3196,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3189,
											"end": 3344,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3189,
											"end": 3344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3361,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3452,
											"end": 3455,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3449,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3361,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3361,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3361,
											"end": 3456,
											"name": "tag",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3361,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3354,
											"end": 3456,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3354,
											"end": 3456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3473,
											"end": 3476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3466,
											"end": 3476,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3466,
											"end": 3476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3488,
											"end": 3668,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3613,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3533,
											"end": 3534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3633,
											"end": 3637,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3623,
											"end": 3638,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3657,
											"end": 3661,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3854,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 3674,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3722,
											"end": 3799,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3719,
											"end": 3720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3848,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"EAS/Common.sol",
								"EAS/IEAS.sol",
								"EAS/ISchemaRegistry.sol",
								"EAS/ISchemaResolver.sol",
								"EAS/ISemver.sol",
								"EAS/SchemaResolver.sol",
								"EAS/Semver.sol",
								"resolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"major\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Create a new Semver instance.\",\"params\":{\"major\":\"Major version number.\",\"minor\":\"Minor version number.\",\"patch\":\"Patch version number.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"Semver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"A simple contract for managing contract versions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"EAS/Semver.sol\":\"Semver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"EAS/ISemver.sol\":{\"keccak256\":\"0x6c6073e407395170dfc58d74be5e4cba5d2f6680d2c9aeade07e591dd7c6d5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f57462c6e329fcf5960e75e9f9a405429f416fec1debcfd4c79c2f10c04dd4\",\"dweb:/ipfs/QmehZy36QoFsBKMMbCo5Jmta5y3uU3so4e4C14MHzx2VDp\"]},\"EAS/Semver.sol\":{\"keccak256\":\"0xcb67b60a08b4acb41ccda1ee2a44bb3d4291f3da9ecd60eed49991bdbfafb972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eea3e91b983ce442be39c0a88c93627043d1c6de342be99562916a948a5933e3\",\"dweb:/ipfs/QmTFeE2vsjwn1pNeSMWAoQ4NivUTHza5DYMgJA854Ddx8F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"version()": {
								"notice": "Returns the full semver contract version."
							}
						},
						"notice": "A simple contract for managing contract versions.",
						"version": 1
					}
				}
			},
			"resolver.sol": {
				"OwnerRecipientResolver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IEAS",
									"name": "eas",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessDenied",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidEAS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPayable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiAttest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiRevoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "revoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The new attestation."
								},
								"returns": {
									"_0": "Whether the attestation is valid."
								}
							},
							"isPayable()": {
								"returns": {
									"_0": "Whether the resolver supports ETH transfers."
								}
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The new attestations.",
									"values": "Explicit ETH amounts which were sent with each attestation."
								},
								"returns": {
									"_0": "Whether all the attestations are valid."
								}
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The existing attestations to be revoked.",
									"values": "Explicit ETH amounts which were sent with each revocation."
								},
								"returns": {
									"_0": "Whether the attestations can be revoked."
								}
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The existing attestation to be revoked."
								},
								"returns": {
									"_0": "Whether the attestation can be revoked."
								}
							},
							"version()": {
								"returns": {
									"_0": "Semver contract version as a string."
								}
							}
						},
						"title": "A schema resolver that checks whether the sender is the owner of the contract behind attestation.recipient.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"resolver.sol\":344:3218  contract OwnerRecipientResolver is SchemaResolver {... */\n  mstore(0x40, 0x0100)\n    /* \"resolver.sol\":400:444  constructor(IEAS eas) SchemaResolver(eas) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"resolver.sol\":437:440  eas */\n  dup1\n    /* \"EAS/SchemaResolver.sol\":676:677  1 */\n  0x01\n    /* \"EAS/SchemaResolver.sol\":679:680  3 */\n  0x03\n    /* \"EAS/SchemaResolver.sol\":682:683  0 */\n  0x00\n    /* \"EAS/Semver.sol\":768:773  major */\n  dup3\n    /* \"EAS/Semver.sol\":759:773  _major = major */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"EAS/Semver.sol\":792:797  minor */\n  dup2\n    /* \"EAS/Semver.sol\":783:797  _minor = minor */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"EAS/Semver.sol\":816:821  patch */\n  dup1\n    /* \"EAS/Semver.sol\":807:821  _patch = patch */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"EAS/Semver.sol\":692:828  constructor(uint256 major, uint256 minor, uint256 patch) {... */\n  pop\n  pop\n  pop\n    /* \"EAS/SchemaResolver.sol\":723:724  0 */\n  0x00\n    /* \"EAS/SchemaResolver.sol\":699:725  address(eas) == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"EAS/SchemaResolver.sol\":707:710  eas */\n  dup2\n    /* \"EAS/SchemaResolver.sol\":699:725  address(eas) == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"EAS/SchemaResolver.sol\":695:771  if (address(eas) == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"EAS/SchemaResolver.sol\":748:760  InvalidEAS() */\n  mload(0x40)\n  0x83780ffe00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"EAS/SchemaResolver.sol\":695:771  if (address(eas) == address(0)) {... */\ntag_9:\n    /* \"EAS/SchemaResolver.sol\":788:791  eas */\n  dup1\n    /* \"EAS/SchemaResolver.sol\":781:791  _eas = eas */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"EAS/SchemaResolver.sol\":647:798  constructor(IEAS eas) Semver(1, 3, 0) {... */\n  pop\n    /* \"resolver.sol\":400:444  constructor(IEAS eas) SchemaResolver(eas) {} */\n  pop\n    /* \"resolver.sol\":344:3218  contract OwnerRecipientResolver is SchemaResolver {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_26\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_17:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_28\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_16\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_18:\n    /* \"#utility.yul\":769:806   */\n  tag_30\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_17\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  0x00\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_31:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_19:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_33\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_18\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1389   */\ntag_3:\n    /* \"#utility.yul\":1095:1101   */\n  0x00\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1132:1141   */\n  dup3\n    /* \"#utility.yul\":1123:1130   */\n  dup5\n    /* \"#utility.yul\":1119:1142   */\n  sub\n    /* \"#utility.yul\":1115:1147   */\n  slt\n    /* \"#utility.yul\":1112:1231   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1150:1229   */\n  tag_36\n  tag_13\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1112:1231   */\ntag_35:\n    /* \"#utility.yul\":1270:1271   */\n  0x00\n    /* \"#utility.yul\":1295:1372   */\n  tag_37\n    /* \"#utility.yul\":1364:1371   */\n  dup5\n    /* \"#utility.yul\":1355:1361   */\n  dup3\n    /* \"#utility.yul\":1344:1353   */\n  dup6\n    /* \"#utility.yul\":1340:1362   */\n  add\n    /* \"#utility.yul\":1295:1372   */\n  tag_19\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1285:1372   */\n  swap2\n  pop\n    /* \"#utility.yul\":1241:1382   */\n  pop\n    /* \"#utility.yul\":1012:1389   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"resolver.sol\":344:3218  contract OwnerRecipientResolver is SchemaResolver {... */\ntag_11:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2259d879c3ddbdea21c969f6c449c00063955c875b82cae8e1ca0111b45714a4\")\n  0x00\n  assignImmutable(\"0x23c684a78f9820665a20ed31bf386897191055b65494dcfb66ed5fda9b5cd46e\")\n  0x00\n  assignImmutable(\"0x7de0743527792565740abce014f44dd9e71031f5fd0bd2000c0f94c4df62d2aa\")\n  0x00\n  assignImmutable(\"0xe585060c6ad225b52739efa59556a11848af44f46a7f6ef69d0aef037ade7020\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"resolver.sol\":344:3218  contract OwnerRecipientResolver is SchemaResolver {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x54fd4d50\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x88e5b2d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x91db0b7e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xce46e046\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe49617e1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe60c3505\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"EAS/SchemaResolver.sol\":1140:1151  isPayable() */\n      tag_11\n        /* \"EAS/SchemaResolver.sol\":1140:1149  isPayable */\n      tag_12\n        /* \"EAS/SchemaResolver.sol\":1140:1151  isPayable() */\n      jump\t// in\n    tag_11:\n        /* \"EAS/SchemaResolver.sol\":1135:1197  if (!isPayable()) {... */\n      tag_13\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":1174:1186  NotPayable() */\n      mload(0x40)\n      0x1574f9f300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"EAS/SchemaResolver.sol\":1135:1197  if (!isPayable()) {... */\n    tag_13:\n        /* \"resolver.sol\":344:3218  contract OwnerRecipientResolver is SchemaResolver {... */\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"EAS/Semver.sol\":945:1180  function version() external view returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EAS/SchemaResolver.sol\":3124:4584  function multiRevoke(... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EAS/SchemaResolver.sol\":1433:2894  function multiAttest(... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EAS/SchemaResolver.sol\":972:1057  function isPayable() public pure virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      tag_12\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EAS/SchemaResolver.sol\":2936:3082  function revoke(Attestation calldata attestation) external payable onlyEAS returns (bool) {... */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EAS/SchemaResolver.sol\":1245:1391  function attest(Attestation calldata attestation) external payable onlyEAS returns (bool) {... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EAS/SchemaResolver.sol\":972:1057  function isPayable() public pure virtual returns (bool) {... */\n    tag_12:\n        /* \"EAS/SchemaResolver.sol\":1022:1026  bool */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":1045:1050  false */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":1038:1050  return false */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":972:1057  function isPayable() public pure virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"EAS/Semver.sol\":945:1180  function version() external view returns (string memory) {... */\n    tag_16:\n        /* \"EAS/Semver.sol\":987:1000  string memory */\n      0x60\n        /* \"EAS/Semver.sol\":1072:1096  Strings.toString(_major) */\n      tag_43\n        /* \"EAS/Semver.sol\":1089:1095  _major */\n      immutable(\"0xe585060c6ad225b52739efa59556a11848af44f46a7f6ef69d0aef037ade7020\")\n        /* \"EAS/Semver.sol\":1072:1088  Strings.toString */\n      tag_44\n        /* \"EAS/Semver.sol\":1072:1096  Strings.toString(_major) */\n      jump\t// in\n    tag_43:\n        /* \"EAS/Semver.sol\":1103:1127  Strings.toString(_minor) */\n      tag_45\n        /* \"EAS/Semver.sol\":1120:1126  _minor */\n      immutable(\"0x7de0743527792565740abce014f44dd9e71031f5fd0bd2000c0f94c4df62d2aa\")\n        /* \"EAS/Semver.sol\":1103:1119  Strings.toString */\n      tag_44\n        /* \"EAS/Semver.sol\":1103:1127  Strings.toString(_minor) */\n      jump\t// in\n    tag_45:\n        /* \"EAS/Semver.sol\":1134:1158  Strings.toString(_patch) */\n      tag_46\n        /* \"EAS/Semver.sol\":1151:1157  _patch */\n      immutable(\"0x23c684a78f9820665a20ed31bf386897191055b65494dcfb66ed5fda9b5cd46e\")\n        /* \"EAS/Semver.sol\":1134:1150  Strings.toString */\n      tag_44\n        /* \"EAS/Semver.sol\":1134:1158  Strings.toString(_patch) */\n      jump\t// in\n    tag_46:\n        /* \"EAS/Semver.sol\":1055:1159  abi.encodePacked(Strings.toString(_major), \".\", Strings.toString(_minor), \".\", Strings.toString(_patch)) */\n      add(0x20, mload(0x40))\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"EAS/Semver.sol\":1012:1173  return... */\n      swap1\n      pop\n        /* \"EAS/Semver.sol\":945:1180  function version() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"EAS/SchemaResolver.sol\":3124:4584  function multiRevoke(... */\n    tag_22:\n        /* \"EAS/SchemaResolver.sol\":3265:3269  bool */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      tag_50\n        /* \"EAS/SchemaResolver.sol\":901:909  _onlyEAS */\n      tag_51\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      jump\t// in\n    tag_50:\n        /* \"EAS/SchemaResolver.sol\":3281:3295  uint256 length */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":3298:3310  attestations */\n      dup6\n      dup6\n        /* \"EAS/SchemaResolver.sol\":3298:3317  attestations.length */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":3281:3317  uint256 length = attestations.length */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":3341:3347  values */\n      dup4\n      dup4\n        /* \"EAS/SchemaResolver.sol\":3341:3354  values.length */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":3331:3337  length */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":3331:3354  length != values.length */\n      eq\n        /* \"EAS/SchemaResolver.sol\":3327:3403  if (length != values.length) {... */\n      tag_53\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":3377:3392  InvalidLength() */\n      mload(0x40)\n      0x947d5a8400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"EAS/SchemaResolver.sol\":3327:3403  if (length != values.length) {... */\n    tag_53:\n        /* \"EAS/SchemaResolver.sol\":3810:3832  uint256 remainingValue */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":3835:3844  msg.value */\n      callvalue\n        /* \"EAS/SchemaResolver.sol\":3810:3844  uint256 remainingValue = msg.value */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":3860:3869  uint256 i */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":3872:3873  0 */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":3860:3873  uint256 i = 0 */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":3855:4556  for (uint256 i = 0; i < length; i = uncheckedInc(i)) {... */\n    tag_54:\n        /* \"EAS/SchemaResolver.sol\":3879:3885  length */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":3875:3876  i */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":3875:3885  i < length */\n      lt\n        /* \"EAS/SchemaResolver.sol\":3855:4556  for (uint256 i = 0; i < length; i = uncheckedInc(i)) {... */\n      iszero\n      tag_55\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":4012:4025  uint256 value */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":4028:4034  values */\n      dup7\n      dup7\n        /* \"EAS/SchemaResolver.sol\":4035:4036  i */\n      dup4\n        /* \"EAS/SchemaResolver.sol\":4028:4037  values[i] */\n      dup2\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n    tag_57:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"EAS/SchemaResolver.sol\":4012:4037  uint256 value = values[i] */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":4063:4077  remainingValue */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":4055:4060  value */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":4055:4077  value > remainingValue */\n      gt\n        /* \"EAS/SchemaResolver.sol\":4051:4138  if (value > remainingValue) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":4104:4123  InsufficientValue() */\n      mload(0x40)\n      0x1101129400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"EAS/SchemaResolver.sol\":4051:4138  if (value > remainingValue) {... */\n    tag_60:\n        /* \"EAS/SchemaResolver.sol\":4266:4298  onRevoke(attestations[i], value) */\n      tag_61\n        /* \"EAS/SchemaResolver.sol\":4275:4287  attestations */\n      dup10\n      dup10\n        /* \"EAS/SchemaResolver.sol\":4288:4289  i */\n      dup5\n        /* \"EAS/SchemaResolver.sol\":4275:4290  attestations[i] */\n      dup2\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_59\n      jump\t// in\n    tag_63:\n    tag_62:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"EAS/SchemaResolver.sol\":4292:4297  value */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":4266:4274  onRevoke */\n      tag_66\n        /* \"EAS/SchemaResolver.sol\":4266:4298  onRevoke(attestations[i], value) */\n      jump\t// in\n    tag_61:\n        /* \"EAS/SchemaResolver.sol\":4261:4345  if (!onRevoke(attestations[i], value)) {... */\n      tag_67\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":4325:4330  false */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":4318:4330  return false */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_52)\n        /* \"EAS/SchemaResolver.sol\":4261:4345  if (!onRevoke(attestations[i], value)) {... */\n    tag_67:\n        /* \"EAS/SchemaResolver.sol\":4526:4531  value */\n      dup1\n        /* \"EAS/SchemaResolver.sol\":4508:4531  remainingValue -= value */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"EAS/SchemaResolver.sol\":3908:4556  {... */\n      pop\n        /* \"EAS/SchemaResolver.sol\":3891:3906  uncheckedInc(i) */\n      tag_68\n        /* \"EAS/SchemaResolver.sol\":3904:3905  i */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":3891:3903  uncheckedInc */\n      tag_69\n        /* \"EAS/SchemaResolver.sol\":3891:3906  uncheckedInc(i) */\n      jump\t// in\n    tag_68:\n        /* \"EAS/SchemaResolver.sol\":3887:3906  i = uncheckedInc(i) */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":3855:4556  for (uint256 i = 0; i < length; i = uncheckedInc(i)) {... */\n      jump(tag_54)\n    tag_55:\n      pop\n        /* \"EAS/SchemaResolver.sol\":4573:4577  true */\n      0x01\n        /* \"EAS/SchemaResolver.sol\":4566:4577  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"EAS/SchemaResolver.sol\":922:923  _ */\n    tag_52:\n        /* \"EAS/SchemaResolver.sol\":3124:4584  function multiRevoke(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"EAS/SchemaResolver.sol\":1433:2894  function multiAttest(... */\n    tag_27:\n        /* \"EAS/SchemaResolver.sol\":1574:1578  bool */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      tag_71\n        /* \"EAS/SchemaResolver.sol\":901:909  _onlyEAS */\n      tag_51\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      jump\t// in\n    tag_71:\n        /* \"EAS/SchemaResolver.sol\":1590:1604  uint256 length */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":1607:1619  attestations */\n      dup6\n      dup6\n        /* \"EAS/SchemaResolver.sol\":1607:1626  attestations.length */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":1590:1626  uint256 length = attestations.length */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":1650:1656  values */\n      dup4\n      dup4\n        /* \"EAS/SchemaResolver.sol\":1650:1663  values.length */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":1640:1646  length */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":1640:1663  length != values.length */\n      eq\n        /* \"EAS/SchemaResolver.sol\":1636:1712  if (length != values.length) {... */\n      tag_73\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":1686:1701  InvalidLength() */\n      mload(0x40)\n      0x947d5a8400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"EAS/SchemaResolver.sol\":1636:1712  if (length != values.length) {... */\n    tag_73:\n        /* \"EAS/SchemaResolver.sol\":2119:2141  uint256 remainingValue */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":2144:2153  msg.value */\n      callvalue\n        /* \"EAS/SchemaResolver.sol\":2119:2153  uint256 remainingValue = msg.value */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":2169:2178  uint256 i */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":2181:2182  0 */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":2169:2182  uint256 i = 0 */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":2164:2866  for (uint256 i = 0; i < length; i = uncheckedInc(i)) {... */\n    tag_74:\n        /* \"EAS/SchemaResolver.sol\":2188:2194  length */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":2184:2185  i */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":2184:2194  i < length */\n      lt\n        /* \"EAS/SchemaResolver.sol\":2164:2866  for (uint256 i = 0; i < length; i = uncheckedInc(i)) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":2321:2334  uint256 value */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":2337:2343  values */\n      dup7\n      dup7\n        /* \"EAS/SchemaResolver.sol\":2344:2345  i */\n      dup4\n        /* \"EAS/SchemaResolver.sol\":2337:2346  values[i] */\n      dup2\n      dup2\n      lt\n      tag_77\n      jumpi\n      tag_78\n      tag_59\n      jump\t// in\n    tag_78:\n    tag_77:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"EAS/SchemaResolver.sol\":2321:2346  uint256 value = values[i] */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":2372:2386  remainingValue */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":2364:2369  value */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":2364:2386  value > remainingValue */\n      gt\n        /* \"EAS/SchemaResolver.sol\":2360:2447  if (value > remainingValue) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":2413:2432  InsufficientValue() */\n      mload(0x40)\n      0x1101129400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"EAS/SchemaResolver.sol\":2360:2447  if (value > remainingValue) {... */\n    tag_79:\n        /* \"EAS/SchemaResolver.sol\":2576:2608  onAttest(attestations[i], value) */\n      tag_80\n        /* \"EAS/SchemaResolver.sol\":2585:2597  attestations */\n      dup10\n      dup10\n        /* \"EAS/SchemaResolver.sol\":2598:2599  i */\n      dup5\n        /* \"EAS/SchemaResolver.sol\":2585:2600  attestations[i] */\n      dup2\n      dup2\n      lt\n      tag_81\n      jumpi\n      tag_82\n      tag_59\n      jump\t// in\n    tag_82:\n    tag_81:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_83:\n        /* \"EAS/SchemaResolver.sol\":2602:2607  value */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":2576:2584  onAttest */\n      tag_84\n        /* \"EAS/SchemaResolver.sol\":2576:2608  onAttest(attestations[i], value) */\n      jump\t// in\n    tag_80:\n        /* \"EAS/SchemaResolver.sol\":2571:2655  if (!onAttest(attestations[i], value)) {... */\n      tag_85\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":2635:2640  false */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":2628:2640  return false */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_72)\n        /* \"EAS/SchemaResolver.sol\":2571:2655  if (!onAttest(attestations[i], value)) {... */\n    tag_85:\n        /* \"EAS/SchemaResolver.sol\":2836:2841  value */\n      dup1\n        /* \"EAS/SchemaResolver.sol\":2818:2841  remainingValue -= value */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"EAS/SchemaResolver.sol\":2217:2866  {... */\n      pop\n        /* \"EAS/SchemaResolver.sol\":2200:2215  uncheckedInc(i) */\n      tag_86\n        /* \"EAS/SchemaResolver.sol\":2213:2214  i */\n      dup2\n        /* \"EAS/SchemaResolver.sol\":2200:2212  uncheckedInc */\n      tag_69\n        /* \"EAS/SchemaResolver.sol\":2200:2215  uncheckedInc(i) */\n      jump\t// in\n    tag_86:\n        /* \"EAS/SchemaResolver.sol\":2196:2215  i = uncheckedInc(i) */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":2164:2866  for (uint256 i = 0; i < length; i = uncheckedInc(i)) {... */\n      jump(tag_74)\n    tag_75:\n      pop\n        /* \"EAS/SchemaResolver.sol\":2883:2887  true */\n      0x01\n        /* \"EAS/SchemaResolver.sol\":2876:2887  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"EAS/SchemaResolver.sol\":922:923  _ */\n    tag_72:\n        /* \"EAS/SchemaResolver.sol\":1433:2894  function multiAttest(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"EAS/SchemaResolver.sol\":2936:3082  function revoke(Attestation calldata attestation) external payable onlyEAS returns (bool) {... */\n    tag_35:\n        /* \"EAS/SchemaResolver.sol\":3020:3024  bool */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      tag_88\n        /* \"EAS/SchemaResolver.sol\":901:909  _onlyEAS */\n      tag_51\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      jump\t// in\n    tag_88:\n        /* \"EAS/SchemaResolver.sol\":3043:3075  onRevoke(attestation, msg.value) */\n      tag_90\n        /* \"EAS/SchemaResolver.sol\":3052:3063  attestation */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":3065:3074  msg.value */\n      callvalue\n        /* \"EAS/SchemaResolver.sol\":3043:3051  onRevoke */\n      tag_66\n        /* \"EAS/SchemaResolver.sol\":3043:3075  onRevoke(attestation, msg.value) */\n      jump\t// in\n    tag_90:\n        /* \"EAS/SchemaResolver.sol\":3036:3075  return onRevoke(attestation, msg.value) */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":2936:3082  function revoke(Attestation calldata attestation) external payable onlyEAS returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"EAS/SchemaResolver.sol\":1245:1391  function attest(Attestation calldata attestation) external payable onlyEAS returns (bool) {... */\n    tag_39:\n        /* \"EAS/SchemaResolver.sol\":1329:1333  bool */\n      0x00\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      tag_92\n        /* \"EAS/SchemaResolver.sol\":901:909  _onlyEAS */\n      tag_51\n        /* \"EAS/SchemaResolver.sol\":901:911  _onlyEAS() */\n      jump\t// in\n    tag_92:\n        /* \"EAS/SchemaResolver.sol\":1352:1384  onAttest(attestation, msg.value) */\n      tag_94\n        /* \"EAS/SchemaResolver.sol\":1361:1372  attestation */\n      dup3\n        /* \"EAS/SchemaResolver.sol\":1374:1383  msg.value */\n      callvalue\n        /* \"EAS/SchemaResolver.sol\":1352:1360  onAttest */\n      tag_84\n        /* \"EAS/SchemaResolver.sol\":1352:1384  onAttest(attestation, msg.value) */\n      jump\t// in\n    tag_94:\n        /* \"EAS/SchemaResolver.sol\":1345:1384  return onAttest(attestation, msg.value) */\n      swap1\n      pop\n        /* \"EAS/SchemaResolver.sol\":1245:1391  function attest(Attestation calldata attestation) external payable onlyEAS returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1269  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_98\n      jumpi\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n    tag_98:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":944:950  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":940:942  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":936:951  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":928:934  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:952  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":917:952  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":986:990  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1015  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1114:1124  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1109:1111  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1102:1107  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1098:1112  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1093:1125  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1091  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1080:1126  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1170:1172  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1161:1172  value /= 10 */\n      dup6\n      dup2\n      tag_104\n      jumpi\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n    tag_104:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1203:1204  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1194:1199  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1194:1204  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1190:1211  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1246:1252  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1239:1252  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1269  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"EAS/SchemaResolver.sol\":6031:6159  function _onlyEAS() private view {... */\n    tag_51:\n        /* \"EAS/SchemaResolver.sol\":6100:6104  _eas */\n      immutable(\"0x2259d879c3ddbdea21c969f6c449c00063955c875b82cae8e1ca0111b45714a4\")\n        /* \"EAS/SchemaResolver.sol\":6078:6105  msg.sender != address(_eas) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EAS/SchemaResolver.sol\":6078:6088  msg.sender */\n      caller\n        /* \"EAS/SchemaResolver.sol\":6078:6105  msg.sender != address(_eas) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"EAS/SchemaResolver.sol\":6074:6153  if (msg.sender != address(_eas)) {... */\n      tag_109\n      jumpi\n        /* \"EAS/SchemaResolver.sol\":6128:6142  AccessDenied() */\n      mload(0x40)\n      0x4ca8886700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"EAS/SchemaResolver.sol\":6074:6153  if (msg.sender != address(_eas)) {... */\n    tag_109:\n        /* \"EAS/SchemaResolver.sol\":6031:6159  function _onlyEAS() private view {... */\n      jump\t// out\n        /* \"resolver.sol\":3075:3216  function onRevoke(Attestation calldata /*attestation*/, uint256 /*value*/) internal pure override returns (bool) {... */\n    tag_66:\n        /* \"resolver.sol\":3182:3186  bool */\n      0x00\n        /* \"resolver.sol\":3205:3209  true */\n      0x01\n        /* \"resolver.sol\":3198:3209  return true */\n      swap1\n      pop\n        /* \"resolver.sol\":3075:3216  function onRevoke(Attestation calldata /*attestation*/, uint256 /*value*/) internal pure override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"EAS/Common.sol\":1397:1499  function uncheckedInc(uint256 i) pure returns (uint256 j) {... */\n    tag_69:\n        /* \"EAS/Common.sol\":1444:1453  uint256 j */\n      0x00\n        /* \"EAS/Common.sol\":1489:1490  1 */\n      0x01\n        /* \"EAS/Common.sol\":1485:1486  i */\n      dup3\n        /* \"EAS/Common.sol\":1485:1490  i + 1 */\n      add\n        /* \"EAS/Common.sol\":1481:1490  j = i + 1 */\n      swap1\n      pop\n        /* \"EAS/Common.sol\":1397:1499  function uncheckedInc(uint256 i) pure returns (uint256 j) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"resolver.sol\":450:2101  function onAttest(Attestation calldata attestation, uint256 /*value*/) internal view override returns (bool) {... */\n    tag_84:\n        /* \"resolver.sol\":553:557  bool */\n      0x00\n        /* \"resolver.sol\":698:699  0 */\n      0x00\n        /* \"resolver.sol\":665:700  attestation.recipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"resolver.sol\":665:676  attestation */\n      dup4\n        /* \"resolver.sol\":665:686  attestation.recipient */\n      0xc0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"resolver.sol\":665:700  attestation.recipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"resolver.sol\":661:739  if (attestation.recipient == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"resolver.sol\":723:728  false */\n      0x00\n        /* \"resolver.sol\":716:728  return false */\n      swap1\n      pop\n      jump(tag_112)\n        /* \"resolver.sol\":661:739  if (attestation.recipient == address(0)) {... */\n    tag_115:\n        /* \"resolver.sol\":813:830  bool ownableCheck */\n      0x00\n        /* \"resolver.sol\":833:878  extractOwnableCheckFromData(attestation.data) */\n      tag_116\n        /* \"resolver.sol\":861:872  attestation */\n      dup5\n        /* \"resolver.sol\":861:877  attestation.data */\n      dup1\n      0x0120\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"resolver.sol\":833:878  extractOwnableCheckFromData(attestation.data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"resolver.sol\":833:860  extractOwnableCheckFromData */\n      tag_119\n        /* \"resolver.sol\":833:878  extractOwnableCheckFromData(attestation.data) */\n      jump\t// in\n    tag_116:\n        /* \"resolver.sol\":813:878  bool ownableCheck = extractOwnableCheckFromData(attestation.data) */\n      swap1\n      pop\n        /* \"resolver.sol\":946:958  ownableCheck */\n      dup1\n        /* \"resolver.sol\":941:996  if (!ownableCheck) {... */\n      tag_120\n      jumpi\n        /* \"resolver.sol\":981:985  true */\n      0x01\n        /* \"resolver.sol\":974:985  return true */\n      swap2\n      pop\n      pop\n      jump(tag_112)\n        /* \"resolver.sol\":941:996  if (!ownableCheck) {... */\n    tag_120:\n        /* \"resolver.sol\":1252:1253  0 */\n      0x00\n        /* \"resolver.sol\":1215:1226  attestation */\n      dup5\n        /* \"resolver.sol\":1215:1236  attestation.recipient */\n      0xc0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_121:\n        /* \"resolver.sol\":1215:1248  attestation.recipient.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"resolver.sol\":1215:1253  attestation.recipient.code.length == 0 */\n      sub\n        /* \"resolver.sol\":1211:1292  if (attestation.recipient.code.length == 0) {... */\n      tag_122\n      jumpi\n        /* \"resolver.sol\":1276:1281  false */\n      0x00\n        /* \"resolver.sol\":1269:1281  return false */\n      swap2\n      pop\n      pop\n      jump(tag_112)\n        /* \"resolver.sol\":1211:1292  if (attestation.recipient.code.length == 0) {... */\n    tag_122:\n        /* \"resolver.sol\":1368:1390  uint256 currentChainId */\n      0x00\n        /* \"resolver.sol\":1441:1450  chainid() */\n      chainid\n        /* \"resolver.sol\":1423:1450  currentChainId := chainid() */\n      swap1\n      pop\n        /* \"resolver.sol\":1478:1501  uint256 expectedChainId */\n      0x00\n        /* \"resolver.sol\":1504:1544  extractChainIdFromData(attestation.data) */\n      tag_123\n        /* \"resolver.sol\":1527:1538  attestation */\n      dup7\n        /* \"resolver.sol\":1527:1543  attestation.data */\n      dup1\n      0x0120\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_124:\n        /* \"resolver.sol\":1504:1544  extractChainIdFromData(attestation.data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"resolver.sol\":1504:1526  extractChainIdFromData */\n      tag_125\n        /* \"resolver.sol\":1504:1544  extractChainIdFromData(attestation.data) */\n      jump\t// in\n    tag_123:\n        /* \"resolver.sol\":1478:1544  uint256 expectedChainId = extractChainIdFromData(attestation.data) */\n      swap1\n      pop\n        /* \"resolver.sol\":1576:1591  expectedChainId */\n      dup1\n        /* \"resolver.sol\":1558:1572  currentChainId */\n      dup3\n        /* \"resolver.sol\":1558:1591  currentChainId != expectedChainId */\n      eq\n        /* \"resolver.sol\":1554:1630  if (currentChainId != expectedChainId) {... */\n      tag_126\n      jumpi\n        /* \"resolver.sol\":1614:1619  false */\n      0x00\n        /* \"resolver.sol\":1607:1619  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_112)\n        /* \"resolver.sol\":1554:1630  if (currentChainId != expectedChainId) {... */\n    tag_126:\n        /* \"resolver.sol\":1698:1721  Ownable ownableContract */\n      0x00\n        /* \"resolver.sol\":1732:1743  attestation */\n      dup7\n        /* \"resolver.sol\":1732:1753  attestation.recipient */\n      0xc0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_127:\n        /* \"resolver.sol\":1698:1754  Ownable ownableContract = Ownable(attestation.recipient) */\n      swap1\n      pop\n        /* \"resolver.sol\":1769:1784  ownableContract */\n      dup1\n        /* \"resolver.sol\":1769:1790  ownableContract.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"resolver.sol\":1769:1792  ownableContract.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_128\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      0x01\n    tag_128:\n        /* \"resolver.sol\":1765:2095  try ownableContract.owner() returns (address owner) {... */\n      tag_131\n      jumpi\n        /* \"resolver.sol\":2079:2084  false */\n      0x00\n        /* \"resolver.sol\":2072:2084  return false */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_112)\n        /* \"resolver.sol\":1765:2095  try ownableContract.owner() returns (address owner) {... */\n    tag_131:\n        /* \"resolver.sol\":1939:1944  owner */\n      dup1\n        /* \"resolver.sol\":1915:1944  attestation.attester == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"resolver.sol\":1915:1926  attestation */\n      dup9\n        /* \"resolver.sol\":1915:1935  attestation.attester */\n      0xe0\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_136:\n        /* \"resolver.sol\":1915:1944  attestation.attester == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"resolver.sol\":1908:1944  return attestation.attester == owner */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"resolver.sol\":450:2101  function onAttest(Attestation calldata attestation, uint256 /*value*/) internal view override returns (bool) {... */\n    tag_112:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25316:26232  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25369:25376  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25388:25402  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25405:25406  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25388:25406  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25453:25461  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25444:25449  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25444:25461  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25440:25543  if (value >= 10 ** 64) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25490:25498  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25481:25498  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_139\n      jumpi\n      tag_140\n      tag_106\n      jump\t// in\n    tag_140:\n    tag_139:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25526:25528  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25516:25528  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25440:25543  if (value >= 10 ** 64) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25569:25577  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25560:25565  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25560:25577  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25556:25659  if (value >= 10 ** 32) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25606:25614  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25597:25614  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_142\n      jumpi\n      tag_143\n      tag_106\n      jump\t// in\n    tag_143:\n    tag_142:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25642:25644  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25632:25644  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25556:25659  if (value >= 10 ** 32) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25685:25693  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25676:25681  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25676:25693  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25672:25775  if (value >= 10 ** 16) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25722:25730  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25713:25730  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_145\n      jumpi\n      tag_146\n      tag_106\n      jump\t// in\n    tag_146:\n    tag_145:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25758:25760  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25748:25760  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25672:25775  if (value >= 10 ** 16) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25801:25808  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25792:25797  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25792:25808  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25788:25888  if (value >= 10 ** 8) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25837:25844  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25828:25844  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_148\n      jumpi\n      tag_149\n      tag_106\n      jump\t// in\n    tag_149:\n    tag_148:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25872:25873  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25862:25873  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25788:25888  if (value >= 10 ** 8) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25914:25921  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25905:25910  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25905:25921  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25901:26001  if (value >= 10 ** 4) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25950:25957  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25941:25957  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_151\n      jumpi\n      tag_152\n      tag_106\n      jump\t// in\n    tag_152:\n    tag_151:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25985:25986  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25975:25986  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25901:26001  if (value >= 10 ** 4) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26027:26034  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26018:26023  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26018:26034  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26014:26114  if (value >= 10 ** 2) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26063:26070  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26054:26070  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_154\n      jumpi\n      tag_155\n      tag_106\n      jump\t// in\n    tag_155:\n    tag_154:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26098:26099  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26088:26099  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26014:26114  if (value >= 10 ** 2) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26140:26147  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26131:26136  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26131:26147  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26127:26193  if (value >= 10 ** 1) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26177:26178  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26167:26178  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26127:26193  if (value >= 10 ** 1) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26219:26225  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26212:26225  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25316:26232  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"resolver.sol\":2555:3069  function extractOwnableCheckFromData(bytes memory data) internal pure returns (bool) {... */\n    tag_119:\n        /* \"resolver.sol\":2634:2638  bool */\n      0x00\n        /* \"resolver.sol\":2673:2676  288 */\n      0x0120\n        /* \"resolver.sol\":2658:2662  data */\n      dup3\n        /* \"resolver.sol\":2658:2669  data.length */\n      mload\n        /* \"resolver.sol\":2658:2676  data.length >= 288 */\n      lt\n      iszero\n        /* \"resolver.sol\":2650:2695  require(data.length >= 288, \"Data too short\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"resolver.sol\":2807:2829  uint256 extractedValue */\n      0x00\n        /* \"resolver.sol\":2896:2899  288 */\n      0x0120\n        /* \"resolver.sol\":2890:2894  data */\n      dup4\n        /* \"resolver.sol\":2886:2900  add(data, 288) */\n      add\n        /* \"resolver.sol\":2880:2901  mload(add(data, 288)) */\n      mload\n        /* \"resolver.sol\":2862:2901  extractedValue := mload(add(data, 288)) */\n      swap1\n      pop\n        /* \"resolver.sol\":2978:2981  0x1 */\n      0x01\n        /* \"resolver.sol\":2962:2976  extractedValue */\n      dup2\n        /* \"resolver.sol\":2958:2982  and(extractedValue, 0x1) */\n      and\n        /* \"resolver.sol\":2940:2982  extractedValue := and(extractedValue, 0x1) */\n      swap1\n      pop\n        /* \"resolver.sol\":3061:3062  1 */\n      0x01\n        /* \"resolver.sol\":3043:3057  extractedValue */\n      dup2\n        /* \"resolver.sol\":3043:3062  extractedValue == 1 */\n      eq\n        /* \"resolver.sol\":3036:3062  return extractedValue == 1 */\n      swap2\n      pop\n      pop\n        /* \"resolver.sol\":2555:3069  function extractOwnableCheckFromData(bytes memory data) internal pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"resolver.sol\":2107:2549  function extractChainIdFromData(bytes memory data) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"resolver.sol\":2181:2188  uint256 */\n      0x00\n        /* \"resolver.sol\":2223:2226  256 */\n      0x0100\n        /* \"resolver.sol\":2208:2212  data */\n      dup3\n        /* \"resolver.sol\":2208:2219  data.length */\n      mload\n        /* \"resolver.sol\":2208:2226  data.length >= 256 */\n      lt\n      iszero\n        /* \"resolver.sol\":2200:2245  require(data.length >= 256, \"Data too short\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_160\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"resolver.sol\":2341:2363  uint256 extractedValue */\n      0x00\n        /* \"resolver.sol\":2430:2433  256 */\n      0x0100\n        /* \"resolver.sol\":2424:2428  data */\n      dup4\n        /* \"resolver.sol\":2420:2434  add(data, 256) */\n      add\n        /* \"resolver.sol\":2414:2435  mload(add(data, 256)) */\n      mload\n        /* \"resolver.sol\":2396:2435  extractedValue := mload(add(data, 256)) */\n      swap1\n      pop\n        /* \"resolver.sol\":2528:2542  extractedValue */\n      dup1\n        /* \"resolver.sol\":2521:2542  return extractedValue */\n      swap2\n      pop\n      pop\n        /* \"resolver.sol\":2107:2549  function extractChainIdFromData(bytes memory data) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_164:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_165:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_166:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_167:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_168:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_201\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_164\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":711:782   */\n      tag_202\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_165\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_203\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_166\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":881:910   */\n      tag_204\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_167\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_18:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_206\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_168\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_170:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_171:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1686   */\n    tag_172:\n        /* \"#utility.yul\":1678:1679   */\n      0x00\n        /* \"#utility.yul\":1675:1676   */\n      0x00\n        /* \"#utility.yul\":1668:1680   */\n      revert\n        /* \"#utility.yul\":1692:1809   */\n    tag_173:\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1791:1803   */\n      revert\n        /* \"#utility.yul\":1815:1932   */\n    tag_174:\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1921:1922   */\n      0x00\n        /* \"#utility.yul\":1914:1926   */\n      revert\n        /* \"#utility.yul\":1966:2565   */\n    tag_175:\n        /* \"#utility.yul\":2070:2078   */\n      0x00\n        /* \"#utility.yul\":2080:2086   */\n      0x00\n        /* \"#utility.yul\":2130:2133   */\n      dup4\n        /* \"#utility.yul\":2123:2127   */\n      0x1f\n        /* \"#utility.yul\":2115:2121   */\n      dup5\n        /* \"#utility.yul\":2111:2128   */\n      add\n        /* \"#utility.yul\":2107:2134   */\n      slt\n        /* \"#utility.yul\":2097:2219   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2138:2217   */\n      tag_215\n      tag_172\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2097:2219   */\n    tag_214:\n        /* \"#utility.yul\":2251:2257   */\n      dup3\n        /* \"#utility.yul\":2238:2258   */\n      calldataload\n        /* \"#utility.yul\":2228:2258   */\n      swap1\n      pop\n        /* \"#utility.yul\":2281:2299   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2273:2279   */\n      dup2\n        /* \"#utility.yul\":2270:2300   */\n      gt\n        /* \"#utility.yul\":2267:2384   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2303:2382   */\n      tag_217\n      tag_173\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2267:2384   */\n    tag_216:\n        /* \"#utility.yul\":2417:2421   */\n      0x20\n        /* \"#utility.yul\":2409:2415   */\n      dup4\n        /* \"#utility.yul\":2405:2422   */\n      add\n        /* \"#utility.yul\":2393:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2471:2474   */\n      dup4\n        /* \"#utility.yul\":2463:2467   */\n      0x20\n        /* \"#utility.yul\":2455:2461   */\n      dup3\n        /* \"#utility.yul\":2451:2468   */\n      mul\n        /* \"#utility.yul\":2441:2449   */\n      dup4\n        /* \"#utility.yul\":2437:2469   */\n      add\n        /* \"#utility.yul\":2434:2475   */\n      gt\n        /* \"#utility.yul\":2431:2559   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_219\n      tag_174\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2431:2559   */\n    tag_218:\n        /* \"#utility.yul\":1966:2565   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2588:3156   */\n    tag_176:\n        /* \"#utility.yul\":2661:2669   */\n      0x00\n        /* \"#utility.yul\":2671:2677   */\n      0x00\n        /* \"#utility.yul\":2721:2724   */\n      dup4\n        /* \"#utility.yul\":2714:2718   */\n      0x1f\n        /* \"#utility.yul\":2706:2712   */\n      dup5\n        /* \"#utility.yul\":2702:2719   */\n      add\n        /* \"#utility.yul\":2698:2725   */\n      slt\n        /* \"#utility.yul\":2688:2810   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2729:2808   */\n      tag_222\n      tag_172\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2688:2810   */\n    tag_221:\n        /* \"#utility.yul\":2842:2848   */\n      dup3\n        /* \"#utility.yul\":2829:2849   */\n      calldataload\n        /* \"#utility.yul\":2819:2849   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2864:2870   */\n      dup2\n        /* \"#utility.yul\":2861:2891   */\n      gt\n        /* \"#utility.yul\":2858:2975   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":2894:2973   */\n      tag_224\n      tag_173\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2858:2975   */\n    tag_223:\n        /* \"#utility.yul\":3008:3012   */\n      0x20\n        /* \"#utility.yul\":3000:3006   */\n      dup4\n        /* \"#utility.yul\":2996:3013   */\n      add\n        /* \"#utility.yul\":2984:3013   */\n      swap2\n      pop\n        /* \"#utility.yul\":3062:3065   */\n      dup4\n        /* \"#utility.yul\":3054:3058   */\n      0x20\n        /* \"#utility.yul\":3046:3052   */\n      dup3\n        /* \"#utility.yul\":3042:3059   */\n      mul\n        /* \"#utility.yul\":3032:3040   */\n      dup4\n        /* \"#utility.yul\":3028:3060   */\n      add\n        /* \"#utility.yul\":3025:3066   */\n      gt\n        /* \"#utility.yul\":3022:3150   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3069:3148   */\n      tag_226\n      tag_174\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3022:3150   */\n    tag_225:\n        /* \"#utility.yul\":2588:3156   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3162:4158   */\n    tag_21:\n        /* \"#utility.yul\":3315:3321   */\n      0x00\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3331:3337   */\n      0x00\n        /* \"#utility.yul\":3339:3345   */\n      0x00\n        /* \"#utility.yul\":3388:3390   */\n      0x40\n        /* \"#utility.yul\":3376:3385   */\n      dup6\n        /* \"#utility.yul\":3367:3374   */\n      dup8\n        /* \"#utility.yul\":3363:3386   */\n      sub\n        /* \"#utility.yul\":3359:3391   */\n      slt\n        /* \"#utility.yul\":3356:3475   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3394:3473   */\n      tag_229\n      tag_170\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3356:3475   */\n    tag_228:\n        /* \"#utility.yul\":3542:3543   */\n      0x00\n        /* \"#utility.yul\":3531:3540   */\n      dup6\n        /* \"#utility.yul\":3527:3544   */\n      add\n        /* \"#utility.yul\":3514:3545   */\n      calldataload\n        /* \"#utility.yul\":3572:3590   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3564:3570   */\n      dup2\n        /* \"#utility.yul\":3561:3591   */\n      gt\n        /* \"#utility.yul\":3558:3675   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3594:3673   */\n      tag_231\n      tag_171\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3558:3675   */\n    tag_230:\n        /* \"#utility.yul\":3707:3818   */\n      tag_232\n        /* \"#utility.yul\":3810:3817   */\n      dup8\n        /* \"#utility.yul\":3801:3807   */\n      dup3\n        /* \"#utility.yul\":3790:3799   */\n      dup9\n        /* \"#utility.yul\":3786:3808   */\n      add\n        /* \"#utility.yul\":3707:3818   */\n      tag_175\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3689:3818   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":3485:3828   */\n      pop\n        /* \"#utility.yul\":3895:3897   */\n      0x20\n        /* \"#utility.yul\":3884:3893   */\n      dup6\n        /* \"#utility.yul\":3880:3898   */\n      add\n        /* \"#utility.yul\":3867:3899   */\n      calldataload\n        /* \"#utility.yul\":3926:3944   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3918:3924   */\n      dup2\n        /* \"#utility.yul\":3915:3945   */\n      gt\n        /* \"#utility.yul\":3912:4029   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_234\n      tag_171\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3912:4029   */\n    tag_233:\n        /* \"#utility.yul\":4061:4141   */\n      tag_235\n        /* \"#utility.yul\":4133:4140   */\n      dup8\n        /* \"#utility.yul\":4124:4130   */\n      dup3\n        /* \"#utility.yul\":4113:4122   */\n      dup9\n        /* \"#utility.yul\":4109:4131   */\n      add\n        /* \"#utility.yul\":4061:4141   */\n      tag_176\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4043:4141   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3838:4151   */\n      pop\n        /* \"#utility.yul\":3162:4158   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4164:4254   */\n    tag_177:\n        /* \"#utility.yul\":4198:4205   */\n      0x00\n        /* \"#utility.yul\":4241:4246   */\n      dup2\n        /* \"#utility.yul\":4234:4247   */\n      iszero\n        /* \"#utility.yul\":4227:4248   */\n      iszero\n        /* \"#utility.yul\":4216:4248   */\n      swap1\n      pop\n        /* \"#utility.yul\":4164:4254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4260:4369   */\n    tag_178:\n        /* \"#utility.yul\":4341:4362   */\n      tag_238\n        /* \"#utility.yul\":4356:4361   */\n      dup2\n        /* \"#utility.yul\":4341:4362   */\n      tag_177\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4336:4339   */\n      dup3\n        /* \"#utility.yul\":4329:4363   */\n      mstore\n        /* \"#utility.yul\":4260:4369   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4375:4585   */\n    tag_24:\n        /* \"#utility.yul\":4462:4466   */\n      0x00\n        /* \"#utility.yul\":4500:4502   */\n      0x20\n        /* \"#utility.yul\":4489:4498   */\n      dup3\n        /* \"#utility.yul\":4485:4503   */\n      add\n        /* \"#utility.yul\":4477:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4513:4578   */\n      tag_240\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4564:4573   */\n      dup4\n        /* \"#utility.yul\":4560:4577   */\n      add\n        /* \"#utility.yul\":4551:4557   */\n      dup5\n        /* \"#utility.yul\":4513:4578   */\n      tag_178\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4375:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4708   */\n    tag_179:\n        /* \"#utility.yul\":4700:4701   */\n      0x00\n        /* \"#utility.yul\":4697:4698   */\n      0x00\n        /* \"#utility.yul\":4690:4702   */\n      revert\n        /* \"#utility.yul\":4740:4976   */\n    tag_180:\n        /* \"#utility.yul\":4817:4822   */\n      0x00\n        /* \"#utility.yul\":4858:4861   */\n      0x0140\n        /* \"#utility.yul\":4849:4855   */\n      dup3\n        /* \"#utility.yul\":4844:4847   */\n      dup5\n        /* \"#utility.yul\":4840:4856   */\n      sub\n        /* \"#utility.yul\":4836:4862   */\n      slt\n        /* \"#utility.yul\":4833:4946   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":4865:4944   */\n      tag_244\n      tag_179\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4833:4946   */\n    tag_243:\n        /* \"#utility.yul\":4964:4970   */\n      dup2\n        /* \"#utility.yul\":4955:4970   */\n      swap1\n      pop\n        /* \"#utility.yul\":4740:4976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4982:5533   */\n    tag_34:\n        /* \"#utility.yul\":5072:5078   */\n      0x00\n        /* \"#utility.yul\":5121:5123   */\n      0x20\n        /* \"#utility.yul\":5109:5118   */\n      dup3\n        /* \"#utility.yul\":5100:5107   */\n      dup5\n        /* \"#utility.yul\":5096:5119   */\n      sub\n        /* \"#utility.yul\":5092:5124   */\n      slt\n        /* \"#utility.yul\":5089:5208   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":5127:5206   */\n      tag_247\n      tag_170\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5089:5208   */\n    tag_246:\n        /* \"#utility.yul\":5275:5276   */\n      0x00\n        /* \"#utility.yul\":5264:5273   */\n      dup3\n        /* \"#utility.yul\":5260:5277   */\n      add\n        /* \"#utility.yul\":5247:5278   */\n      calldataload\n        /* \"#utility.yul\":5305:5323   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5297:5303   */\n      dup2\n        /* \"#utility.yul\":5294:5324   */\n      gt\n        /* \"#utility.yul\":5291:5408   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":5327:5406   */\n      tag_249\n      tag_171\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5291:5408   */\n    tag_248:\n        /* \"#utility.yul\":5432:5516   */\n      tag_250\n        /* \"#utility.yul\":5508:5515   */\n      dup5\n        /* \"#utility.yul\":5499:5505   */\n      dup3\n        /* \"#utility.yul\":5488:5497   */\n      dup6\n        /* \"#utility.yul\":5484:5506   */\n      add\n        /* \"#utility.yul\":5432:5516   */\n      tag_180\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5422:5516   */\n      swap2\n      pop\n        /* \"#utility.yul\":5218:5526   */\n      pop\n        /* \"#utility.yul\":4982:5533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5539:5687   */\n    tag_181:\n        /* \"#utility.yul\":5641:5652   */\n      0x00\n        /* \"#utility.yul\":5678:5681   */\n      dup2\n        /* \"#utility.yul\":5663:5681   */\n      swap1\n      pop\n        /* \"#utility.yul\":5539:5687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5693:6083   */\n    tag_182:\n        /* \"#utility.yul\":5799:5802   */\n      0x00\n        /* \"#utility.yul\":5827:5866   */\n      tag_253\n        /* \"#utility.yul\":5860:5865   */\n      dup3\n        /* \"#utility.yul\":5827:5866   */\n      tag_164\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5882:5971   */\n      tag_254\n        /* \"#utility.yul\":5964:5970   */\n      dup2\n        /* \"#utility.yul\":5959:5962   */\n      dup6\n        /* \"#utility.yul\":5882:5971   */\n      tag_181\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5875:5971   */\n      swap4\n      pop\n        /* \"#utility.yul\":5980:6045   */\n      tag_255\n        /* \"#utility.yul\":6038:6044   */\n      dup2\n        /* \"#utility.yul\":6033:6036   */\n      dup6\n        /* \"#utility.yul\":6026:6030   */\n      0x20\n        /* \"#utility.yul\":6019:6024   */\n      dup7\n        /* \"#utility.yul\":6015:6031   */\n      add\n        /* \"#utility.yul\":5980:6045   */\n      tag_166\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6070:6076   */\n      dup1\n        /* \"#utility.yul\":6065:6068   */\n      dup5\n        /* \"#utility.yul\":6061:6077   */\n      add\n        /* \"#utility.yul\":6054:6077   */\n      swap2\n      pop\n        /* \"#utility.yul\":5803:6083   */\n      pop\n        /* \"#utility.yul\":5693:6083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6240   */\n    tag_183:\n        /* \"#utility.yul\":6229:6232   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6217:6223   */\n      dup3\n        /* \"#utility.yul\":6213:6227   */\n      add\n        /* \"#utility.yul\":6206:6233   */\n      mstore\n        /* \"#utility.yul\":6089:6240   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6246:6646   */\n    tag_184:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6427:6511   */\n      tag_258\n        /* \"#utility.yul\":6509:6510   */\n      0x01\n        /* \"#utility.yul\":6504:6507   */\n      dup4\n        /* \"#utility.yul\":6427:6511   */\n      tag_181\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6420:6511   */\n      swap2\n      pop\n        /* \"#utility.yul\":6520:6613   */\n      tag_259\n        /* \"#utility.yul\":6609:6612   */\n      dup3\n        /* \"#utility.yul\":6520:6613   */\n      tag_183\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6638:6639   */\n      0x01\n        /* \"#utility.yul\":6633:6636   */\n      dup3\n        /* \"#utility.yul\":6629:6640   */\n      add\n        /* \"#utility.yul\":6622:6640   */\n      swap1\n      pop\n        /* \"#utility.yul\":6246:6646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6652:7779   */\n    tag_48:\n        /* \"#utility.yul\":7082:7085   */\n      0x00\n        /* \"#utility.yul\":7104:7199   */\n      tag_261\n        /* \"#utility.yul\":7195:7198   */\n      dup3\n        /* \"#utility.yul\":7186:7192   */\n      dup7\n        /* \"#utility.yul\":7104:7199   */\n      tag_182\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7097:7199   */\n      swap2\n      pop\n        /* \"#utility.yul\":7216:7364   */\n      tag_262\n        /* \"#utility.yul\":7360:7363   */\n      dup3\n        /* \"#utility.yul\":7216:7364   */\n      tag_184\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7209:7364   */\n      swap2\n      pop\n        /* \"#utility.yul\":7381:7476   */\n      tag_263\n        /* \"#utility.yul\":7472:7475   */\n      dup3\n        /* \"#utility.yul\":7463:7469   */\n      dup6\n        /* \"#utility.yul\":7381:7476   */\n      tag_182\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":7374:7476   */\n      swap2\n      pop\n        /* \"#utility.yul\":7493:7641   */\n      tag_264\n        /* \"#utility.yul\":7637:7640   */\n      dup3\n        /* \"#utility.yul\":7493:7641   */\n      tag_184\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7486:7641   */\n      swap2\n      pop\n        /* \"#utility.yul\":7658:7753   */\n      tag_265\n        /* \"#utility.yul\":7749:7752   */\n      dup3\n        /* \"#utility.yul\":7740:7746   */\n      dup5\n        /* \"#utility.yul\":7658:7753   */\n      tag_182\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7651:7753   */\n      swap2\n      pop\n        /* \"#utility.yul\":7770:7773   */\n      dup2\n        /* \"#utility.yul\":7763:7773   */\n      swap1\n      pop\n        /* \"#utility.yul\":6652:7779   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7785:7965   */\n    tag_59:\n        /* \"#utility.yul\":7833:7910   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7830:7831   */\n      0x00\n        /* \"#utility.yul\":7823:7911   */\n      mstore\n        /* \"#utility.yul\":7930:7934   */\n      0x32\n        /* \"#utility.yul\":7927:7928   */\n      0x04\n        /* \"#utility.yul\":7920:7935   */\n      mstore\n        /* \"#utility.yul\":7954:7958   */\n      0x24\n        /* \"#utility.yul\":7951:7952   */\n      0x00\n        /* \"#utility.yul\":7944:7959   */\n      revert\n        /* \"#utility.yul\":7971:8088   */\n    tag_185:\n        /* \"#utility.yul\":8080:8081   */\n      0x00\n        /* \"#utility.yul\":8077:8078   */\n      0x00\n        /* \"#utility.yul\":8070:8082   */\n      revert\n        /* \"#utility.yul\":8094:8211   */\n    tag_186:\n        /* \"#utility.yul\":8203:8204   */\n      0x00\n        /* \"#utility.yul\":8200:8201   */\n      0x00\n        /* \"#utility.yul\":8193:8205   */\n      revert\n        /* \"#utility.yul\":8217:8334   */\n    tag_187:\n        /* \"#utility.yul\":8326:8327   */\n      0x00\n        /* \"#utility.yul\":8323:8324   */\n      0x00\n        /* \"#utility.yul\":8316:8328   */\n      revert\n        /* \"#utility.yul\":8340:8739   */\n    tag_65:\n        /* \"#utility.yul\":8437:8441   */\n      0x00\n        /* \"#utility.yul\":8491:8502   */\n      dup3\n        /* \"#utility.yul\":8478:8503   */\n      calldataload\n        /* \"#utility.yul\":8593:8594   */\n      0x01\n        /* \"#utility.yul\":8585:8591   */\n      0x0140\n        /* \"#utility.yul\":8581:8595   */\n      sub\n        /* \"#utility.yul\":8570:8578   */\n      dup4\n        /* \"#utility.yul\":8554:8568   */\n      calldatasize\n        /* \"#utility.yul\":8550:8579   */\n      sub\n        /* \"#utility.yul\":8546:8596   */\n      sub\n        /* \"#utility.yul\":8526:8544   */\n      dup2\n        /* \"#utility.yul\":8522:8597   */\n      slt\n        /* \"#utility.yul\":8512:8682   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":8601:8680   */\n      tag_272\n      tag_185\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8512:8682   */\n    tag_271:\n        /* \"#utility.yul\":8713:8731   */\n      dup1\n        /* \"#utility.yul\":8703:8711   */\n      dup4\n        /* \"#utility.yul\":8699:8732   */\n      add\n        /* \"#utility.yul\":8691:8732   */\n      swap2\n      pop\n        /* \"#utility.yul\":8442:8739   */\n      pop\n        /* \"#utility.yul\":8340:8739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8745:8925   */\n    tag_100:\n        /* \"#utility.yul\":8793:8870   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8790:8791   */\n      0x00\n        /* \"#utility.yul\":8783:8871   */\n      mstore\n        /* \"#utility.yul\":8890:8894   */\n      0x41\n        /* \"#utility.yul\":8887:8888   */\n      0x04\n        /* \"#utility.yul\":8880:8895   */\n      mstore\n        /* \"#utility.yul\":8914:8918   */\n      0x24\n        /* \"#utility.yul\":8911:8912   */\n      0x00\n        /* \"#utility.yul\":8904:8919   */\n      revert\n        /* \"#utility.yul\":8931:9111   */\n    tag_106:\n        /* \"#utility.yul\":8979:9056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8976:8977   */\n      0x00\n        /* \"#utility.yul\":8969:9057   */\n      mstore\n        /* \"#utility.yul\":9076:9080   */\n      0x12\n        /* \"#utility.yul\":9073:9074   */\n      0x04\n        /* \"#utility.yul\":9066:9081   */\n      mstore\n        /* \"#utility.yul\":9100:9104   */\n      0x24\n        /* \"#utility.yul\":9097:9098   */\n      0x00\n        /* \"#utility.yul\":9090:9105   */\n      revert\n        /* \"#utility.yul\":9117:9243   */\n    tag_188:\n        /* \"#utility.yul\":9154:9161   */\n      0x00\n        /* \"#utility.yul\":9194:9236   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9187:9192   */\n      dup3\n        /* \"#utility.yul\":9183:9237   */\n      and\n        /* \"#utility.yul\":9172:9237   */\n      swap1\n      pop\n        /* \"#utility.yul\":9117:9243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9249:9345   */\n    tag_189:\n        /* \"#utility.yul\":9286:9293   */\n      0x00\n        /* \"#utility.yul\":9315:9339   */\n      tag_277\n        /* \"#utility.yul\":9333:9338   */\n      dup3\n        /* \"#utility.yul\":9315:9339   */\n      tag_188\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9304:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9249:9345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9351:9473   */\n    tag_190:\n        /* \"#utility.yul\":9424:9448   */\n      tag_279\n        /* \"#utility.yul\":9442:9447   */\n      dup2\n        /* \"#utility.yul\":9424:9448   */\n      tag_189\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9417:9422   */\n      dup2\n        /* \"#utility.yul\":9414:9449   */\n      eq\n        /* \"#utility.yul\":9404:9467   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":9463:9464   */\n      0x00\n        /* \"#utility.yul\":9460:9461   */\n      0x00\n        /* \"#utility.yul\":9453:9465   */\n      revert\n        /* \"#utility.yul\":9404:9467   */\n    tag_280:\n        /* \"#utility.yul\":9351:9473   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9479:9618   */\n    tag_191:\n        /* \"#utility.yul\":9525:9530   */\n      0x00\n        /* \"#utility.yul\":9563:9569   */\n      dup2\n        /* \"#utility.yul\":9550:9570   */\n      calldataload\n        /* \"#utility.yul\":9541:9570   */\n      swap1\n      pop\n        /* \"#utility.yul\":9579:9612   */\n      tag_282\n        /* \"#utility.yul\":9606:9611   */\n      dup2\n        /* \"#utility.yul\":9579:9612   */\n      tag_190\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9479:9618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9624:9953   */\n    tag_114:\n        /* \"#utility.yul\":9683:9689   */\n      0x00\n        /* \"#utility.yul\":9732:9734   */\n      0x20\n        /* \"#utility.yul\":9720:9729   */\n      dup3\n        /* \"#utility.yul\":9711:9718   */\n      dup5\n        /* \"#utility.yul\":9707:9730   */\n      sub\n        /* \"#utility.yul\":9703:9735   */\n      slt\n        /* \"#utility.yul\":9700:9819   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":9738:9817   */\n      tag_285\n      tag_170\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9700:9819   */\n    tag_284:\n        /* \"#utility.yul\":9858:9859   */\n      0x00\n        /* \"#utility.yul\":9883:9936   */\n      tag_286\n        /* \"#utility.yul\":9928:9935   */\n      dup5\n        /* \"#utility.yul\":9919:9925   */\n      dup3\n        /* \"#utility.yul\":9908:9917   */\n      dup6\n        /* \"#utility.yul\":9904:9926   */\n      add\n        /* \"#utility.yul\":9883:9936   */\n      tag_191\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9873:9936   */\n      swap2\n      pop\n        /* \"#utility.yul\":9829:9946   */\n      pop\n        /* \"#utility.yul\":9624:9953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9959:10683   */\n    tag_118:\n        /* \"#utility.yul\":10036:10040   */\n      0x00\n        /* \"#utility.yul\":10042:10048   */\n      0x00\n        /* \"#utility.yul\":10098:10109   */\n      dup4\n        /* \"#utility.yul\":10085:10110   */\n      calldataload\n        /* \"#utility.yul\":10198:10199   */\n      0x01\n        /* \"#utility.yul\":10192:10196   */\n      0x20\n        /* \"#utility.yul\":10188:10200   */\n      sub\n        /* \"#utility.yul\":10177:10185   */\n      dup5\n        /* \"#utility.yul\":10161:10175   */\n      calldatasize\n        /* \"#utility.yul\":10157:10186   */\n      sub\n        /* \"#utility.yul\":10153:10201   */\n      sub\n        /* \"#utility.yul\":10133:10151   */\n      dup2\n        /* \"#utility.yul\":10129:10202   */\n      slt\n        /* \"#utility.yul\":10119:10287   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":10206:10285   */\n      tag_289\n      tag_185\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10119:10287   */\n    tag_288:\n        /* \"#utility.yul\":10318:10336   */\n      dup1\n        /* \"#utility.yul\":10308:10316   */\n      dup5\n        /* \"#utility.yul\":10304:10337   */\n      add\n        /* \"#utility.yul\":10296:10337   */\n      swap3\n      pop\n        /* \"#utility.yul\":10370:10374   */\n      dup3\n        /* \"#utility.yul\":10357:10375   */\n      calldataload\n        /* \"#utility.yul\":10347:10375   */\n      swap2\n      pop\n        /* \"#utility.yul\":10398:10416   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10390:10396   */\n      dup3\n        /* \"#utility.yul\":10387:10417   */\n      gt\n        /* \"#utility.yul\":10384:10501   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":10420:10499   */\n      tag_291\n      tag_186\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10384:10501   */\n    tag_290:\n        /* \"#utility.yul\":10528:10530   */\n      0x20\n        /* \"#utility.yul\":10522:10526   */\n      dup4\n        /* \"#utility.yul\":10518:10531   */\n      add\n        /* \"#utility.yul\":10510:10531   */\n      swap3\n      pop\n        /* \"#utility.yul\":10585:10589   */\n      0x01\n        /* \"#utility.yul\":10577:10583   */\n      dup3\n        /* \"#utility.yul\":10573:10590   */\n      mul\n        /* \"#utility.yul\":10557:10571   */\n      calldatasize\n        /* \"#utility.yul\":10553:10591   */\n      sub\n        /* \"#utility.yul\":10547:10551   */\n      dup4\n        /* \"#utility.yul\":10543:10592   */\n      sgt\n        /* \"#utility.yul\":10540:10676   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":10595:10674   */\n      tag_293\n      tag_187\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":10540:10676   */\n    tag_292:\n        /* \"#utility.yul\":10049:10683   */\n      pop\n        /* \"#utility.yul\":9959:10683   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10689:10832   */\n    tag_192:\n        /* \"#utility.yul\":10746:10751   */\n      0x00\n        /* \"#utility.yul\":10777:10783   */\n      dup2\n        /* \"#utility.yul\":10771:10784   */\n      mload\n        /* \"#utility.yul\":10762:10784   */\n      swap1\n      pop\n        /* \"#utility.yul\":10793:10826   */\n      tag_295\n        /* \"#utility.yul\":10820:10825   */\n      dup2\n        /* \"#utility.yul\":10793:10826   */\n      tag_190\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10689:10832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10838:11189   */\n    tag_130:\n        /* \"#utility.yul\":10908:10914   */\n      0x00\n        /* \"#utility.yul\":10957:10959   */\n      0x20\n        /* \"#utility.yul\":10945:10954   */\n      dup3\n        /* \"#utility.yul\":10936:10943   */\n      dup5\n        /* \"#utility.yul\":10932:10955   */\n      sub\n        /* \"#utility.yul\":10928:10960   */\n      slt\n        /* \"#utility.yul\":10925:11044   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":10963:11042   */\n      tag_298\n      tag_170\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10925:11044   */\n    tag_297:\n        /* \"#utility.yul\":11083:11084   */\n      0x00\n        /* \"#utility.yul\":11108:11172   */\n      tag_299\n        /* \"#utility.yul\":11164:11171   */\n      dup5\n        /* \"#utility.yul\":11155:11161   */\n      dup3\n        /* \"#utility.yul\":11144:11153   */\n      dup6\n        /* \"#utility.yul\":11140:11162   */\n      add\n        /* \"#utility.yul\":11108:11172   */\n      tag_192\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":11098:11172   */\n      swap2\n      pop\n        /* \"#utility.yul\":11054:11182   */\n      pop\n        /* \"#utility.yul\":10838:11189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11195:11359   */\n    tag_193:\n        /* \"#utility.yul\":11335:11351   */\n      0x4461746120746f6f2073686f7274000000000000000000000000000000000000\n        /* \"#utility.yul\":11331:11332   */\n      0x00\n        /* \"#utility.yul\":11323:11329   */\n      dup3\n        /* \"#utility.yul\":11319:11333   */\n      add\n        /* \"#utility.yul\":11312:11352   */\n      mstore\n        /* \"#utility.yul\":11195:11359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11365:11731   */\n    tag_194:\n        /* \"#utility.yul\":11507:11510   */\n      0x00\n        /* \"#utility.yul\":11528:11595   */\n      tag_302\n        /* \"#utility.yul\":11592:11594   */\n      0x0e\n        /* \"#utility.yul\":11587:11590   */\n      dup4\n        /* \"#utility.yul\":11528:11595   */\n      tag_165\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11521:11595   */\n      swap2\n      pop\n        /* \"#utility.yul\":11604:11697   */\n      tag_303\n        /* \"#utility.yul\":11693:11696   */\n      dup3\n        /* \"#utility.yul\":11604:11697   */\n      tag_193\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":11722:11724   */\n      0x20\n        /* \"#utility.yul\":11717:11720   */\n      dup3\n        /* \"#utility.yul\":11713:11725   */\n      add\n        /* \"#utility.yul\":11706:11725   */\n      swap1\n      pop\n        /* \"#utility.yul\":11365:11731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11737:12156   */\n    tag_160:\n        /* \"#utility.yul\":11903:11907   */\n      0x00\n        /* \"#utility.yul\":11941:11943   */\n      0x20\n        /* \"#utility.yul\":11930:11939   */\n      dup3\n        /* \"#utility.yul\":11926:11944   */\n      add\n        /* \"#utility.yul\":11918:11944   */\n      swap1\n      pop\n        /* \"#utility.yul\":11990:11999   */\n      dup2\n        /* \"#utility.yul\":11984:11988   */\n      dup2\n        /* \"#utility.yul\":11980:12000   */\n      sub\n        /* \"#utility.yul\":11976:11977   */\n      0x00\n        /* \"#utility.yul\":11965:11974   */\n      dup4\n        /* \"#utility.yul\":11961:11978   */\n      add\n        /* \"#utility.yul\":11954:12001   */\n      mstore\n        /* \"#utility.yul\":12018:12149   */\n      tag_305\n        /* \"#utility.yul\":12144:12148   */\n      dup2\n        /* \"#utility.yul\":12018:12149   */\n      tag_194\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":12010:12149   */\n      swap1\n      pop\n        /* \"#utility.yul\":11737:12156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202a165b211f8d2842f57d20db383511ebb4d61eef2f4caee4a6e869de0a5021ad64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_4617": {
									"entryPoint": null,
									"id": 4617,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_4925": {
									"entryPoint": null,
									"id": 4925,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_4975": {
									"entryPoint": null,
									"id": 4975,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IEAS_$4437_fromMemory": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IEAS_$4437_fromMemory": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IEAS_$4437": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IEAS_$4437": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1392:15",
										"nodeType": "YulBlock",
										"src": "0:1392:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "626:51:15",
													"nodeType": "YulBlock",
													"src": "626:51:15",
													"statements": [
														{
															"nativeSrc": "636:35:15",
															"nodeType": "YulAssignment",
															"src": "636:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:15"
																},
																"nativeSrc": "647:24:15",
																"nodeType": "YulFunctionCall",
																"src": "647:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IEAS_$4437",
												"nativeSrc": "568:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:15",
														"nodeType": "YulTypedName",
														"src": "608:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:15",
														"nodeType": "YulTypedName",
														"src": "618:7:15",
														"type": ""
													}
												],
												"src": "568:109:15"
											},
											{
												"body": {
													"nativeSrc": "739:92:15",
													"nodeType": "YulBlock",
													"src": "739:92:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:15",
																"nodeType": "YulBlock",
																"src": "809:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:15",
																					"nodeType": "YulLiteral",
																					"src": "818:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:15",
																					"nodeType": "YulLiteral",
																					"src": "821:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:15"
																			},
																			"nativeSrc": "811:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:15"
																		},
																		"nativeSrc": "811:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IEAS_$4437",
																					"nativeSrc": "769:30:15",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:15"
																				},
																				"nativeSrc": "769:37:15",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:15"
																		},
																		"nativeSrc": "759:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:15"
																},
																"nativeSrc": "752:56:15",
																"nodeType": "YulFunctionCall",
																"src": "752:56:15"
															},
															"nativeSrc": "749:76:15",
															"nodeType": "YulIf",
															"src": "749:76:15"
														}
													]
												},
												"name": "validator_revert_t_contract$_IEAS_$4437",
												"nativeSrc": "683:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:15",
														"nodeType": "YulTypedName",
														"src": "732:5:15",
														"type": ""
													}
												],
												"src": "683:148:15"
											},
											{
												"body": {
													"nativeSrc": "913:93:15",
													"nodeType": "YulBlock",
													"src": "913:93:15",
													"statements": [
														{
															"nativeSrc": "923:22:15",
															"nodeType": "YulAssignment",
															"src": "923:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:15"
																},
																"nativeSrc": "932:13:15",
																"nodeType": "YulFunctionCall",
																"src": "932:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IEAS_$4437",
																	"nativeSrc": "954:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:15"
																},
																"nativeSrc": "954:46:15",
																"nodeType": "YulFunctionCall",
																"src": "954:46:15"
															},
															"nativeSrc": "954:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:15"
														}
													]
												},
												"name": "abi_decode_t_contract$_IEAS_$4437_fromMemory",
												"nativeSrc": "837:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:15",
														"nodeType": "YulTypedName",
														"src": "891:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:15",
														"nodeType": "YulTypedName",
														"src": "899:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:15",
														"nodeType": "YulTypedName",
														"src": "907:5:15",
														"type": ""
													}
												],
												"src": "837:169:15"
											},
											{
												"body": {
													"nativeSrc": "1102:287:15",
													"nodeType": "YulBlock",
													"src": "1102:287:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1148:83:15",
																"nodeType": "YulBlock",
																"src": "1148:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1150:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1150:77:15"
																			},
																			"nativeSrc": "1150:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1150:79:15"
																		},
																		"nativeSrc": "1150:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1123:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1119:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:15"
																		},
																		"nativeSrc": "1119:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1115:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:15"
																},
																"nativeSrc": "1115:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1115:32:15"
															},
															"nativeSrc": "1112:119:15",
															"nodeType": "YulIf",
															"src": "1112:119:15"
														},
														{
															"nativeSrc": "1241:141:15",
															"nodeType": "YulBlock",
															"src": "1241:141:15",
															"statements": [
																{
																	"nativeSrc": "1256:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1256:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1270:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1260:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1260:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1285:87:15",
																	"nodeType": "YulAssignment",
																	"src": "1285:87:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1344:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1344:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1355:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1355:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1340:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1340:3:15"
																				},
																				"nativeSrc": "1340:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1340:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1364:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1364:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IEAS_$4437_fromMemory",
																			"nativeSrc": "1295:44:15",
																			"nodeType": "YulIdentifier",
																			"src": "1295:44:15"
																		},
																		"nativeSrc": "1295:77:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1295:77:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1285:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1285:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IEAS_$4437_fromMemory",
												"nativeSrc": "1012:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1072:9:15",
														"nodeType": "YulTypedName",
														"src": "1072:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1083:7:15",
														"nodeType": "YulTypedName",
														"src": "1083:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1095:6:15",
														"nodeType": "YulTypedName",
														"src": "1095:6:15",
														"type": ""
													}
												],
												"src": "1012:377:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEAS_$4437(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEAS_$4437(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEAS_$4437(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEAS_$4437_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEAS_$4437(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEAS_$4437_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEAS_$4437_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610100604052348015610010575f5ffd5b506040516111ee3803806111ee83398181016040528101906100329190610162565b80600160035f82608081815250508160a081815250508060c081815250505050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b8576040517f83780ffe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1681525050505061018d565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610120826100f7565b9050919050565b5f61013182610116565b9050919050565b61014181610127565b811461014b575f5ffd5b50565b5f8151905061015c81610138565b92915050565b5f60208284031215610177576101766100f3565b5b5f6101848482850161014e565b91505092915050565b60805160a05160c05160e05161102e6101c05f395f61058f01525f61021501525f6101ec01525f6101c3015261102e5ff3fe608060405260043610610058575f3560e01c806354fd4d50146100a157806388e5b2d9146100cb57806391db0b7e146100fb578063ce46e0461461012b578063e49617e114610155578063e60c3505146101855761009d565b3661009d576100656101b5565b61009b576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b5f5ffd5b3480156100ac575f5ffd5b506100b56101bc565b6040516100c29190610aec565b60405180910390f35b6100e560048036038101906100e09190610bca565b61025f565b6040516100f29190610c62565b60405180910390f35b61011560048036038101906101109190610bca565b610377565b6040516101229190610c62565b60405180910390f35b348015610136575f5ffd5b5061013f6101b5565b60405161014c9190610c62565b60405180910390f35b61016f600480360381019061016a9190610c9e565b61048f565b60405161017c9190610c62565b60405180910390f35b61019f600480360381019061019a9190610c9e565b6104a9565b6040516101ac9190610c62565b60405180910390f35b5f5f905090565b60606101e77f00000000000000000000000000000000000000000000000000000000000000006104c3565b6102107f00000000000000000000000000000000000000000000000000000000000000006104c3565b6102397f00000000000000000000000000000000000000000000000000000000000000006104c3565b60405160200161024b93929190610d69565b604051602081830303815290604052905090565b5f61026861058d565b5f8585905090508383905081146102ab576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3490505f5f90505b82811015610367575f8686838181106102d0576102cf610daf565b5b90506020020135905082811115610313576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61034189898481811061032957610328610daf565b5b905060200281019061033b9190610de8565b82610614565b610351575f94505050505061036f565b8083039250506103608161061f565b90506102b4565b506001925050505b949350505050565b5f61038061058d565b5f8585905090508383905081146103c3576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3490505f5f90505b8281101561047f575f8686838181106103e8576103e7610daf565b5b9050602002013590508281111561042b576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045989898481811061044157610440610daf565b5b90506020028101906104539190610de8565b8261062b565b610469575f945050505050610487565b8083039250506104788161061f565b90506103cc565b506001925050505b949350505050565b5f61049861058d565b6104a28234610614565b9050919050565b5f6104b261058d565b6104bc823461062b565b9050919050565b60605f60016104d184610870565b0190505f8167ffffffffffffffff8111156104ef576104ee610e10565b5b6040519080825280601f01601f1916602001820160405280156105215781602001600182028036833780820191505090505b5090505f82602001820190505b600115610582578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161057757610576610e3d565b5b0494505f850361052e575b819350505050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610612576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6001905092915050565b5f600182019050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168360c00160208101906106569190610ec4565b73ffffffffffffffffffffffffffffffffffffffff1603610679575f905061086a565b5f6106d58480610120019061068e9190610eef565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050506109c1565b9050806106e657600191505061086a565b5f8460c00160208101906106fa9190610ec4565b73ffffffffffffffffffffffffffffffffffffffff163b0361071f575f91505061086a565b5f4690505f61077f868061012001906107389190610eef565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050610a23565b9050808214610793575f935050505061086a565b5f8660c00160208101906107a79190610ec4565b90508073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561081157506040513d601f19601f8201168201806040525081019061080e9190610f65565b60015b610821575f94505050505061086a565b8073ffffffffffffffffffffffffffffffffffffffff168860e001602081019061084b9190610ec4565b73ffffffffffffffffffffffffffffffffffffffff1614955050505050505b92915050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106108cc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816108c2576108c1610e3d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610909576d04ee2d6d415b85acef810000000083816108ff576108fe610e3d565b5b0492506020810190505b662386f26fc10000831061093857662386f26fc10000838161092e5761092d610e3d565b5b0492506010810190505b6305f5e1008310610961576305f5e100838161095757610956610e3d565b5b0492506008810190505b612710831061098657612710838161097c5761097b610e3d565b5b0492506004810190505b606483106109a9576064838161099f5761099e610e3d565b5b0492506002810190505b600a83106109b8576001810190505b80915050919050565b5f61012082511015610a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ff90610fda565b60405180910390fd5b5f610120830151905060018116905060018114915050919050565b5f61010082511015610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190610fda565b60405180910390fd5b5f610100830151905080915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610abe82610a7c565b610ac88185610a86565b9350610ad8818560208601610a96565b610ae181610aa4565b840191505092915050565b5f6020820190508181035f830152610b048184610ab4565b905092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610b3557610b34610b14565b5b8235905067ffffffffffffffff811115610b5257610b51610b18565b5b602083019150836020820283011115610b6e57610b6d610b1c565b5b9250929050565b5f5f83601f840112610b8a57610b89610b14565b5b8235905067ffffffffffffffff811115610ba757610ba6610b18565b5b602083019150836020820283011115610bc357610bc2610b1c565b5b9250929050565b5f5f5f5f60408587031215610be257610be1610b0c565b5b5f85013567ffffffffffffffff811115610bff57610bfe610b10565b5b610c0b87828801610b20565b9450945050602085013567ffffffffffffffff811115610c2e57610c2d610b10565b5b610c3a87828801610b75565b925092505092959194509250565b5f8115159050919050565b610c5c81610c48565b82525050565b5f602082019050610c755f830184610c53565b92915050565b5f5ffd5b5f6101408284031215610c9557610c94610c7b565b5b81905092915050565b5f60208284031215610cb357610cb2610b0c565b5b5f82013567ffffffffffffffff811115610cd057610ccf610b10565b5b610cdc84828501610c7f565b91505092915050565b5f81905092915050565b5f610cf982610a7c565b610d038185610ce5565b9350610d13818560208601610a96565b80840191505092915050565b7f2e000000000000000000000000000000000000000000000000000000000000005f82015250565b5f610d53600183610ce5565b9150610d5e82610d1f565b600182019050919050565b5f610d748286610cef565b9150610d7f82610d47565b9150610d8b8285610cef565b9150610d9682610d47565b9150610da28284610cef565b9150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f8235600161014003833603038112610e0457610e03610ddc565b5b80830191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e9382610e6a565b9050919050565b610ea381610e89565b8114610ead575f5ffd5b50565b5f81359050610ebe81610e9a565b92915050565b5f60208284031215610ed957610ed8610b0c565b5b5f610ee684828501610eb0565b91505092915050565b5f5f83356001602003843603038112610f0b57610f0a610ddc565b5b80840192508235915067ffffffffffffffff821115610f2d57610f2c610de0565b5b602083019250600182023603831315610f4957610f48610de4565b5b509250929050565b5f81519050610f5f81610e9a565b92915050565b5f60208284031215610f7a57610f79610b0c565b5b5f610f8784828501610f51565b91505092915050565b7f4461746120746f6f2073686f72740000000000000000000000000000000000005f82015250565b5f610fc4600e83610a86565b9150610fcf82610f90565b602082019050919050565b5f6020820190508181035f830152610ff181610fb8565b905091905056fea26469706673582212202a165b211f8d2842f57d20db383511ebb4d61eef2f4caee4a6e869de0a5021ad64736f6c634300081b0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11EE CODESIZE SUB DUP1 PUSH2 0x11EE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x3 PUSH0 DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x83780FFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x18D JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 PUSH2 0xF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x131 DUP3 PUSH2 0x116 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x127 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15C DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177 JUMPI PUSH2 0x176 PUSH2 0xF3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184 DUP5 DUP3 DUP6 ADD PUSH2 0x14E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x102E PUSH2 0x1C0 PUSH0 CODECOPY PUSH0 PUSH2 0x58F ADD MSTORE PUSH0 PUSH2 0x215 ADD MSTORE PUSH0 PUSH2 0x1EC ADD MSTORE PUSH0 PUSH2 0x1C3 ADD MSTORE PUSH2 0x102E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x88E5B2D9 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x91DB0B7E EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xCE46E046 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xE49617E1 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xE60C3505 EQ PUSH2 0x185 JUMPI PUSH2 0x9D JUMP JUMPDEST CALLDATASIZE PUSH2 0x9D JUMPI PUSH2 0x65 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1574F9F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 PUSH32 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x210 PUSH32 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x239 PUSH32 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x268 PUSH2 0x58D JUMP JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x2D0 JUMPI PUSH2 0x2CF PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1101129400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x341 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x329 JUMPI PUSH2 0x328 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST DUP3 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x351 JUMPI PUSH0 SWAP5 POP POP POP POP POP PUSH2 0x36F JUMP JUMPDEST DUP1 DUP4 SUB SWAP3 POP POP PUSH2 0x360 DUP2 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP PUSH2 0x2B4 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x380 PUSH2 0x58D JUMP JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x47F JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1101129400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x459 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x441 JUMPI PUSH2 0x440 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST DUP3 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x469 JUMPI PUSH0 SWAP5 POP POP POP POP POP PUSH2 0x487 JUMP JUMPDEST DUP1 DUP4 SUB SWAP3 POP POP PUSH2 0x478 DUP2 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP PUSH2 0x3CC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x4A2 DUP3 CALLVALUE PUSH2 0x614 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B2 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x4BC DUP3 CALLVALUE PUSH2 0x62B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x4D1 DUP5 PUSH2 0x870 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x521 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x582 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x577 JUMPI PUSH2 0x576 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x52E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x679 JUMPI PUSH0 SWAP1 POP PUSH2 0x86A JUMP JUMPDEST PUSH0 PUSH2 0x6D5 DUP5 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x68E SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6E6 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x86A JUMP JUMPDEST PUSH0 DUP5 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x71F JUMPI PUSH0 SWAP2 POP POP PUSH2 0x86A JUMP JUMPDEST PUSH0 CHAINID SWAP1 POP PUSH0 PUSH2 0x77F DUP7 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x738 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x793 JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x86A JUMP JUMPDEST PUSH0 DUP7 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x811 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80E SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x821 JUMPI PUSH0 SWAP5 POP POP POP POP POP PUSH2 0x86A JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0xE0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x8CC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x8C2 JUMPI PUSH2 0x8C1 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x909 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x938 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x92E JUMPI PUSH2 0x92D PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x961 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x957 JUMPI PUSH2 0x956 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x986 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x9A9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x9B8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 MLOAD LT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 POP PUSH1 0x1 DUP2 AND SWAP1 POP PUSH1 0x1 DUP2 EQ SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 MLOAD LT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x100 DUP4 ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xABE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAC8 DUP2 DUP6 PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP PUSH2 0xAD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xAE1 DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB04 DUP2 DUP5 PUSH2 0xAB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB35 JUMPI PUSH2 0xB34 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB52 JUMPI PUSH2 0xB51 PUSH2 0xB18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6D PUSH2 0xB1C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB8A JUMPI PUSH2 0xB89 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA7 JUMPI PUSH2 0xBA6 PUSH2 0xB18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBFF JUMPI PUSH2 0xBFE PUSH2 0xB10 JUMP JUMPDEST JUMPDEST PUSH2 0xC0B DUP8 DUP3 DUP9 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC2E JUMPI PUSH2 0xC2D PUSH2 0xB10 JUMP JUMPDEST JUMPDEST PUSH2 0xC3A DUP8 DUP3 DUP9 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5C DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC75 PUSH0 DUP4 ADD DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0xC7B JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0xB10 JUMP JUMPDEST JUMPDEST PUSH2 0xCDC DUP5 DUP3 DUP6 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xD03 DUP2 DUP6 PUSH2 0xCE5 JUMP JUMPDEST SWAP4 POP PUSH2 0xD13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA96 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD53 PUSH1 0x1 DUP4 PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xD5E DUP3 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD74 DUP3 DUP7 PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP PUSH2 0xD7F DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8B DUP3 DUP6 PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP PUSH2 0xD96 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA2 DUP3 DUP5 PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH2 0x140 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0xDDC JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE93 DUP3 PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA3 DUP2 PUSH2 0xE89 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBE DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED9 JUMPI PUSH2 0xED8 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEE6 DUP5 DUP3 DUP6 ADD PUSH2 0xEB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xF0B JUMPI PUSH2 0xF0A PUSH2 0xDDC JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF2D JUMPI PUSH2 0xF2C PUSH2 0xDE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xF49 JUMPI PUSH2 0xF48 PUSH2 0xDE4 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF5F DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF87 DUP5 DUP3 DUP6 ADD PUSH2 0xF51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4461746120746F6F2073686F7274000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC4 PUSH1 0xE DUP4 PUSH2 0xA86 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCF DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF1 DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A AND JUMPDEST 0x21 0x1F DUP14 0x28 TIMESTAMP CREATE2 PUSH30 0x20DB383511EBB4D61EEF2F4CAEE4A6E869DE0A5021AD64736F6C63430008 SHL STOP CALLER ",
							"sourceMap": "344:2874:14:-:0;;;400:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;437:3;676:1:12;679;682;768:5:13;759:14;;;;;;792:5;783:14;;;;;;816:5;807:14;;;;;;692:136;;;723:1:12::1;699:26;;707:3;699:26;;::::0;695:76:::1;;748:12;;;;;;;;;;;;;;695:76;788:3;781:10;;;;;;;;::::0;::::1;647:151:::0;400:44:14;344:2874;;88:117:15;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;344:2874:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_4647": {
									"entryPoint": null,
									"id": 4647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_onlyEAS_4886": {
									"entryPoint": 1421,
									"id": 4886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@attest_4665": {
									"entryPoint": 1193,
									"id": 4665,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@extractChainIdFromData_5087": {
									"entryPoint": 2595,
									"id": 5087,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@extractOwnableCheckFromData_5111": {
									"entryPoint": 2497,
									"id": 5111,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isPayable_4634": {
									"entryPoint": 437,
									"id": 4634,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@log10_1927": {
									"entryPoint": 2160,
									"id": 1927,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@multiAttest_4747": {
									"entryPoint": 887,
									"id": 4747,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@multiRevoke_4847": {
									"entryPoint": 607,
									"id": 4847,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@onAttest_5065": {
									"entryPoint": 1579,
									"id": 5065,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onRevoke_5125": {
									"entryPoint": 1556,
									"id": 5125,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@revoke_4765": {
									"entryPoint": 1167,
									"id": 4765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_297": {
									"entryPoint": 1219,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uncheckedInc_4130": {
									"entryPoint": 1567,
									"id": 4130,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@version_4953": {
									"entryPoint": 444,
									"id": 4953,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 2848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_struct$_Attestation_$4114_calldata_ptr": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_struct$_Attestation_$4114_calldata_ptr": {
									"entryPoint": 3230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"access_calldata_tail_t_bytes_calldata_ptr": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"access_calldata_tail_t_struct$_Attestation_$4114_calldata_ptr": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a": {
									"entryPoint": 3552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12159:15",
										"nodeType": "YulBlock",
										"src": "0:12159:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "208:73:15",
													"nodeType": "YulBlock",
													"src": "208:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:15"
																},
																"nativeSrc": "218:19:15",
																"nodeType": "YulFunctionCall",
																"src": "218:19:15"
															},
															"nativeSrc": "218:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:15"
														},
														{
															"nativeSrc": "246:29:15",
															"nodeType": "YulAssignment",
															"src": "246:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:15",
																		"nodeType": "YulLiteral",
																		"src": "270:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:15"
																},
																"nativeSrc": "261:14:15",
																"nodeType": "YulFunctionCall",
																"src": "261:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:15",
														"nodeType": "YulTypedName",
														"src": "180:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:15",
														"nodeType": "YulTypedName",
														"src": "185:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:15",
														"nodeType": "YulTypedName",
														"src": "196:11:15",
														"type": ""
													}
												],
												"src": "112:169:15"
											},
											{
												"body": {
													"nativeSrc": "349:77:15",
													"nodeType": "YulBlock",
													"src": "349:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:15"
																},
																"nativeSrc": "360:23:15",
																"nodeType": "YulFunctionCall",
																"src": "360:23:15"
															},
															"nativeSrc": "360:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:15"
																		},
																		"nativeSrc": "399:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:15",
																		"nodeType": "YulLiteral",
																		"src": "417:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:15"
																},
																"nativeSrc": "392:27:15",
																"nodeType": "YulFunctionCall",
																"src": "392:27:15"
															},
															"nativeSrc": "392:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:15",
														"nodeType": "YulTypedName",
														"src": "331:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:15",
														"nodeType": "YulTypedName",
														"src": "336:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:15",
														"nodeType": "YulTypedName",
														"src": "341:6:15",
														"type": ""
													}
												],
												"src": "287:139:15"
											},
											{
												"body": {
													"nativeSrc": "480:54:15",
													"nodeType": "YulBlock",
													"src": "480:54:15",
													"statements": [
														{
															"nativeSrc": "490:38:15",
															"nodeType": "YulAssignment",
															"src": "490:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:15",
																				"nodeType": "YulLiteral",
																				"src": "515:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:15"
																		},
																		"nativeSrc": "504:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:15",
																				"nodeType": "YulLiteral",
																				"src": "524:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:15"
																		},
																		"nativeSrc": "520:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:15"
																},
																"nativeSrc": "500:28:15",
																"nodeType": "YulFunctionCall",
																"src": "500:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:15",
														"nodeType": "YulTypedName",
														"src": "463:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:15",
														"nodeType": "YulTypedName",
														"src": "473:6:15",
														"type": ""
													}
												],
												"src": "432:102:15"
											},
											{
												"body": {
													"nativeSrc": "632:285:15",
													"nodeType": "YulBlock",
													"src": "632:285:15",
													"statements": [
														{
															"nativeSrc": "642:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:15"
																},
																"nativeSrc": "656:39:15",
																"nodeType": "YulFunctionCall",
																"src": "656:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:15",
																	"nodeType": "YulTypedName",
																	"src": "646:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:15",
															"nodeType": "YulAssignment",
															"src": "704:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:15"
																},
																"nativeSrc": "711:71:15",
																"nodeType": "YulFunctionCall",
																"src": "711:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:15",
																				"nodeType": "YulLiteral",
																				"src": "837:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:15"
																		},
																		"nativeSrc": "826:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:15"
																},
																"nativeSrc": "791:65:15",
																"nodeType": "YulFunctionCall",
																"src": "791:65:15"
															},
															"nativeSrc": "791:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:15"
														},
														{
															"nativeSrc": "865:46:15",
															"nodeType": "YulAssignment",
															"src": "865:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:15"
																		},
																		"nativeSrc": "881:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:15"
																},
																"nativeSrc": "872:39:15",
																"nodeType": "YulFunctionCall",
																"src": "872:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:15",
														"nodeType": "YulTypedName",
														"src": "613:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:15",
														"nodeType": "YulTypedName",
														"src": "620:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:15",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													}
												],
												"src": "540:377:15"
											},
											{
												"body": {
													"nativeSrc": "1041:195:15",
													"nodeType": "YulBlock",
													"src": "1041:195:15",
													"statements": [
														{
															"nativeSrc": "1051:26:15",
															"nodeType": "YulAssignment",
															"src": "1051:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:15"
																},
																"nativeSrc": "1059:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:15"
																		},
																		"nativeSrc": "1094:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:15"
																		},
																		"nativeSrc": "1113:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:15"
																},
																"nativeSrc": "1087:47:15",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:15"
															},
															"nativeSrc": "1087:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:15"
														},
														{
															"nativeSrc": "1143:86:15",
															"nodeType": "YulAssignment",
															"src": "1143:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:15"
																},
																"nativeSrc": "1151:78:15",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:15",
														"nodeType": "YulTypedName",
														"src": "1013:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:15",
														"nodeType": "YulTypedName",
														"src": "1025:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:15",
														"nodeType": "YulTypedName",
														"src": "1036:4:15",
														"type": ""
													}
												],
												"src": "923:313:15"
											},
											{
												"body": {
													"nativeSrc": "1282:35:15",
													"nodeType": "YulBlock",
													"src": "1282:35:15",
													"statements": [
														{
															"nativeSrc": "1292:19:15",
															"nodeType": "YulAssignment",
															"src": "1292:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:15"
																},
																"nativeSrc": "1302:9:15",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:15",
														"nodeType": "YulTypedName",
														"src": "1275:6:15",
														"type": ""
													}
												],
												"src": "1242:75:15"
											},
											{
												"body": {
													"nativeSrc": "1412:28:15",
													"nodeType": "YulBlock",
													"src": "1412:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:15"
																},
																"nativeSrc": "1422:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:15"
															},
															"nativeSrc": "1422:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:15"
											},
											{
												"body": {
													"nativeSrc": "1535:28:15",
													"nodeType": "YulBlock",
													"src": "1535:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:15"
																},
																"nativeSrc": "1545:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:15"
															},
															"nativeSrc": "1545:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:15"
											},
											{
												"body": {
													"nativeSrc": "1658:28:15",
													"nodeType": "YulBlock",
													"src": "1658:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1675:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1675:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1678:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1678:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1668:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:15"
																},
																"nativeSrc": "1668:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1668:12:15"
															},
															"nativeSrc": "1668:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1668:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1569:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1569:117:15"
											},
											{
												"body": {
													"nativeSrc": "1781:28:15",
													"nodeType": "YulBlock",
													"src": "1781:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1798:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1798:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1801:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1791:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:15"
																},
																"nativeSrc": "1791:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1791:12:15"
															},
															"nativeSrc": "1791:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1791:12:15"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1692:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1692:117:15"
											},
											{
												"body": {
													"nativeSrc": "1904:28:15",
													"nodeType": "YulBlock",
													"src": "1904:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1921:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1921:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1924:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1914:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:15"
																},
																"nativeSrc": "1914:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1914:12:15"
															},
															"nativeSrc": "1914:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1914:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1815:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1815:117:15"
											},
											{
												"body": {
													"nativeSrc": "2087:478:15",
													"nodeType": "YulBlock",
													"src": "2087:478:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2136:83:15",
																"nodeType": "YulBlock",
																"src": "2136:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2138:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2138:77:15"
																			},
																			"nativeSrc": "2138:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2138:79:15"
																		},
																		"nativeSrc": "2138:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2138:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2115:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2115:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2123:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2123:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2111:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2111:3:15"
																				},
																				"nativeSrc": "2111:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2130:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2130:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2107:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2107:3:15"
																		},
																		"nativeSrc": "2107:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2107:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2100:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:15"
																},
																"nativeSrc": "2100:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2100:35:15"
															},
															"nativeSrc": "2097:122:15",
															"nodeType": "YulIf",
															"src": "2097:122:15"
														},
														{
															"nativeSrc": "2228:30:15",
															"nodeType": "YulAssignment",
															"src": "2228:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2251:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2251:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2238:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2238:12:15"
																},
																"nativeSrc": "2238:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2238:20:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2228:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2228:6:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2301:83:15",
																"nodeType": "YulBlock",
																"src": "2301:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2303:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2303:77:15"
																			},
																			"nativeSrc": "2303:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2303:79:15"
																		},
																		"nativeSrc": "2303:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2273:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2273:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2281:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2281:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2270:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2270:2:15"
																},
																"nativeSrc": "2270:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2270:30:15"
															},
															"nativeSrc": "2267:117:15",
															"nodeType": "YulIf",
															"src": "2267:117:15"
														},
														{
															"nativeSrc": "2393:29:15",
															"nodeType": "YulAssignment",
															"src": "2393:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2409:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2409:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2417:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2417:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2405:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2405:3:15"
																},
																"nativeSrc": "2405:17:15",
																"nodeType": "YulFunctionCall",
																"src": "2405:17:15"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2393:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2393:8:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2476:83:15",
																"nodeType": "YulBlock",
																"src": "2476:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2478:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:15"
																			},
																			"nativeSrc": "2478:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:15"
																		},
																		"nativeSrc": "2478:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2441:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "2441:8:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2455:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2455:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2463:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2463:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2451:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2451:3:15"
																				},
																				"nativeSrc": "2451:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2451:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2437:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2437:3:15"
																		},
																		"nativeSrc": "2437:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2437:32:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2471:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2471:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2434:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2434:2:15"
																},
																"nativeSrc": "2434:41:15",
																"nodeType": "YulFunctionCall",
																"src": "2434:41:15"
															},
															"nativeSrc": "2431:128:15",
															"nodeType": "YulIf",
															"src": "2431:128:15"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "1966:599:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2054:6:15",
														"nodeType": "YulTypedName",
														"src": "2054:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2062:3:15",
														"nodeType": "YulTypedName",
														"src": "2062:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2070:8:15",
														"nodeType": "YulTypedName",
														"src": "2070:8:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2080:6:15",
														"nodeType": "YulTypedName",
														"src": "2080:6:15",
														"type": ""
													}
												],
												"src": "1966:599:15"
											},
											{
												"body": {
													"nativeSrc": "2678:478:15",
													"nodeType": "YulBlock",
													"src": "2678:478:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2727:83:15",
																"nodeType": "YulBlock",
																"src": "2727:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2729:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2729:77:15"
																			},
																			"nativeSrc": "2729:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2729:79:15"
																		},
																		"nativeSrc": "2729:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2706:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2706:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2714:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2714:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2702:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2702:3:15"
																				},
																				"nativeSrc": "2702:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2702:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2721:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2721:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2698:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:15"
																		},
																		"nativeSrc": "2698:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2691:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:15"
																},
																"nativeSrc": "2691:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2691:35:15"
															},
															"nativeSrc": "2688:122:15",
															"nodeType": "YulIf",
															"src": "2688:122:15"
														},
														{
															"nativeSrc": "2819:30:15",
															"nodeType": "YulAssignment",
															"src": "2819:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2842:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2842:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2829:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2829:12:15"
																},
																"nativeSrc": "2829:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2829:20:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2819:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2892:83:15",
																"nodeType": "YulBlock",
																"src": "2892:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2894:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2894:77:15"
																			},
																			"nativeSrc": "2894:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:79:15"
																		},
																		"nativeSrc": "2894:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2864:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2864:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2872:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2872:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2861:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2861:2:15"
																},
																"nativeSrc": "2861:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2861:30:15"
															},
															"nativeSrc": "2858:117:15",
															"nodeType": "YulIf",
															"src": "2858:117:15"
														},
														{
															"nativeSrc": "2984:29:15",
															"nodeType": "YulAssignment",
															"src": "2984:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3000:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3000:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3008:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3008:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2996:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:15"
																},
																"nativeSrc": "2996:17:15",
																"nodeType": "YulFunctionCall",
																"src": "2996:17:15"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2984:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2984:8:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3067:83:15",
																"nodeType": "YulBlock",
																"src": "3067:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3069:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3069:77:15"
																			},
																			"nativeSrc": "3069:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3069:79:15"
																		},
																		"nativeSrc": "3069:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3069:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3032:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "3032:8:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3046:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3046:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3054:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3054:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3042:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3042:3:15"
																				},
																				"nativeSrc": "3042:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3042:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3028:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3028:3:15"
																		},
																		"nativeSrc": "3028:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:32:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3062:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3062:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3025:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3025:2:15"
																},
																"nativeSrc": "3025:41:15",
																"nodeType": "YulFunctionCall",
																"src": "3025:41:15"
															},
															"nativeSrc": "3022:128:15",
															"nodeType": "YulIf",
															"src": "3022:128:15"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2588:568:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2645:6:15",
														"nodeType": "YulTypedName",
														"src": "2645:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2653:3:15",
														"nodeType": "YulTypedName",
														"src": "2653:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2661:8:15",
														"nodeType": "YulTypedName",
														"src": "2661:8:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2671:6:15",
														"nodeType": "YulTypedName",
														"src": "2671:6:15",
														"type": ""
													}
												],
												"src": "2588:568:15"
											},
											{
												"body": {
													"nativeSrc": "3346:812:15",
													"nodeType": "YulBlock",
													"src": "3346:812:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3392:83:15",
																"nodeType": "YulBlock",
																"src": "3392:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3394:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3394:77:15"
																			},
																			"nativeSrc": "3394:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3394:79:15"
																		},
																		"nativeSrc": "3394:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3394:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3367:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3367:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3376:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3376:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3363:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:15"
																		},
																		"nativeSrc": "3363:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3388:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3388:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3359:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3359:3:15"
																},
																"nativeSrc": "3359:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3359:32:15"
															},
															"nativeSrc": "3356:119:15",
															"nodeType": "YulIf",
															"src": "3356:119:15"
														},
														{
															"nativeSrc": "3485:343:15",
															"nodeType": "YulBlock",
															"src": "3485:343:15",
															"statements": [
																{
																	"nativeSrc": "3500:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3500:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3531:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3531:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3542:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3542:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3527:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3527:3:15"
																				},
																				"nativeSrc": "3527:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3527:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3514:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "3514:12:15"
																		},
																		"nativeSrc": "3514:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3514:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3504:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3504:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3592:83:15",
																		"nodeType": "YulBlock",
																		"src": "3592:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3594:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "3594:77:15"
																					},
																					"nativeSrc": "3594:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3594:79:15"
																				},
																				"nativeSrc": "3594:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3594:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3564:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3564:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3572:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3561:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3561:2:15"
																		},
																		"nativeSrc": "3561:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3561:30:15"
																	},
																	"nativeSrc": "3558:117:15",
																	"nodeType": "YulIf",
																	"src": "3558:117:15"
																},
																{
																	"nativeSrc": "3689:129:15",
																	"nodeType": "YulAssignment",
																	"src": "3689:129:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3790:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3790:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3801:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3801:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3786:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3786:3:15"
																				},
																				"nativeSrc": "3786:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3810:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3810:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
																			"nativeSrc": "3707:78:15",
																			"nodeType": "YulIdentifier",
																			"src": "3707:78:15"
																		},
																		"nativeSrc": "3707:111:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3707:111:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3689:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3689:6:15"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "3697:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3697:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3838:313:15",
															"nodeType": "YulBlock",
															"src": "3838:313:15",
															"statements": [
																{
																	"nativeSrc": "3853:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3884:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3884:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3895:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3895:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3880:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3880:3:15"
																				},
																				"nativeSrc": "3880:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3880:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3867:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "3867:12:15"
																		},
																		"nativeSrc": "3867:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3867:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3946:83:15",
																		"nodeType": "YulBlock",
																		"src": "3946:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3948:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "3948:77:15"
																					},
																					"nativeSrc": "3948:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3948:79:15"
																				},
																				"nativeSrc": "3948:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3948:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3918:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3918:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3926:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3926:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3915:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3915:2:15"
																		},
																		"nativeSrc": "3915:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:30:15"
																	},
																	"nativeSrc": "3912:117:15",
																	"nodeType": "YulIf",
																	"src": "3912:117:15"
																},
																{
																	"nativeSrc": "4043:98:15",
																	"nodeType": "YulAssignment",
																	"src": "4043:98:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4113:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4113:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4124:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4124:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4109:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4109:3:15"
																				},
																				"nativeSrc": "4109:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4109:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4133:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4133:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "4061:47:15",
																			"nodeType": "YulIdentifier",
																			"src": "4061:47:15"
																		},
																		"nativeSrc": "4061:80:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:80:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4043:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4043:6:15"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "4051:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4051:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "3162:996:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3292:9:15",
														"nodeType": "YulTypedName",
														"src": "3292:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3303:7:15",
														"nodeType": "YulTypedName",
														"src": "3303:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3315:6:15",
														"nodeType": "YulTypedName",
														"src": "3315:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3323:6:15",
														"nodeType": "YulTypedName",
														"src": "3323:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3331:6:15",
														"nodeType": "YulTypedName",
														"src": "3331:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3339:6:15",
														"nodeType": "YulTypedName",
														"src": "3339:6:15",
														"type": ""
													}
												],
												"src": "3162:996:15"
											},
											{
												"body": {
													"nativeSrc": "4206:48:15",
													"nodeType": "YulBlock",
													"src": "4206:48:15",
													"statements": [
														{
															"nativeSrc": "4216:32:15",
															"nodeType": "YulAssignment",
															"src": "4216:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4241:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4241:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4234:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4234:6:15"
																		},
																		"nativeSrc": "4234:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4227:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4227:6:15"
																},
																"nativeSrc": "4227:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4227:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4216:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4216:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4164:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4188:5:15",
														"nodeType": "YulTypedName",
														"src": "4188:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4198:7:15",
														"nodeType": "YulTypedName",
														"src": "4198:7:15",
														"type": ""
													}
												],
												"src": "4164:90:15"
											},
											{
												"body": {
													"nativeSrc": "4319:50:15",
													"nodeType": "YulBlock",
													"src": "4319:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4336:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4336:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4356:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4356:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4341:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "4341:14:15"
																		},
																		"nativeSrc": "4341:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4341:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4329:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:15"
																},
																"nativeSrc": "4329:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4329:34:15"
															},
															"nativeSrc": "4329:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4329:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4260:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4307:5:15",
														"nodeType": "YulTypedName",
														"src": "4307:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4314:3:15",
														"nodeType": "YulTypedName",
														"src": "4314:3:15",
														"type": ""
													}
												],
												"src": "4260:109:15"
											},
											{
												"body": {
													"nativeSrc": "4467:118:15",
													"nodeType": "YulBlock",
													"src": "4467:118:15",
													"statements": [
														{
															"nativeSrc": "4477:26:15",
															"nodeType": "YulAssignment",
															"src": "4477:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4489:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4489:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4485:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:15"
																},
																"nativeSrc": "4485:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4485:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4477:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4477:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4551:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4564:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4575:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4575:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4560:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:15"
																		},
																		"nativeSrc": "4560:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4513:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "4513:37:15"
																},
																"nativeSrc": "4513:65:15",
																"nodeType": "YulFunctionCall",
																"src": "4513:65:15"
															},
															"nativeSrc": "4513:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "4513:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4375:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4439:9:15",
														"nodeType": "YulTypedName",
														"src": "4439:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4451:6:15",
														"nodeType": "YulTypedName",
														"src": "4451:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4462:4:15",
														"nodeType": "YulTypedName",
														"src": "4462:4:15",
														"type": ""
													}
												],
												"src": "4375:210:15"
											},
											{
												"body": {
													"nativeSrc": "4680:28:15",
													"nodeType": "YulBlock",
													"src": "4680:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4697:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4697:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4700:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4700:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4690:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:15"
																},
																"nativeSrc": "4690:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4690:12:15"
															},
															"nativeSrc": "4690:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "4690:12:15"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nativeSrc": "4591:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "4591:117:15"
											},
											{
												"body": {
													"nativeSrc": "4823:153:15",
													"nodeType": "YulBlock",
													"src": "4823:153:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4863:83:15",
																"nodeType": "YulBlock",
																"src": "4863:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nativeSrc": "4865:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4865:77:15"
																			},
																			"nativeSrc": "4865:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4865:79:15"
																		},
																		"nativeSrc": "4865:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4865:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "4844:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4844:3:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4849:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4849:6:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:15"
																		},
																		"nativeSrc": "4840:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4858:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4858:3:15",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4836:3:15"
																},
																"nativeSrc": "4836:26:15",
																"nodeType": "YulFunctionCall",
																"src": "4836:26:15"
															},
															"nativeSrc": "4833:113:15",
															"nodeType": "YulIf",
															"src": "4833:113:15"
														},
														{
															"nativeSrc": "4955:15:15",
															"nodeType": "YulAssignment",
															"src": "4955:15:15",
															"value": {
																"name": "offset",
																"nativeSrc": "4964:6:15",
																"nodeType": "YulIdentifier",
																"src": "4964:6:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4955:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4955:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_Attestation_$4114_calldata_ptr",
												"nativeSrc": "4740:236:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4801:6:15",
														"nodeType": "YulTypedName",
														"src": "4801:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4809:3:15",
														"nodeType": "YulTypedName",
														"src": "4809:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4817:5:15",
														"nodeType": "YulTypedName",
														"src": "4817:5:15",
														"type": ""
													}
												],
												"src": "4740:236:15"
											},
											{
												"body": {
													"nativeSrc": "5079:454:15",
													"nodeType": "YulBlock",
													"src": "5079:454:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5125:83:15",
																"nodeType": "YulBlock",
																"src": "5125:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5127:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5127:77:15"
																			},
																			"nativeSrc": "5127:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5127:79:15"
																		},
																		"nativeSrc": "5127:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5127:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5100:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5100:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5109:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5096:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5096:3:15"
																		},
																		"nativeSrc": "5096:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5096:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5121:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5121:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5092:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5092:3:15"
																},
																"nativeSrc": "5092:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5092:32:15"
															},
															"nativeSrc": "5089:119:15",
															"nodeType": "YulIf",
															"src": "5089:119:15"
														},
														{
															"nativeSrc": "5218:308:15",
															"nodeType": "YulBlock",
															"src": "5218:308:15",
															"statements": [
																{
																	"nativeSrc": "5233:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5233:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5264:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5264:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5275:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5275:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5260:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5260:3:15"
																				},
																				"nativeSrc": "5260:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5260:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5247:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "5247:12:15"
																		},
																		"nativeSrc": "5247:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5247:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5237:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5237:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5325:83:15",
																		"nodeType": "YulBlock",
																		"src": "5325:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5327:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "5327:77:15"
																					},
																					"nativeSrc": "5327:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5327:79:15"
																				},
																				"nativeSrc": "5327:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "5327:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5297:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5297:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5305:18:15",
																				"nodeType": "YulLiteral",
																				"src": "5305:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5294:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5294:2:15"
																		},
																		"nativeSrc": "5294:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5294:30:15"
																	},
																	"nativeSrc": "5291:117:15",
																	"nodeType": "YulIf",
																	"src": "5291:117:15"
																},
																{
																	"nativeSrc": "5422:94:15",
																	"nodeType": "YulAssignment",
																	"src": "5422:94:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5488:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5488:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5499:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5499:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5484:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5484:3:15"
																				},
																				"nativeSrc": "5484:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5484:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5508:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5508:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_Attestation_$4114_calldata_ptr",
																			"nativeSrc": "5432:51:15",
																			"nodeType": "YulIdentifier",
																			"src": "5432:51:15"
																		},
																		"nativeSrc": "5432:84:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5432:84:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5422:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5422:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Attestation_$4114_calldata_ptr",
												"nativeSrc": "4982:551:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5049:9:15",
														"nodeType": "YulTypedName",
														"src": "5049:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5060:7:15",
														"nodeType": "YulTypedName",
														"src": "5060:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5072:6:15",
														"nodeType": "YulTypedName",
														"src": "5072:6:15",
														"type": ""
													}
												],
												"src": "4982:551:15"
											},
											{
												"body": {
													"nativeSrc": "5653:34:15",
													"nodeType": "YulBlock",
													"src": "5653:34:15",
													"statements": [
														{
															"nativeSrc": "5663:18:15",
															"nodeType": "YulAssignment",
															"src": "5663:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "5678:3:15",
																"nodeType": "YulIdentifier",
																"src": "5678:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5663:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "5663:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5539:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5625:3:15",
														"nodeType": "YulTypedName",
														"src": "5625:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5630:6:15",
														"nodeType": "YulTypedName",
														"src": "5630:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5641:11:15",
														"nodeType": "YulTypedName",
														"src": "5641:11:15",
														"type": ""
													}
												],
												"src": "5539:148:15"
											},
											{
												"body": {
													"nativeSrc": "5803:280:15",
													"nodeType": "YulBlock",
													"src": "5803:280:15",
													"statements": [
														{
															"nativeSrc": "5813:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5813:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5860:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5860:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5827:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "5827:32:15"
																},
																"nativeSrc": "5827:39:15",
																"nodeType": "YulFunctionCall",
																"src": "5827:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5817:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5817:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5875:96:15",
															"nodeType": "YulAssignment",
															"src": "5875:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5959:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5959:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5964:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5964:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5882:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "5882:76:15"
																},
																"nativeSrc": "5882:89:15",
																"nodeType": "YulFunctionCall",
																"src": "5882:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5875:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6019:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6019:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6026:4:15",
																				"nodeType": "YulLiteral",
																				"src": "6026:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6015:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:15"
																		},
																		"nativeSrc": "6015:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6033:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6033:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6038:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6038:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5980:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "5980:34:15"
																},
																"nativeSrc": "5980:65:15",
																"nodeType": "YulFunctionCall",
																"src": "5980:65:15"
															},
															"nativeSrc": "5980:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "5980:65:15"
														},
														{
															"nativeSrc": "6054:23:15",
															"nodeType": "YulAssignment",
															"src": "6054:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6065:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6070:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6070:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6061:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6061:3:15"
																},
																"nativeSrc": "6061:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6061:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6054:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6054:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5693:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5784:5:15",
														"nodeType": "YulTypedName",
														"src": "5784:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5791:3:15",
														"nodeType": "YulTypedName",
														"src": "5791:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5799:3:15",
														"nodeType": "YulTypedName",
														"src": "5799:3:15",
														"type": ""
													}
												],
												"src": "5693:390:15"
											},
											{
												"body": {
													"nativeSrc": "6195:45:15",
													"nodeType": "YulBlock",
													"src": "6195:45:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6217:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6217:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6225:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6225:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6213:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6213:3:15"
																		},
																		"nativeSrc": "6213:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6213:14:15"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "6229:3:15",
																		"nodeType": "YulLiteral",
																		"src": "6229:3:15",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6206:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6206:6:15"
																},
																"nativeSrc": "6206:27:15",
																"nodeType": "YulFunctionCall",
																"src": "6206:27:15"
															},
															"nativeSrc": "6206:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "6206:27:15"
														}
													]
												},
												"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
												"nativeSrc": "6089:151:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6187:6:15",
														"nodeType": "YulTypedName",
														"src": "6187:6:15",
														"type": ""
													}
												],
												"src": "6089:151:15"
											},
											{
												"body": {
													"nativeSrc": "6410:236:15",
													"nodeType": "YulBlock",
													"src": "6410:236:15",
													"statements": [
														{
															"nativeSrc": "6420:91:15",
															"nodeType": "YulAssignment",
															"src": "6420:91:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6504:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6504:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6509:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6509:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6427:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "6427:76:15"
																},
																"nativeSrc": "6427:84:15",
																"nodeType": "YulFunctionCall",
																"src": "6427:84:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6420:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6420:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6609:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																	"nativeSrc": "6520:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "6520:88:15"
																},
																"nativeSrc": "6520:93:15",
																"nodeType": "YulFunctionCall",
																"src": "6520:93:15"
															},
															"nativeSrc": "6520:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "6520:93:15"
														},
														{
															"nativeSrc": "6622:18:15",
															"nodeType": "YulAssignment",
															"src": "6622:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6633:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6633:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6638:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6638:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6629:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6629:3:15"
																},
																"nativeSrc": "6629:11:15",
																"nodeType": "YulFunctionCall",
																"src": "6629:11:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6622:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6622:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6246:400:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6398:3:15",
														"nodeType": "YulTypedName",
														"src": "6398:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6406:3:15",
														"nodeType": "YulTypedName",
														"src": "6406:3:15",
														"type": ""
													}
												],
												"src": "6246:400:15"
											},
											{
												"body": {
													"nativeSrc": "7086:693:15",
													"nodeType": "YulBlock",
													"src": "7086:693:15",
													"statements": [
														{
															"nativeSrc": "7097:102:15",
															"nodeType": "YulAssignment",
															"src": "7097:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7186:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7186:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7195:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7195:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7104:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "7104:81:15"
																},
																"nativeSrc": "7104:95:15",
																"nodeType": "YulFunctionCall",
																"src": "7104:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7097:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7097:3:15"
																}
															]
														},
														{
															"nativeSrc": "7209:155:15",
															"nodeType": "YulAssignment",
															"src": "7209:155:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7360:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7360:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7216:142:15",
																	"nodeType": "YulIdentifier",
																	"src": "7216:142:15"
																},
																"nativeSrc": "7216:148:15",
																"nodeType": "YulFunctionCall",
																"src": "7216:148:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7209:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7209:3:15"
																}
															]
														},
														{
															"nativeSrc": "7374:102:15",
															"nodeType": "YulAssignment",
															"src": "7374:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7463:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7463:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7472:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7472:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7381:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "7381:81:15"
																},
																"nativeSrc": "7381:95:15",
																"nodeType": "YulFunctionCall",
																"src": "7381:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7374:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7374:3:15"
																}
															]
														},
														{
															"nativeSrc": "7486:155:15",
															"nodeType": "YulAssignment",
															"src": "7486:155:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7637:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7637:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7493:142:15",
																	"nodeType": "YulIdentifier",
																	"src": "7493:142:15"
																},
																"nativeSrc": "7493:148:15",
																"nodeType": "YulFunctionCall",
																"src": "7493:148:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7486:3:15"
																}
															]
														},
														{
															"nativeSrc": "7651:102:15",
															"nodeType": "YulAssignment",
															"src": "7651:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7740:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7740:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7749:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7749:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7658:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "7658:81:15"
																},
																"nativeSrc": "7658:95:15",
																"nodeType": "YulFunctionCall",
																"src": "7658:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7651:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7651:3:15"
																}
															]
														},
														{
															"nativeSrc": "7763:10:15",
															"nodeType": "YulAssignment",
															"src": "7763:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "7770:3:15",
																"nodeType": "YulIdentifier",
																"src": "7770:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7763:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7763:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6652:1127:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7049:3:15",
														"nodeType": "YulTypedName",
														"src": "7049:3:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7055:6:15",
														"nodeType": "YulTypedName",
														"src": "7055:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7063:6:15",
														"nodeType": "YulTypedName",
														"src": "7063:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7071:6:15",
														"nodeType": "YulTypedName",
														"src": "7071:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7082:3:15",
														"nodeType": "YulTypedName",
														"src": "7082:3:15",
														"type": ""
													}
												],
												"src": "6652:1127:15"
											},
											{
												"body": {
													"nativeSrc": "7813:152:15",
													"nodeType": "YulBlock",
													"src": "7813:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7830:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7830:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7833:77:15",
																		"nodeType": "YulLiteral",
																		"src": "7833:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7823:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7823:6:15"
																},
																"nativeSrc": "7823:88:15",
																"nodeType": "YulFunctionCall",
																"src": "7823:88:15"
															},
															"nativeSrc": "7823:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "7823:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7927:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7927:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7930:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7930:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7920:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7920:6:15"
																},
																"nativeSrc": "7920:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7920:15:15"
															},
															"nativeSrc": "7920:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7920:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7951:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7951:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7954:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7954:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7944:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:15"
																},
																"nativeSrc": "7944:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7944:15:15"
															},
															"nativeSrc": "7944:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7944:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7785:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7785:180:15"
											},
											{
												"body": {
													"nativeSrc": "8060:28:15",
													"nodeType": "YulBlock",
													"src": "8060:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8077:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8077:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8080:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8080:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8070:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:15"
																},
																"nativeSrc": "8070:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8070:12:15"
															},
															"nativeSrc": "8070:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "8070:12:15"
														}
													]
												},
												"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
												"nativeSrc": "7971:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7971:117:15"
											},
											{
												"body": {
													"nativeSrc": "8183:28:15",
													"nodeType": "YulBlock",
													"src": "8183:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8200:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8200:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8203:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8203:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8193:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8193:6:15"
																},
																"nativeSrc": "8193:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8193:12:15"
															},
															"nativeSrc": "8193:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "8193:12:15"
														}
													]
												},
												"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
												"nativeSrc": "8094:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8094:117:15"
											},
											{
												"body": {
													"nativeSrc": "8306:28:15",
													"nodeType": "YulBlock",
													"src": "8306:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8323:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8323:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8326:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8326:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8316:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8316:6:15"
																},
																"nativeSrc": "8316:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8316:12:15"
															},
															"nativeSrc": "8316:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "8316:12:15"
														}
													]
												},
												"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
												"nativeSrc": "8217:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8217:117:15"
											},
											{
												"body": {
													"nativeSrc": "8442:297:15",
													"nodeType": "YulBlock",
													"src": "8442:297:15",
													"statements": [
														{
															"nativeSrc": "8452:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8452:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nativeSrc": "8491:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "8491:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8478:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8478:12:15"
																},
																"nativeSrc": "8478:25:15",
																"nodeType": "YulFunctionCall",
																"src": "8478:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nativeSrc": "8456:18:15",
																	"nodeType": "YulTypedName",
																	"src": "8456:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8599:83:15",
																"nodeType": "YulBlock",
																"src": "8599:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
																				"nativeSrc": "8601:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8601:77:15"
																			},
																			"nativeSrc": "8601:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8601:79:15"
																		},
																		"nativeSrc": "8601:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8601:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nativeSrc": "8526:18:15",
																				"nodeType": "YulIdentifier",
																				"src": "8526:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nativeSrc": "8554:12:15",
																									"nodeType": "YulIdentifier",
																									"src": "8554:12:15"
																								},
																								"nativeSrc": "8554:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8554:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nativeSrc": "8570:8:15",
																								"nodeType": "YulIdentifier",
																								"src": "8570:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "8550:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8550:3:15"
																						},
																						"nativeSrc": "8550:29:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8550:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8585:6:15",
																								"nodeType": "YulLiteral",
																								"src": "8585:6:15",
																								"type": "",
																								"value": "0x0140"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8593:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8593:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "8581:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8581:3:15"
																						},
																						"nativeSrc": "8581:14:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8581:14:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8546:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8546:3:15"
																				},
																				"nativeSrc": "8546:50:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8546:50:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8522:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8522:3:15"
																		},
																		"nativeSrc": "8522:75:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8522:75:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8515:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8515:6:15"
																},
																"nativeSrc": "8515:83:15",
																"nodeType": "YulFunctionCall",
																"src": "8515:83:15"
															},
															"nativeSrc": "8512:170:15",
															"nodeType": "YulIf",
															"src": "8512:170:15"
														},
														{
															"nativeSrc": "8691:41:15",
															"nodeType": "YulAssignment",
															"src": "8691:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nativeSrc": "8703:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "8703:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nativeSrc": "8713:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "8713:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8699:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8699:3:15"
																},
																"nativeSrc": "8699:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8699:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "8691:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8691:4:15"
																}
															]
														}
													]
												},
												"name": "access_calldata_tail_t_struct$_Attestation_$4114_calldata_ptr",
												"nativeSrc": "8340:399:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nativeSrc": "8411:8:15",
														"nodeType": "YulTypedName",
														"src": "8411:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nativeSrc": "8421:11:15",
														"nodeType": "YulTypedName",
														"src": "8421:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nativeSrc": "8437:4:15",
														"nodeType": "YulTypedName",
														"src": "8437:4:15",
														"type": ""
													}
												],
												"src": "8340:399:15"
											},
											{
												"body": {
													"nativeSrc": "8773:152:15",
													"nodeType": "YulBlock",
													"src": "8773:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8790:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8790:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8793:77:15",
																		"nodeType": "YulLiteral",
																		"src": "8793:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8783:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8783:6:15"
																},
																"nativeSrc": "8783:88:15",
																"nodeType": "YulFunctionCall",
																"src": "8783:88:15"
															},
															"nativeSrc": "8783:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "8783:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8887:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8887:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8890:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8890:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8880:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8880:6:15"
																},
																"nativeSrc": "8880:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8880:15:15"
															},
															"nativeSrc": "8880:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "8880:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8911:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8911:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8914:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8914:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8904:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8904:6:15"
																},
																"nativeSrc": "8904:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8904:15:15"
															},
															"nativeSrc": "8904:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "8904:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8745:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8745:180:15"
											},
											{
												"body": {
													"nativeSrc": "8959:152:15",
													"nodeType": "YulBlock",
													"src": "8959:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8976:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8976:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8979:77:15",
																		"nodeType": "YulLiteral",
																		"src": "8979:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8969:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8969:6:15"
																},
																"nativeSrc": "8969:88:15",
																"nodeType": "YulFunctionCall",
																"src": "8969:88:15"
															},
															"nativeSrc": "8969:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "8969:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9073:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9073:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9076:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9076:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9066:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9066:6:15"
																},
																"nativeSrc": "9066:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9066:15:15"
															},
															"nativeSrc": "9066:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9066:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9097:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9097:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9100:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9100:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9090:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9090:6:15"
																},
																"nativeSrc": "9090:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9090:15:15"
															},
															"nativeSrc": "9090:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9090:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8931:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8931:180:15"
											},
											{
												"body": {
													"nativeSrc": "9162:81:15",
													"nodeType": "YulBlock",
													"src": "9162:81:15",
													"statements": [
														{
															"nativeSrc": "9172:65:15",
															"nodeType": "YulAssignment",
															"src": "9172:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9187:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9187:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9194:42:15",
																		"nodeType": "YulLiteral",
																		"src": "9194:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9183:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:15"
																},
																"nativeSrc": "9183:54:15",
																"nodeType": "YulFunctionCall",
																"src": "9183:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9172:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "9172:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9117:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9144:5:15",
														"nodeType": "YulTypedName",
														"src": "9144:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9154:7:15",
														"nodeType": "YulTypedName",
														"src": "9154:7:15",
														"type": ""
													}
												],
												"src": "9117:126:15"
											},
											{
												"body": {
													"nativeSrc": "9294:51:15",
													"nodeType": "YulBlock",
													"src": "9294:51:15",
													"statements": [
														{
															"nativeSrc": "9304:35:15",
															"nodeType": "YulAssignment",
															"src": "9304:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9333:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9333:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9315:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "9315:17:15"
																},
																"nativeSrc": "9315:24:15",
																"nodeType": "YulFunctionCall",
																"src": "9315:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9304:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "9304:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9249:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9276:5:15",
														"nodeType": "YulTypedName",
														"src": "9276:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9286:7:15",
														"nodeType": "YulTypedName",
														"src": "9286:7:15",
														"type": ""
													}
												],
												"src": "9249:96:15"
											},
											{
												"body": {
													"nativeSrc": "9394:79:15",
													"nodeType": "YulBlock",
													"src": "9394:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9451:16:15",
																"nodeType": "YulBlock",
																"src": "9451:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9460:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9460:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9463:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9463:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9453:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9453:6:15"
																			},
																			"nativeSrc": "9453:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9453:12:15"
																		},
																		"nativeSrc": "9453:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9453:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9417:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9417:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9442:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "9442:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "9424:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "9424:17:15"
																				},
																				"nativeSrc": "9424:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9424:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9414:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9414:2:15"
																		},
																		"nativeSrc": "9414:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9414:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9407:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:15"
																},
																"nativeSrc": "9407:43:15",
																"nodeType": "YulFunctionCall",
																"src": "9407:43:15"
															},
															"nativeSrc": "9404:63:15",
															"nodeType": "YulIf",
															"src": "9404:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "9351:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9387:5:15",
														"nodeType": "YulTypedName",
														"src": "9387:5:15",
														"type": ""
													}
												],
												"src": "9351:122:15"
											},
											{
												"body": {
													"nativeSrc": "9531:87:15",
													"nodeType": "YulBlock",
													"src": "9531:87:15",
													"statements": [
														{
															"nativeSrc": "9541:29:15",
															"nodeType": "YulAssignment",
															"src": "9541:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9563:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9563:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9550:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9550:12:15"
																},
																"nativeSrc": "9550:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9550:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9541:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9541:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9606:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9606:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "9579:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "9579:26:15"
																},
																"nativeSrc": "9579:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9579:33:15"
															},
															"nativeSrc": "9579:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "9579:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "9479:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9509:6:15",
														"nodeType": "YulTypedName",
														"src": "9509:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9517:3:15",
														"nodeType": "YulTypedName",
														"src": "9517:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9525:5:15",
														"nodeType": "YulTypedName",
														"src": "9525:5:15",
														"type": ""
													}
												],
												"src": "9479:139:15"
											},
											{
												"body": {
													"nativeSrc": "9690:263:15",
													"nodeType": "YulBlock",
													"src": "9690:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9736:83:15",
																"nodeType": "YulBlock",
																"src": "9736:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9738:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9738:77:15"
																			},
																			"nativeSrc": "9738:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9738:79:15"
																		},
																		"nativeSrc": "9738:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9738:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9711:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9711:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9720:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9720:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9707:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9707:3:15"
																		},
																		"nativeSrc": "9707:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9707:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9732:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9732:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9703:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9703:3:15"
																},
																"nativeSrc": "9703:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9703:32:15"
															},
															"nativeSrc": "9700:119:15",
															"nodeType": "YulIf",
															"src": "9700:119:15"
														},
														{
															"nativeSrc": "9829:117:15",
															"nodeType": "YulBlock",
															"src": "9829:117:15",
															"statements": [
																{
																	"nativeSrc": "9844:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9844:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9858:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9858:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9848:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9848:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9873:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9873:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9908:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9908:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9919:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9919:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9904:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9904:3:15"
																				},
																				"nativeSrc": "9904:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9904:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9928:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9928:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9883:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9883:20:15"
																		},
																		"nativeSrc": "9883:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9883:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9873:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9873:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9624:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9660:9:15",
														"nodeType": "YulTypedName",
														"src": "9660:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9671:7:15",
														"nodeType": "YulTypedName",
														"src": "9671:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9683:6:15",
														"nodeType": "YulTypedName",
														"src": "9683:6:15",
														"type": ""
													}
												],
												"src": "9624:329:15"
											},
											{
												"body": {
													"nativeSrc": "10049:634:15",
													"nodeType": "YulBlock",
													"src": "10049:634:15",
													"statements": [
														{
															"nativeSrc": "10059:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10059:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nativeSrc": "10098:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "10098:11:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10085:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "10085:12:15"
																},
																"nativeSrc": "10085:25:15",
																"nodeType": "YulFunctionCall",
																"src": "10085:25:15"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nativeSrc": "10063:18:15",
																	"nodeType": "YulTypedName",
																	"src": "10063:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10204:83:15",
																"nodeType": "YulBlock",
																"src": "10204:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
																				"nativeSrc": "10206:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10206:77:15"
																			},
																			"nativeSrc": "10206:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10206:79:15"
																		},
																		"nativeSrc": "10206:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10206:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nativeSrc": "10133:18:15",
																				"nodeType": "YulIdentifier",
																				"src": "10133:18:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nativeSrc": "10161:12:15",
																									"nodeType": "YulIdentifier",
																									"src": "10161:12:15"
																								},
																								"nativeSrc": "10161:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10161:14:15"
																							},
																							{
																								"name": "base_ref",
																								"nativeSrc": "10177:8:15",
																								"nodeType": "YulIdentifier",
																								"src": "10177:8:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "10157:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "10157:3:15"
																						},
																						"nativeSrc": "10157:29:15",
																						"nodeType": "YulFunctionCall",
																						"src": "10157:29:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10192:4:15",
																								"nodeType": "YulLiteral",
																								"src": "10192:4:15",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10198:1:15",
																								"nodeType": "YulLiteral",
																								"src": "10198:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "10188:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "10188:3:15"
																						},
																						"nativeSrc": "10188:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "10188:12:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10153:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10153:3:15"
																				},
																				"nativeSrc": "10153:48:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10153:48:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10129:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10129:3:15"
																		},
																		"nativeSrc": "10129:73:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10129:73:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10122:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10122:6:15"
																},
																"nativeSrc": "10122:81:15",
																"nodeType": "YulFunctionCall",
																"src": "10122:81:15"
															},
															"nativeSrc": "10119:168:15",
															"nodeType": "YulIf",
															"src": "10119:168:15"
														},
														{
															"nativeSrc": "10296:41:15",
															"nodeType": "YulAssignment",
															"src": "10296:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nativeSrc": "10308:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "10308:8:15"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nativeSrc": "10318:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "10318:18:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10304:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10304:3:15"
																},
																"nativeSrc": "10304:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10304:33:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "10296:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10296:4:15"
																}
															]
														},
														{
															"nativeSrc": "10347:28:15",
															"nodeType": "YulAssignment",
															"src": "10347:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "10370:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10370:4:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10357:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "10357:12:15"
																},
																"nativeSrc": "10357:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10357:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10347:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10418:83:15",
																"nodeType": "YulBlock",
																"src": "10418:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
																				"nativeSrc": "10420:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10420:77:15"
																			},
																			"nativeSrc": "10420:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10420:79:15"
																		},
																		"nativeSrc": "10420:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10420:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10390:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10390:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10398:18:15",
																		"nodeType": "YulLiteral",
																		"src": "10398:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10387:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10387:2:15"
																},
																"nativeSrc": "10387:30:15",
																"nodeType": "YulFunctionCall",
																"src": "10387:30:15"
															},
															"nativeSrc": "10384:117:15",
															"nodeType": "YulIf",
															"src": "10384:117:15"
														},
														{
															"nativeSrc": "10510:21:15",
															"nodeType": "YulAssignment",
															"src": "10510:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "10522:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10522:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10528:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10528:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10518:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:15"
																},
																"nativeSrc": "10518:13:15",
																"nodeType": "YulFunctionCall",
																"src": "10518:13:15"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "10510:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10510:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10593:83:15",
																"nodeType": "YulBlock",
																"src": "10593:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
																				"nativeSrc": "10595:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10595:77:15"
																			},
																			"nativeSrc": "10595:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10595:79:15"
																		},
																		"nativeSrc": "10595:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10595:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "10547:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10547:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nativeSrc": "10557:12:15",
																					"nodeType": "YulIdentifier",
																					"src": "10557:12:15"
																				},
																				"nativeSrc": "10557:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10557:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10577:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10577:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10585:4:15",
																						"nodeType": "YulLiteral",
																						"src": "10585:4:15",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10573:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10573:3:15"
																				},
																				"nativeSrc": "10573:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10573:17:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10553:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10553:3:15"
																		},
																		"nativeSrc": "10553:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10553:38:15"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nativeSrc": "10543:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10543:3:15"
																},
																"nativeSrc": "10543:49:15",
																"nodeType": "YulFunctionCall",
																"src": "10543:49:15"
															},
															"nativeSrc": "10540:136:15",
															"nodeType": "YulIf",
															"src": "10540:136:15"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nativeSrc": "9959:724:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nativeSrc": "10010:8:15",
														"nodeType": "YulTypedName",
														"src": "10010:8:15",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nativeSrc": "10020:11:15",
														"nodeType": "YulTypedName",
														"src": "10020:11:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nativeSrc": "10036:4:15",
														"nodeType": "YulTypedName",
														"src": "10036:4:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10042:6:15",
														"nodeType": "YulTypedName",
														"src": "10042:6:15",
														"type": ""
													}
												],
												"src": "9959:724:15"
											},
											{
												"body": {
													"nativeSrc": "10752:80:15",
													"nodeType": "YulBlock",
													"src": "10752:80:15",
													"statements": [
														{
															"nativeSrc": "10762:22:15",
															"nodeType": "YulAssignment",
															"src": "10762:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10777:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10777:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10771:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10771:5:15"
																},
																"nativeSrc": "10771:13:15",
																"nodeType": "YulFunctionCall",
																"src": "10771:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10762:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10762:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10820:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10820:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "10793:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "10793:26:15"
																},
																"nativeSrc": "10793:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10793:33:15"
															},
															"nativeSrc": "10793:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "10793:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "10689:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10730:6:15",
														"nodeType": "YulTypedName",
														"src": "10730:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10738:3:15",
														"nodeType": "YulTypedName",
														"src": "10738:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10746:5:15",
														"nodeType": "YulTypedName",
														"src": "10746:5:15",
														"type": ""
													}
												],
												"src": "10689:143:15"
											},
											{
												"body": {
													"nativeSrc": "10915:274:15",
													"nodeType": "YulBlock",
													"src": "10915:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10961:83:15",
																"nodeType": "YulBlock",
																"src": "10961:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10963:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10963:77:15"
																			},
																			"nativeSrc": "10963:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10963:79:15"
																		},
																		"nativeSrc": "10963:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10963:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10936:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10936:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10945:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10945:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10932:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10932:3:15"
																		},
																		"nativeSrc": "10932:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10932:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10957:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10957:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10928:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10928:3:15"
																},
																"nativeSrc": "10928:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10928:32:15"
															},
															"nativeSrc": "10925:119:15",
															"nodeType": "YulIf",
															"src": "10925:119:15"
														},
														{
															"nativeSrc": "11054:128:15",
															"nodeType": "YulBlock",
															"src": "11054:128:15",
															"statements": [
																{
																	"nativeSrc": "11069:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11069:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11083:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11083:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11073:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11073:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11098:74:15",
																	"nodeType": "YulAssignment",
																	"src": "11098:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11144:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11144:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11155:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11155:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11140:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11140:3:15"
																				},
																				"nativeSrc": "11140:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11140:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11164:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11164:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "11108:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "11108:31:15"
																		},
																		"nativeSrc": "11108:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11108:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11098:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11098:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "10838:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10885:9:15",
														"nodeType": "YulTypedName",
														"src": "10885:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10896:7:15",
														"nodeType": "YulTypedName",
														"src": "10896:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10908:6:15",
														"nodeType": "YulTypedName",
														"src": "10908:6:15",
														"type": ""
													}
												],
												"src": "10838:351:15"
											},
											{
												"body": {
													"nativeSrc": "11301:58:15",
													"nodeType": "YulBlock",
													"src": "11301:58:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11323:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11323:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11331:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11331:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11319:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:15"
																		},
																		"nativeSrc": "11319:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:14:15"
																	},
																	{
																		"hexValue": "4461746120746f6f2073686f7274",
																		"kind": "string",
																		"nativeSrc": "11335:16:15",
																		"nodeType": "YulLiteral",
																		"src": "11335:16:15",
																		"type": "",
																		"value": "Data too short"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11312:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11312:6:15"
																},
																"nativeSrc": "11312:40:15",
																"nodeType": "YulFunctionCall",
																"src": "11312:40:15"
															},
															"nativeSrc": "11312:40:15",
															"nodeType": "YulExpressionStatement",
															"src": "11312:40:15"
														}
													]
												},
												"name": "store_literal_in_memory_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
												"nativeSrc": "11195:164:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11293:6:15",
														"nodeType": "YulTypedName",
														"src": "11293:6:15",
														"type": ""
													}
												],
												"src": "11195:164:15"
											},
											{
												"body": {
													"nativeSrc": "11511:220:15",
													"nodeType": "YulBlock",
													"src": "11511:220:15",
													"statements": [
														{
															"nativeSrc": "11521:74:15",
															"nodeType": "YulAssignment",
															"src": "11521:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11587:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11587:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11592:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11592:2:15",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11528:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "11528:58:15"
																},
																"nativeSrc": "11528:67:15",
																"nodeType": "YulFunctionCall",
																"src": "11528:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11521:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11521:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11693:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11693:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
																	"nativeSrc": "11604:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "11604:88:15"
																},
																"nativeSrc": "11604:93:15",
																"nodeType": "YulFunctionCall",
																"src": "11604:93:15"
															},
															"nativeSrc": "11604:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "11604:93:15"
														},
														{
															"nativeSrc": "11706:19:15",
															"nodeType": "YulAssignment",
															"src": "11706:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11717:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11717:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11722:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11722:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11713:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11713:3:15"
																},
																"nativeSrc": "11713:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11713:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11706:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11706:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11365:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11499:3:15",
														"nodeType": "YulTypedName",
														"src": "11499:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11507:3:15",
														"nodeType": "YulTypedName",
														"src": "11507:3:15",
														"type": ""
													}
												],
												"src": "11365:366:15"
											},
											{
												"body": {
													"nativeSrc": "11908:248:15",
													"nodeType": "YulBlock",
													"src": "11908:248:15",
													"statements": [
														{
															"nativeSrc": "11918:26:15",
															"nodeType": "YulAssignment",
															"src": "11918:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11930:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11930:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11941:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11941:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11926:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11926:3:15"
																},
																"nativeSrc": "11926:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11926:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11918:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11918:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11965:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11965:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11976:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11976:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11961:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11961:3:15"
																		},
																		"nativeSrc": "11961:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11961:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11984:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "11984:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11990:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11990:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11980:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11980:3:15"
																		},
																		"nativeSrc": "11980:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11980:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11954:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11954:6:15"
																},
																"nativeSrc": "11954:47:15",
																"nodeType": "YulFunctionCall",
																"src": "11954:47:15"
															},
															"nativeSrc": "11954:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "11954:47:15"
														},
														{
															"nativeSrc": "12010:139:15",
															"nodeType": "YulAssignment",
															"src": "12010:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12144:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "12144:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12018:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "12018:124:15"
																},
																"nativeSrc": "12018:131:15",
																"nodeType": "YulFunctionCall",
																"src": "12018:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12010:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12010:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11737:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11888:9:15",
														"nodeType": "YulTypedName",
														"src": "11888:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11903:4:15",
														"nodeType": "YulTypedName",
														"src": "11903:4:15",
														"type": ""
													}
												],
												"src": "11737:419:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct Attestation[]\n    function abi_decode_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct Attestation\n    function abi_decode_t_struct$_Attestation_$4114_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 320) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_Attestation_$4114_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_Attestation_$4114_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_struct$_Attestation_$4114_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x0140, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Data too short\")\n\n    }\n\n    function abi_encode_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"4586": [
									{
										"length": 32,
										"start": 1423
									}
								],
								"4898": [
									{
										"length": 32,
										"start": 451
									}
								],
								"4900": [
									{
										"length": 32,
										"start": 492
									}
								],
								"4902": [
									{
										"length": 32,
										"start": 533
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c806354fd4d50146100a157806388e5b2d9146100cb57806391db0b7e146100fb578063ce46e0461461012b578063e49617e114610155578063e60c3505146101855761009d565b3661009d576100656101b5565b61009b576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b5f5ffd5b3480156100ac575f5ffd5b506100b56101bc565b6040516100c29190610aec565b60405180910390f35b6100e560048036038101906100e09190610bca565b61025f565b6040516100f29190610c62565b60405180910390f35b61011560048036038101906101109190610bca565b610377565b6040516101229190610c62565b60405180910390f35b348015610136575f5ffd5b5061013f6101b5565b60405161014c9190610c62565b60405180910390f35b61016f600480360381019061016a9190610c9e565b61048f565b60405161017c9190610c62565b60405180910390f35b61019f600480360381019061019a9190610c9e565b6104a9565b6040516101ac9190610c62565b60405180910390f35b5f5f905090565b60606101e77f00000000000000000000000000000000000000000000000000000000000000006104c3565b6102107f00000000000000000000000000000000000000000000000000000000000000006104c3565b6102397f00000000000000000000000000000000000000000000000000000000000000006104c3565b60405160200161024b93929190610d69565b604051602081830303815290604052905090565b5f61026861058d565b5f8585905090508383905081146102ab576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3490505f5f90505b82811015610367575f8686838181106102d0576102cf610daf565b5b90506020020135905082811115610313576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61034189898481811061032957610328610daf565b5b905060200281019061033b9190610de8565b82610614565b610351575f94505050505061036f565b8083039250506103608161061f565b90506102b4565b506001925050505b949350505050565b5f61038061058d565b5f8585905090508383905081146103c3576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3490505f5f90505b8281101561047f575f8686838181106103e8576103e7610daf565b5b9050602002013590508281111561042b576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045989898481811061044157610440610daf565b5b90506020028101906104539190610de8565b8261062b565b610469575f945050505050610487565b8083039250506104788161061f565b90506103cc565b506001925050505b949350505050565b5f61049861058d565b6104a28234610614565b9050919050565b5f6104b261058d565b6104bc823461062b565b9050919050565b60605f60016104d184610870565b0190505f8167ffffffffffffffff8111156104ef576104ee610e10565b5b6040519080825280601f01601f1916602001820160405280156105215781602001600182028036833780820191505090505b5090505f82602001820190505b600115610582578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161057757610576610e3d565b5b0494505f850361052e575b819350505050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610612576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6001905092915050565b5f600182019050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168360c00160208101906106569190610ec4565b73ffffffffffffffffffffffffffffffffffffffff1603610679575f905061086a565b5f6106d58480610120019061068e9190610eef565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050506109c1565b9050806106e657600191505061086a565b5f8460c00160208101906106fa9190610ec4565b73ffffffffffffffffffffffffffffffffffffffff163b0361071f575f91505061086a565b5f4690505f61077f868061012001906107389190610eef565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050610a23565b9050808214610793575f935050505061086a565b5f8660c00160208101906107a79190610ec4565b90508073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561081157506040513d601f19601f8201168201806040525081019061080e9190610f65565b60015b610821575f94505050505061086a565b8073ffffffffffffffffffffffffffffffffffffffff168860e001602081019061084b9190610ec4565b73ffffffffffffffffffffffffffffffffffffffff1614955050505050505b92915050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106108cc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816108c2576108c1610e3d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610909576d04ee2d6d415b85acef810000000083816108ff576108fe610e3d565b5b0492506020810190505b662386f26fc10000831061093857662386f26fc10000838161092e5761092d610e3d565b5b0492506010810190505b6305f5e1008310610961576305f5e100838161095757610956610e3d565b5b0492506008810190505b612710831061098657612710838161097c5761097b610e3d565b5b0492506004810190505b606483106109a9576064838161099f5761099e610e3d565b5b0492506002810190505b600a83106109b8576001810190505b80915050919050565b5f61012082511015610a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ff90610fda565b60405180910390fd5b5f610120830151905060018116905060018114915050919050565b5f61010082511015610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190610fda565b60405180910390fd5b5f610100830151905080915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610abe82610a7c565b610ac88185610a86565b9350610ad8818560208601610a96565b610ae181610aa4565b840191505092915050565b5f6020820190508181035f830152610b048184610ab4565b905092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610b3557610b34610b14565b5b8235905067ffffffffffffffff811115610b5257610b51610b18565b5b602083019150836020820283011115610b6e57610b6d610b1c565b5b9250929050565b5f5f83601f840112610b8a57610b89610b14565b5b8235905067ffffffffffffffff811115610ba757610ba6610b18565b5b602083019150836020820283011115610bc357610bc2610b1c565b5b9250929050565b5f5f5f5f60408587031215610be257610be1610b0c565b5b5f85013567ffffffffffffffff811115610bff57610bfe610b10565b5b610c0b87828801610b20565b9450945050602085013567ffffffffffffffff811115610c2e57610c2d610b10565b5b610c3a87828801610b75565b925092505092959194509250565b5f8115159050919050565b610c5c81610c48565b82525050565b5f602082019050610c755f830184610c53565b92915050565b5f5ffd5b5f6101408284031215610c9557610c94610c7b565b5b81905092915050565b5f60208284031215610cb357610cb2610b0c565b5b5f82013567ffffffffffffffff811115610cd057610ccf610b10565b5b610cdc84828501610c7f565b91505092915050565b5f81905092915050565b5f610cf982610a7c565b610d038185610ce5565b9350610d13818560208601610a96565b80840191505092915050565b7f2e000000000000000000000000000000000000000000000000000000000000005f82015250565b5f610d53600183610ce5565b9150610d5e82610d1f565b600182019050919050565b5f610d748286610cef565b9150610d7f82610d47565b9150610d8b8285610cef565b9150610d9682610d47565b9150610da28284610cef565b9150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f8235600161014003833603038112610e0457610e03610ddc565b5b80830191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e9382610e6a565b9050919050565b610ea381610e89565b8114610ead575f5ffd5b50565b5f81359050610ebe81610e9a565b92915050565b5f60208284031215610ed957610ed8610b0c565b5b5f610ee684828501610eb0565b91505092915050565b5f5f83356001602003843603038112610f0b57610f0a610ddc565b5b80840192508235915067ffffffffffffffff821115610f2d57610f2c610de0565b5b602083019250600182023603831315610f4957610f48610de4565b5b509250929050565b5f81519050610f5f81610e9a565b92915050565b5f60208284031215610f7a57610f79610b0c565b5b5f610f8784828501610f51565b91505092915050565b7f4461746120746f6f2073686f72740000000000000000000000000000000000005f82015250565b5f610fc4600e83610a86565b9150610fcf82610f90565b602082019050919050565b5f6020820190508181035f830152610ff181610fb8565b905091905056fea26469706673582212202a165b211f8d2842f57d20db383511ebb4d61eef2f4caee4a6e869de0a5021ad64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x88E5B2D9 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x91DB0B7E EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xCE46E046 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xE49617E1 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xE60C3505 EQ PUSH2 0x185 JUMPI PUSH2 0x9D JUMP JUMPDEST CALLDATASIZE PUSH2 0x9D JUMPI PUSH2 0x65 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1574F9F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 PUSH32 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x210 PUSH32 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x239 PUSH32 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x268 PUSH2 0x58D JUMP JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x2D0 JUMPI PUSH2 0x2CF PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1101129400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x341 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x329 JUMPI PUSH2 0x328 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST DUP3 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x351 JUMPI PUSH0 SWAP5 POP POP POP POP POP PUSH2 0x36F JUMP JUMPDEST DUP1 DUP4 SUB SWAP3 POP POP PUSH2 0x360 DUP2 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP PUSH2 0x2B4 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x380 PUSH2 0x58D JUMP JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x47F JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1101129400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x459 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x441 JUMPI PUSH2 0x440 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST DUP3 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x469 JUMPI PUSH0 SWAP5 POP POP POP POP POP PUSH2 0x487 JUMP JUMPDEST DUP1 DUP4 SUB SWAP3 POP POP PUSH2 0x478 DUP2 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP PUSH2 0x3CC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x4A2 DUP3 CALLVALUE PUSH2 0x614 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B2 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x4BC DUP3 CALLVALUE PUSH2 0x62B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x4D1 DUP5 PUSH2 0x870 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x521 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x582 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x577 JUMPI PUSH2 0x576 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x52E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x679 JUMPI PUSH0 SWAP1 POP PUSH2 0x86A JUMP JUMPDEST PUSH0 PUSH2 0x6D5 DUP5 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x68E SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6E6 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x86A JUMP JUMPDEST PUSH0 DUP5 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x71F JUMPI PUSH0 SWAP2 POP POP PUSH2 0x86A JUMP JUMPDEST PUSH0 CHAINID SWAP1 POP PUSH0 PUSH2 0x77F DUP7 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x738 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x793 JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x86A JUMP JUMPDEST PUSH0 DUP7 PUSH1 0xC0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x811 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80E SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x821 JUMPI PUSH0 SWAP5 POP POP POP POP POP PUSH2 0x86A JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0xE0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x8CC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x8C2 JUMPI PUSH2 0x8C1 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x909 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x938 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x92E JUMPI PUSH2 0x92D PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x961 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x957 JUMPI PUSH2 0x956 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x986 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x9A9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x9B8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 MLOAD LT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 POP PUSH1 0x1 DUP2 AND SWAP1 POP PUSH1 0x1 DUP2 EQ SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 MLOAD LT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x100 DUP4 ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xABE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAC8 DUP2 DUP6 PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP PUSH2 0xAD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xAE1 DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB04 DUP2 DUP5 PUSH2 0xAB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB35 JUMPI PUSH2 0xB34 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB52 JUMPI PUSH2 0xB51 PUSH2 0xB18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6D PUSH2 0xB1C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB8A JUMPI PUSH2 0xB89 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA7 JUMPI PUSH2 0xBA6 PUSH2 0xB18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBFF JUMPI PUSH2 0xBFE PUSH2 0xB10 JUMP JUMPDEST JUMPDEST PUSH2 0xC0B DUP8 DUP3 DUP9 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC2E JUMPI PUSH2 0xC2D PUSH2 0xB10 JUMP JUMPDEST JUMPDEST PUSH2 0xC3A DUP8 DUP3 DUP9 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5C DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC75 PUSH0 DUP4 ADD DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0xC7B JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0xB10 JUMP JUMPDEST JUMPDEST PUSH2 0xCDC DUP5 DUP3 DUP6 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xD03 DUP2 DUP6 PUSH2 0xCE5 JUMP JUMPDEST SWAP4 POP PUSH2 0xD13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA96 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD53 PUSH1 0x1 DUP4 PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xD5E DUP3 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD74 DUP3 DUP7 PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP PUSH2 0xD7F DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8B DUP3 DUP6 PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP PUSH2 0xD96 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA2 DUP3 DUP5 PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH2 0x140 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0xDDC JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE93 DUP3 PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA3 DUP2 PUSH2 0xE89 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBE DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED9 JUMPI PUSH2 0xED8 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEE6 DUP5 DUP3 DUP6 ADD PUSH2 0xEB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xF0B JUMPI PUSH2 0xF0A PUSH2 0xDDC JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF2D JUMPI PUSH2 0xF2C PUSH2 0xDE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xF49 JUMPI PUSH2 0xF48 PUSH2 0xDE4 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF5F DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0xB0C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF87 DUP5 DUP3 DUP6 ADD PUSH2 0xF51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4461746120746F6F2073686F7274000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC4 PUSH1 0xE DUP4 PUSH2 0xA86 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCF DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF1 DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A AND JUMPDEST 0x21 0x1F DUP14 0x28 TIMESTAMP CREATE2 PUSH30 0x20DB383511EBB4D61EEF2F4CAEE4A6E869DE0A5021AD64736F6C63430008 SHL STOP CALLER ",
							"sourceMap": "344:2874:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:11:12;:9;:11::i;:::-;1135:62;;1174:12;;;;;;;;;;;;;;1135:62;344:2874:14;;;;;945:235:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3124:1460:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1433:1461;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2936:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:85;1022:4;1045:5;1038:12;;972:85;:::o;945:235:13:-;987:13;1072:24;1089:6;1072:16;:24::i;:::-;1103;1120:6;1103:16;:24::i;:::-;1134;1151:6;1134:16;:24::i;:::-;1055:104;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1012:161;;945:235;:::o;3124:1460:12:-;3265:4;901:10;:8;:10::i;:::-;3281:14:::1;3298:12;;:19;;3281:36;;3341:6;;:13;;3331:6;:23;3327:76;;3377:15;;;;;;;;;;;;;;3327:76;3810:22;3835:9;3810:34;;3860:9;3872:1;3860:13;;3855:701;3879:6;3875:1;:10;3855:701;;;4012:13;4028:6;;4035:1;4028:9;;;;;;;:::i;:::-;;;;;;;;4012:25;;4063:14;4055:5;:22;4051:87;;;4104:19;;;;;;;;;;;;;;4051:87;4266:32;4275:12;;4288:1;4275:15;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;4292:5;4266:8;:32::i;:::-;4261:84;;4325:5;4318:12;;;;;;;;4261:84;4526:5;4508:23;;;;3908:648;3891:15;3904:1;3891:12;:15::i;:::-;3887:19;;3855:701;;;;4573:4;4566:11;;;;922:1;3124:1460:::0;;;;;;:::o;1433:1461::-;1574:4;901:10;:8;:10::i;:::-;1590:14:::1;1607:12;;:19;;1590:36;;1650:6;;:13;;1640:6;:23;1636:76;;1686:15;;;;;;;;;;;;;;1636:76;2119:22;2144:9;2119:34;;2169:9;2181:1;2169:13;;2164:702;2188:6;2184:1;:10;2164:702;;;2321:13;2337:6;;2344:1;2337:9;;;;;;;:::i;:::-;;;;;;;;2321:25;;2372:14;2364:5;:22;2360:87;;;2413:19;;;;;;;;;;;;;;2360:87;2576:32;2585:12;;2598:1;2585:15;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;2602:5;2576:8;:32::i;:::-;2571:84;;2635:5;2628:12;;;;;;;;2571:84;2836:5;2818:23;;;;2217:649;2200:15;2213:1;2200:12;:15::i;:::-;2196:19;;2164:702;;;;2883:4;2876:11;;;;922:1;1433:1461:::0;;;;;;:::o;2936:146::-;3020:4;901:10;:8;:10::i;:::-;3043:32:::1;3052:11;3065:9;3043:8;:32::i;:::-;3036:39;;2936:146:::0;;;:::o;1245:::-;1329:4;901:10;:8;:10::i;:::-;1352:32:::1;1361:11;1374:9;1352:8;:32::i;:::-;1345:39;;1245:146:::0;;;:::o;637:632:3:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;6031:128:12:-;6100:4;6078:27;;:10;:27;;;6074:79;;6128:14;;;;;;;;;;;;;;6074:79;6031:128::o;3075:141:14:-;3182:4;3205;3198:11;;3075:141;;;;:::o;1397:102:7:-;1444:9;1489:1;1485;:5;1481:9;;1397:102;;;:::o;450:1651:14:-;553:4;698:1;665:35;;:11;:21;;;;;;;;;;:::i;:::-;:35;;;661:78;;723:5;716:12;;;;661:78;813:17;833:45;861:11;:16;;;;;;;;:::i;:::-;833:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;:45::i;:::-;813:65;;946:12;941:55;;981:4;974:11;;;;;941:55;1252:1;1215:11;:21;;;;;;;;;;:::i;:::-;:33;;;:38;1211:81;;1276:5;1269:12;;;;;1211:81;1368:22;1441:9;1423:27;;1478:23;1504:40;1527:11;:16;;;;;;;;:::i;:::-;1504:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:40::i;:::-;1478:66;;1576:15;1558:14;:33;1554:76;;1614:5;1607:12;;;;;;;1554:76;1698:23;1732:11;:21;;;;;;;;;;:::i;:::-;1698:56;;1769:15;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1765:330;;2079:5;2072:12;;;;;;;;1765:330;1939:5;1915:29;;:11;:20;;;;;;;;;;:::i;:::-;:29;;;1908:36;;;;;;;450:1651;;;;;:::o;25316:916:4:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;2555:514:14:-;2634:4;2673:3;2658:4;:11;:18;;2650:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2807:22;2896:3;2890:4;2886:14;2880:21;2862:39;;2978:3;2962:14;2958:24;2940:42;;3061:1;3043:14;:19;3036:26;;;2555:514;;;:::o;2107:442::-;2181:7;2223:3;2208:4;:11;:18;;2200:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2341:22;2430:3;2424:4;2420:14;2414:21;2396:39;;2528:14;2521:21;;;2107:442;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:117;1678:1;1675;1668:12;1692:117;1801:1;1798;1791:12;1815:117;1924:1;1921;1914:12;1966:599;2070:8;2080:6;2130:3;2123:4;2115:6;2111:17;2107:27;2097:122;;2138:79;;:::i;:::-;2097:122;2251:6;2238:20;2228:30;;2281:18;2273:6;2270:30;2267:117;;;2303:79;;:::i;:::-;2267:117;2417:4;2409:6;2405:17;2393:29;;2471:3;2463:4;2455:6;2451:17;2441:8;2437:32;2434:41;2431:128;;;2478:79;;:::i;:::-;2431:128;1966:599;;;;;:::o;2588:568::-;2661:8;2671:6;2721:3;2714:4;2706:6;2702:17;2698:27;2688:122;;2729:79;;:::i;:::-;2688:122;2842:6;2829:20;2819:30;;2872:18;2864:6;2861:30;2858:117;;;2894:79;;:::i;:::-;2858:117;3008:4;3000:6;2996:17;2984:29;;3062:3;3054:4;3046:6;3042:17;3032:8;3028:32;3025:41;3022:128;;;3069:79;;:::i;:::-;3022:128;2588:568;;;;;:::o;3162:996::-;3315:6;3323;3331;3339;3388:2;3376:9;3367:7;3363:23;3359:32;3356:119;;;3394:79;;:::i;:::-;3356:119;3542:1;3531:9;3527:17;3514:31;3572:18;3564:6;3561:30;3558:117;;;3594:79;;:::i;:::-;3558:117;3707:111;3810:7;3801:6;3790:9;3786:22;3707:111;:::i;:::-;3689:129;;;;3485:343;3895:2;3884:9;3880:18;3867:32;3926:18;3918:6;3915:30;3912:117;;;3948:79;;:::i;:::-;3912:117;4061:80;4133:7;4124:6;4113:9;4109:22;4061:80;:::i;:::-;4043:98;;;;3838:313;3162:996;;;;;;;:::o;4164:90::-;4198:7;4241:5;4234:13;4227:21;4216:32;;4164:90;;;:::o;4260:109::-;4341:21;4356:5;4341:21;:::i;:::-;4336:3;4329:34;4260:109;;:::o;4375:210::-;4462:4;4500:2;4489:9;4485:18;4477:26;;4513:65;4575:1;4564:9;4560:17;4551:6;4513:65;:::i;:::-;4375:210;;;;:::o;4591:117::-;4700:1;4697;4690:12;4740:236;4817:5;4858:3;4849:6;4844:3;4840:16;4836:26;4833:113;;;4865:79;;:::i;:::-;4833:113;4964:6;4955:15;;4740:236;;;;:::o;4982:551::-;5072:6;5121:2;5109:9;5100:7;5096:23;5092:32;5089:119;;;5127:79;;:::i;:::-;5089:119;5275:1;5264:9;5260:17;5247:31;5305:18;5297:6;5294:30;5291:117;;;5327:79;;:::i;:::-;5291:117;5432:84;5508:7;5499:6;5488:9;5484:22;5432:84;:::i;:::-;5422:94;;5218:308;4982:551;;;;:::o;5539:148::-;5641:11;5678:3;5663:18;;5539:148;;;;:::o;5693:390::-;5799:3;5827:39;5860:5;5827:39;:::i;:::-;5882:89;5964:6;5959:3;5882:89;:::i;:::-;5875:96;;5980:65;6038:6;6033:3;6026:4;6019:5;6015:16;5980:65;:::i;:::-;6070:6;6065:3;6061:16;6054:23;;5803:280;5693:390;;;;:::o;6089:151::-;6229:3;6225:1;6217:6;6213:14;6206:27;6089:151;:::o;6246:400::-;6406:3;6427:84;6509:1;6504:3;6427:84;:::i;:::-;6420:91;;6520:93;6609:3;6520:93;:::i;:::-;6638:1;6633:3;6629:11;6622:18;;6246:400;;;:::o;6652:1127::-;7082:3;7104:95;7195:3;7186:6;7104:95;:::i;:::-;7097:102;;7216:148;7360:3;7216:148;:::i;:::-;7209:155;;7381:95;7472:3;7463:6;7381:95;:::i;:::-;7374:102;;7493:148;7637:3;7493:148;:::i;:::-;7486:155;;7658:95;7749:3;7740:6;7658:95;:::i;:::-;7651:102;;7770:3;7763:10;;6652:1127;;;;;;:::o;7785:180::-;7833:77;7830:1;7823:88;7930:4;7927:1;7920:15;7954:4;7951:1;7944:15;7971:117;8080:1;8077;8070:12;8094:117;8203:1;8200;8193:12;8217:117;8326:1;8323;8316:12;8340:399;8437:4;8491:11;8478:25;8593:1;8585:6;8581:14;8570:8;8554:14;8550:29;8546:50;8526:18;8522:75;8512:170;;8601:79;;:::i;:::-;8512:170;8713:18;8703:8;8699:33;8691:41;;8442:297;8340:399;;;;:::o;8745:180::-;8793:77;8790:1;8783:88;8890:4;8887:1;8880:15;8914:4;8911:1;8904:15;8931:180;8979:77;8976:1;8969:88;9076:4;9073:1;9066:15;9100:4;9097:1;9090:15;9117:126;9154:7;9194:42;9187:5;9183:54;9172:65;;9117:126;;;:::o;9249:96::-;9286:7;9315:24;9333:5;9315:24;:::i;:::-;9304:35;;9249:96;;;:::o;9351:122::-;9424:24;9442:5;9424:24;:::i;:::-;9417:5;9414:35;9404:63;;9463:1;9460;9453:12;9404:63;9351:122;:::o;9479:139::-;9525:5;9563:6;9550:20;9541:29;;9579:33;9606:5;9579:33;:::i;:::-;9479:139;;;;:::o;9624:329::-;9683:6;9732:2;9720:9;9711:7;9707:23;9703:32;9700:119;;;9738:79;;:::i;:::-;9700:119;9858:1;9883:53;9928:7;9919:6;9908:9;9904:22;9883:53;:::i;:::-;9873:63;;9829:117;9624:329;;;;:::o;9959:724::-;10036:4;10042:6;10098:11;10085:25;10198:1;10192:4;10188:12;10177:8;10161:14;10157:29;10153:48;10133:18;10129:73;10119:168;;10206:79;;:::i;:::-;10119:168;10318:18;10308:8;10304:33;10296:41;;10370:4;10357:18;10347:28;;10398:18;10390:6;10387:30;10384:117;;;10420:79;;:::i;:::-;10384:117;10528:2;10522:4;10518:13;10510:21;;10585:4;10577:6;10573:17;10557:14;10553:38;10547:4;10543:49;10540:136;;;10595:79;;:::i;:::-;10540:136;10049:634;9959:724;;;;;:::o;10689:143::-;10746:5;10777:6;10771:13;10762:22;;10793:33;10820:5;10793:33;:::i;:::-;10689:143;;;;:::o;10838:351::-;10908:6;10957:2;10945:9;10936:7;10932:23;10928:32;10925:119;;;10963:79;;:::i;:::-;10925:119;11083:1;11108:64;11164:7;11155:6;11144:9;11140:22;11108:64;:::i;:::-;11098:74;;11054:128;10838:351;;;;:::o;11195:164::-;11335:16;11331:1;11323:6;11319:14;11312:40;11195:164;:::o;11365:366::-;11507:3;11528:67;11592:2;11587:3;11528:67;:::i;:::-;11521:74;;11604:93;11693:3;11604:93;:::i;:::-;11722:2;11717:3;11713:12;11706:19;;11365:366;;;:::o;11737:419::-;11903:4;11941:2;11930:9;11926:18;11918:26;;11990:9;11984:4;11980:20;11976:1;11965:9;11961:17;11954:47;12018:131;12144:4;12018:131;:::i;:::-;12010:139;;11737:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "828400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "infinite",
								"isPayable()": "381",
								"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "infinite",
								"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "infinite",
								"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "infinite",
								"version()": "infinite"
							},
							"internal": {
								"extractChainIdFromData(bytes memory)": "infinite",
								"extractOwnableCheckFromData(bytes memory)": "infinite",
								"onAttest(struct Attestation calldata,uint256)": "infinite",
								"onRevoke(struct Attestation calldata,uint256)": "29"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 400,
									"end": 444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 400,
									"end": 444,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 400,
									"end": 444,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 437,
									"end": 440,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 676,
									"end": 677,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 680,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 682,
									"end": 683,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 773,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 759,
									"end": 773,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 759,
									"end": 773,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 792,
									"end": 797,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 783,
									"end": 797,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 783,
									"end": 797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 816,
									"end": 821,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 807,
									"end": 821,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 807,
									"end": 821,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 692,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 723,
									"end": 724,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 699,
									"end": 725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 699,
									"end": 725,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 707,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 699,
									"end": 725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 699,
									"end": 725,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 699,
									"end": 725,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 695,
									"end": 771,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 695,
									"end": 771,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "83780FFE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 748,
									"end": 760,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 695,
									"end": 771,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 695,
									"end": 771,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 788,
									"end": 791,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 781,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 647,
									"end": 798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 400,
									"end": 444,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1095,
									"end": 1101,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1141,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1119,
									"end": 1142,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1147,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 1150,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1270,
									"end": 1271,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1364,
									"end": 1371,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1355,
									"end": 1361,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1344,
									"end": 1353,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1340,
									"end": 1362,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1295,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1241,
									"end": 1382,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1012,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "4586"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "4902"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "4900"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "4898"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 3218,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a165b211f8d2842f57d20db383511ebb4d61eef2f4caee4a6e869de0a5021ad64736f6c634300081b0033",
									".code": [
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "54FD4D50"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "88E5B2D9"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "91DB0B7E"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "CE46E046"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "E49617E1"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "E60C3505"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1140,
											"end": 1151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1135,
											"end": 1197,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "1574F9F300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1197,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1135,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 3218,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 945,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 945,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3124,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3124,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3124,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1433,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1433,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1433,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 972,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 972,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2936,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 2936,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2936,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1245,
											"end": 1391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1245,
											"end": 1391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1000,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4898"
										},
										{
											"begin": 1072,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1072,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1103,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4900"
										},
										{
											"begin": 1103,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1103,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1103,
											"end": 1127,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1103,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4902"
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1134,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1158,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1134,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1055,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 901,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 901,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 901,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3310,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3310,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3354,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3354,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3354,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3327,
											"end": 3403,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "947D5A8400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3392,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3327,
											"end": 3403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3844,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3873,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3885,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3885,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4036,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4028,
											"end": 4037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4077,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4138,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4051,
											"end": 4138,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1101129400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4123,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4051,
											"end": 4138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4266,
											"end": 4298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 4275,
											"end": 4287,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4287,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4288,
											"end": 4289,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4275,
											"end": 4290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4275,
											"end": 4290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4275,
											"end": 4290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4297,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4266,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4266,
											"end": 4298,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4266,
											"end": 4298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 4266,
											"end": 4298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 4261,
											"end": 4345,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4325,
											"end": 4330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 4261,
											"end": 4345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4531,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4508,
											"end": 4531,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4508,
											"end": 4531,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4508,
											"end": 4531,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4508,
											"end": 4531,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3908,
											"end": 4556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 3904,
											"end": 3905,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 3891,
											"end": 3906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 3891,
											"end": 3906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 4556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4573,
											"end": 4577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4566,
											"end": 4577,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4566,
											"end": 4577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4566,
											"end": 4577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4566,
											"end": 4577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 922,
											"end": 923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 922,
											"end": 923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 4584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 901,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 901,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 901,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1590,
											"end": 1604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1626,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1590,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1590,
											"end": 1626,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1656,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1656,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1663,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1636,
											"end": 1712,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "947D5A8400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1701,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1636,
											"end": 1712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2153,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2182,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2194,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2321,
											"end": 2334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2343,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2344,
											"end": 2345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2337,
											"end": 2346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2346,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2321,
											"end": 2346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2321,
											"end": 2346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2372,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2386,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2360,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1101129400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2432,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2360,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2585,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2599,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2585,
											"end": 2600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2585,
											"end": 2600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2585,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2576,
											"end": 2608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2576,
											"end": 2608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2571,
											"end": 2655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2628,
											"end": 2640,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2571,
											"end": 2655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2841,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2866,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2213,
											"end": 2214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2200,
											"end": 2215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2866,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2883,
											"end": 2887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2876,
											"end": 2887,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 922,
											"end": 923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 922,
											"end": 923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 2894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 901,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 901,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 901,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3052,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3074,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 3043,
											"end": 3075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3043,
											"end": 3075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3036,
											"end": 3075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3036,
											"end": 3075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 3082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 901,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 901,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 901,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1352,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1361,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1374,
											"end": 1383,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1352,
											"end": 1384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1352,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1352,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1345,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1345,
											"end": 1384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 928,
											"end": 934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 952,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 917,
											"end": 952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 917,
											"end": 952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 990,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1109,
											"end": 1111,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1112,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1126,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1161,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1190,
											"end": 1211,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6159,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 6031,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "4586"
										},
										{
											"begin": 6078,
											"end": 6105,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6105,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6088,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6105,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6105,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6105,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6074,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 6074,
											"end": 6153,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "PUSH",
											"source": 12,
											"value": "4CA8886700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6142,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6074,
											"end": 6153,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 6074,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6031,
											"end": 6159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3216,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3075,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3186,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3209,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3198,
											"end": 3209,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3198,
											"end": 3209,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3216,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3216,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1499,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1397,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1490,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 553,
											"end": 557,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 699,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 700,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 700,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 665,
											"end": 676,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 665,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 665,
											"end": 686,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 665,
											"end": 700,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 700,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 665,
											"end": 700,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 661,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 661,
											"end": 739,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 723,
											"end": 728,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 728,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 716,
											"end": 728,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 716,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 716,
											"end": 728,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 739,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 661,
											"end": 739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 813,
											"end": 830,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 861,
											"end": 877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 861,
											"end": 877,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 861,
											"end": 877,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 861,
											"end": 877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 861,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 861,
											"end": 877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 861,
											"end": 877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 861,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 861,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 861,
											"end": 877,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 861,
											"end": 877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 833,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 833,
											"end": 878,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 833,
											"end": 878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 813,
											"end": 878,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 813,
											"end": 878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 946,
											"end": 958,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 981,
											"end": 985,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 974,
											"end": 985,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 974,
											"end": 985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 974,
											"end": 985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 974,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 974,
											"end": 985,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 941,
											"end": 996,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1226,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 1215,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1248,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1248,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1248,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1253,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1211,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 1211,
											"end": 1292,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1276,
											"end": 1281,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1269,
											"end": 1281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1269,
											"end": 1281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1269,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 1269,
											"end": 1281,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1211,
											"end": 1292,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 1211,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1368,
											"end": 1390,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1450,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1501,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 1527,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 1504,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 1504,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1576,
											"end": 1591,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1558,
											"end": 1572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1558,
											"end": 1591,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1554,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1554,
											"end": 1630,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1614,
											"end": 1619,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1619,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1619,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1619,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1619,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1619,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 1607,
											"end": 1619,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1554,
											"end": 1630,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1554,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1698,
											"end": 1721,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1743,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 1732,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1698,
											"end": 1754,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1698,
											"end": 1754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1790,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1769,
											"end": 1790,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1790,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1769,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1765,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 1765,
											"end": 2095,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2079,
											"end": 2084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1765,
											"end": 2095,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 1765,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1944,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1915,
											"end": 1944,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1926,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 1915,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1944,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1915,
											"end": 1944,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1944,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1944,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 450,
											"end": 2101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 450,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25369,
											"end": 25376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25388,
											"end": 25402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25405,
											"end": 25406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25388,
											"end": 25406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25388,
											"end": 25406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25453,
											"end": 25461,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 25444,
											"end": 25449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25444,
											"end": 25461,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25490,
											"end": 25498,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 25481,
											"end": 25498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25526,
											"end": 25528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25569,
											"end": 25577,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 25560,
											"end": 25565,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25560,
											"end": 25577,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25606,
											"end": 25614,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 25597,
											"end": 25614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25642,
											"end": 25644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25685,
											"end": 25693,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25676,
											"end": 25681,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25676,
											"end": 25693,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25722,
											"end": 25730,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 25713,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25758,
											"end": 25760,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25801,
											"end": 25808,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 25792,
											"end": 25797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25792,
											"end": 25808,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25837,
											"end": 25844,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 25828,
											"end": 25844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25872,
											"end": 25873,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25914,
											"end": 25921,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 25905,
											"end": 25910,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25905,
											"end": 25921,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25950,
											"end": 25957,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 25941,
											"end": 25957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25985,
											"end": 25986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26027,
											"end": 26034,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 26018,
											"end": 26023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 26018,
											"end": 26034,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 26063,
											"end": 26070,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 26054,
											"end": 26070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26098,
											"end": 26099,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26140,
											"end": 26147,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 26131,
											"end": 26136,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 26131,
											"end": 26147,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 26177,
											"end": 26178,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26219,
											"end": 26225,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25316,
											"end": 26232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 3069,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 2555,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2634,
											"end": 2638,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2676,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2669,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 2650,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2899,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2900,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2901,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2862,
											"end": 2901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2862,
											"end": 2901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 2981,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2962,
											"end": 2976,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 2982,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2940,
											"end": 2982,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2940,
											"end": 2982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3043,
											"end": 3057,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3036,
											"end": 3062,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3036,
											"end": 3062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3036,
											"end": 3062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2555,
											"end": 3069,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2555,
											"end": 3069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2555,
											"end": 3069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2555,
											"end": 3069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2549,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 2107,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2188,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2226,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2219,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 2200,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 2200,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2424,
											"end": 2428,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2434,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2414,
											"end": 2435,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2396,
											"end": 2435,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2396,
											"end": 2435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2542,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2549,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2549,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1815,
											"end": 1932,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 1815,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1926,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 2565,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 1966,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2070,
											"end": 2078,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2133,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2111,
											"end": 2128,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2134,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2097,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 2097,
											"end": 2219,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2138,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2138,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 2138,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2138,
											"end": 2217,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2138,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2097,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 2097,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2251,
											"end": 2257,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2238,
											"end": 2258,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2228,
											"end": 2258,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2228,
											"end": 2258,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2300,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2267,
											"end": 2384,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2267,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2267,
											"end": 2384,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2303,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2267,
											"end": 2384,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2267,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2417,
											"end": 2421,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2409,
											"end": 2415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2405,
											"end": 2422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2474,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2451,
											"end": 2468,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2559,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 2431,
											"end": 2559,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2559,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 2431,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 2565,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 2565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 2565,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 2565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 2565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 3156,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 2588,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2661,
											"end": 2669,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2724,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2714,
											"end": 2718,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2702,
											"end": 2719,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2725,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2688,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 2688,
											"end": 2810,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 2729,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 2729,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2808,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 2729,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2688,
											"end": 2810,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 2688,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2829,
											"end": 2849,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2861,
											"end": 2891,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2975,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2858,
											"end": 2975,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2894,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 2894,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2894,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2894,
											"end": 2973,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 2894,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2975,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2858,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3013,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3062,
											"end": 3065,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3058,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3042,
											"end": 3059,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3032,
											"end": 3040,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3028,
											"end": 3060,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3025,
											"end": 3066,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3150,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 3022,
											"end": 3150,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3069,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 3069,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 3069,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3069,
											"end": 3148,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 3069,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3150,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 3022,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 3156,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 3156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 3156,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 3156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 3156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 3156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3345,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 3386,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3359,
											"end": 3391,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3356,
											"end": 3475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3356,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 3356,
											"end": 3475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3394,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 3394,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 3394,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3394,
											"end": 3473,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 3394,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3356,
											"end": 3475,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 3356,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3514,
											"end": 3545,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3561,
											"end": 3591,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3558,
											"end": 3675,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3558,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 3558,
											"end": 3675,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 3594,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3558,
											"end": 3675,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 3558,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3801,
											"end": 3807,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3790,
											"end": 3799,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3786,
											"end": 3808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 3707,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3818,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 3707,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3689,
											"end": 3818,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3689,
											"end": 3818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3689,
											"end": 3818,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3689,
											"end": 3818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3867,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 4029,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 3912,
											"end": 4029,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 4029,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 3912,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4061,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4124,
											"end": 4130,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4122,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4109,
											"end": 4131,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4061,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 4061,
											"end": 4141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4061,
											"end": 4141,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 4061,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4043,
											"end": 4141,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4043,
											"end": 4141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4043,
											"end": 4141,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4043,
											"end": 4141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3838,
											"end": 4151,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 4158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4254,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 4164,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4198,
											"end": 4205,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4246,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4248,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4248,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4248,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4254,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4254,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4260,
											"end": 4369,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 4260,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 4356,
											"end": 4361,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 4341,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4336,
											"end": 4339,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4329,
											"end": 4363,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4260,
											"end": 4369,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4260,
											"end": 4369,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4260,
											"end": 4369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4585,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4375,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4462,
											"end": 4466,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4477,
											"end": 4503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4477,
											"end": 4503,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4560,
											"end": 4577,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 4513,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4578,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 4513,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4585,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4585,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4585,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4585,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4591,
											"end": 4708,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4591,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4740,
											"end": 4976,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 4740,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4861,
											"name": "PUSH",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 4849,
											"end": 4855,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4844,
											"end": 4847,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4840,
											"end": 4856,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4836,
											"end": 4862,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4833,
											"end": 4946,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4833,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 4833,
											"end": 4946,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4865,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 4865,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4865,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4865,
											"end": 4944,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 4865,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4833,
											"end": 4946,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 4833,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4955,
											"end": 4970,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4955,
											"end": 4970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4740,
											"end": 4976,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4740,
											"end": 4976,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4740,
											"end": 4976,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4740,
											"end": 4976,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4740,
											"end": 4976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4982,
											"end": 5533,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 4982,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5072,
											"end": 5078,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5123,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5100,
											"end": 5107,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5208,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 5089,
											"end": 5208,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5127,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 5127,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 5127,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5127,
											"end": 5206,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 5127,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5208,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 5089,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5273,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5260,
											"end": 5277,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5247,
											"end": 5278,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5324,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5291,
											"end": 5408,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5291,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 5291,
											"end": 5408,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 5327,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5291,
											"end": 5408,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 5291,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5432,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 5508,
											"end": 5515,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5484,
											"end": 5506,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5432,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 5432,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5432,
											"end": 5516,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 5432,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5422,
											"end": 5516,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5422,
											"end": 5516,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5218,
											"end": 5526,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4982,
											"end": 5533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4982,
											"end": 5533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4982,
											"end": 5533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4982,
											"end": 5533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4982,
											"end": 5533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5687,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 5539,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5641,
											"end": 5652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5681,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5687,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5687,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5687,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5687,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5693,
											"end": 6083,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 5693,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 5860,
											"end": 5865,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5827,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 5827,
											"end": 5866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5827,
											"end": 5866,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 5827,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5882,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 5964,
											"end": 5970,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5959,
											"end": 5962,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5882,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 5882,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5882,
											"end": 5971,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 5882,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5875,
											"end": 5971,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5875,
											"end": 5971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 6038,
											"end": 6044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6033,
											"end": 6036,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6026,
											"end": 6030,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6024,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6015,
											"end": 6031,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 5980,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6070,
											"end": 6076,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6061,
											"end": 6077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6054,
											"end": 6077,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6054,
											"end": 6077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5803,
											"end": 6083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5693,
											"end": 6083,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5693,
											"end": 6083,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5693,
											"end": 6083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5693,
											"end": 6083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5693,
											"end": 6083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6089,
											"end": 6240,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 6089,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6229,
											"end": 6232,
											"name": "PUSH",
											"source": 15,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6213,
											"end": 6227,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6089,
											"end": 6240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6089,
											"end": 6240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6646,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 6246,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 6509,
											"end": 6510,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6504,
											"end": 6507,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6427,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 6427,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6427,
											"end": 6511,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 6427,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6420,
											"end": 6511,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6420,
											"end": 6511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6520,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 6609,
											"end": 6612,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6520,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 6520,
											"end": 6613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6520,
											"end": 6613,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 6520,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6633,
											"end": 6636,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6629,
											"end": 6640,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6646,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6646,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6646,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 7195,
											"end": 7198,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7104,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 7104,
											"end": 7199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7104,
											"end": 7199,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 7104,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7097,
											"end": 7199,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7097,
											"end": 7199,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7216,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 7360,
											"end": 7363,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7216,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 7216,
											"end": 7364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7216,
											"end": 7364,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 7216,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7209,
											"end": 7364,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7209,
											"end": 7364,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7381,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 7472,
											"end": 7475,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7381,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 7381,
											"end": 7476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7381,
											"end": 7476,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 7381,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7374,
											"end": 7476,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7374,
											"end": 7476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7493,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 7637,
											"end": 7640,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7493,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 7493,
											"end": 7641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7493,
											"end": 7641,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 7493,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7641,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7641,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 7749,
											"end": 7752,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 7658,
											"end": 7753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7753,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 7658,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7651,
											"end": 7753,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7651,
											"end": 7753,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7770,
											"end": 7773,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7763,
											"end": 7773,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7763,
											"end": 7773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 7779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7785,
											"end": 7965,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 7785,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7911,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7930,
											"end": 7934,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7920,
											"end": 7935,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7954,
											"end": 7958,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7951,
											"end": 7952,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7959,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7971,
											"end": 8088,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 7971,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8080,
											"end": 8081,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8082,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8094,
											"end": 8211,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 8094,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8203,
											"end": 8204,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8201,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8205,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8217,
											"end": 8334,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 8217,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8326,
											"end": 8327,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8324,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8739,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 8340,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8437,
											"end": 8441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8491,
											"end": 8502,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8478,
											"end": 8503,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8594,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8585,
											"end": 8591,
											"name": "PUSH",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 8581,
											"end": 8595,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8570,
											"end": 8578,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8554,
											"end": 8568,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 8550,
											"end": 8579,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8596,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8522,
											"end": 8597,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8512,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 8512,
											"end": 8682,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 8601,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 8601,
											"end": 8680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8680,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 8601,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8512,
											"end": 8682,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 8512,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8713,
											"end": 8731,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8703,
											"end": 8711,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8691,
											"end": 8732,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8691,
											"end": 8732,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8442,
											"end": 8739,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8739,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8739,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8739,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8739,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8745,
											"end": 8925,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 8745,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8870,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8790,
											"end": 8791,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8783,
											"end": 8871,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8890,
											"end": 8894,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 8887,
											"end": 8888,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8880,
											"end": 8895,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8911,
											"end": 8912,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8904,
											"end": 8919,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8931,
											"end": 9111,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 8931,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8976,
											"end": 8977,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 9057,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9076,
											"end": 9080,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 9073,
											"end": 9074,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9066,
											"end": 9081,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9100,
											"end": 9104,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9097,
											"end": 9098,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9117,
											"end": 9243,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 9117,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9154,
											"end": 9161,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9236,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9187,
											"end": 9192,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9183,
											"end": 9237,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9172,
											"end": 9237,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9172,
											"end": 9237,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9117,
											"end": 9243,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9117,
											"end": 9243,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9117,
											"end": 9243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9117,
											"end": 9243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9345,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 9249,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9286,
											"end": 9293,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 9333,
											"end": 9338,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 9315,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9304,
											"end": 9339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9304,
											"end": 9339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9345,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9351,
											"end": 9473,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 9351,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 9442,
											"end": 9447,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 9424,
											"end": 9448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9448,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 9424,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9417,
											"end": 9422,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9414,
											"end": 9449,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9404,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 9404,
											"end": 9467,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9463,
											"end": 9464,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9460,
											"end": 9461,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9465,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9404,
											"end": 9467,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 9404,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9351,
											"end": 9473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9351,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9618,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 9479,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9525,
											"end": 9530,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9569,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9550,
											"end": 9570,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9541,
											"end": 9570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9541,
											"end": 9570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9579,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 9606,
											"end": 9611,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9579,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 9579,
											"end": 9612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9579,
											"end": 9612,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 9579,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9618,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9618,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9624,
											"end": 9953,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 9624,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9683,
											"end": 9689,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9732,
											"end": 9734,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9711,
											"end": 9718,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9707,
											"end": 9730,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9700,
											"end": 9819,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9700,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 9700,
											"end": 9819,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9738,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 9738,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 9738,
											"end": 9817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9738,
											"end": 9817,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 9738,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9700,
											"end": 9819,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 9700,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9858,
											"end": 9859,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 9928,
											"end": 9935,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9919,
											"end": 9925,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9904,
											"end": 9926,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9883,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 9883,
											"end": 9936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9883,
											"end": 9936,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 9883,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9873,
											"end": 9936,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9873,
											"end": 9936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9829,
											"end": 9946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9624,
											"end": 9953,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9624,
											"end": 9953,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9624,
											"end": 9953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9624,
											"end": 9953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9624,
											"end": 9953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9959,
											"end": 10683,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 9959,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10036,
											"end": 10040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10048,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10085,
											"end": 10110,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10198,
											"end": 10199,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10192,
											"end": 10196,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10188,
											"end": 10200,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10177,
											"end": 10185,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10161,
											"end": 10175,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 10157,
											"end": 10186,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10153,
											"end": 10201,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10129,
											"end": 10202,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10119,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 10119,
											"end": 10287,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10206,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 10206,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 10206,
											"end": 10285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10206,
											"end": 10285,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 10206,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10119,
											"end": 10287,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 10119,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10318,
											"end": 10336,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10308,
											"end": 10316,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10304,
											"end": 10337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10296,
											"end": 10337,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10296,
											"end": 10337,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10370,
											"end": 10374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10357,
											"end": 10375,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10347,
											"end": 10375,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10347,
											"end": 10375,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10396,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10387,
											"end": 10417,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10384,
											"end": 10501,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10384,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 10384,
											"end": 10501,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10420,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 10420,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 10420,
											"end": 10499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10420,
											"end": 10499,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 10420,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10384,
											"end": 10501,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 10384,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10528,
											"end": 10530,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10522,
											"end": 10526,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10518,
											"end": 10531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10510,
											"end": 10531,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10510,
											"end": 10531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10585,
											"end": 10589,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10577,
											"end": 10583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10573,
											"end": 10590,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 10557,
											"end": 10571,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 10553,
											"end": 10591,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10547,
											"end": 10551,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10543,
											"end": 10592,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 10540,
											"end": 10676,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10540,
											"end": 10676,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 10540,
											"end": 10676,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10595,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 10595,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 10595,
											"end": 10674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10595,
											"end": 10674,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 10595,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10540,
											"end": 10676,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 10540,
											"end": 10676,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10049,
											"end": 10683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9959,
											"end": 10683,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9959,
											"end": 10683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9959,
											"end": 10683,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9959,
											"end": 10683,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9959,
											"end": 10683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9959,
											"end": 10683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10832,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 10689,
											"end": 10832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10746,
											"end": 10751,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10777,
											"end": 10783,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10771,
											"end": 10784,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10762,
											"end": 10784,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10762,
											"end": 10784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10793,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 10820,
											"end": 10825,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10793,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 10793,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10793,
											"end": 10826,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 10793,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10832,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10832,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10832,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10832,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 11189,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 10838,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10908,
											"end": 10914,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10959,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10945,
											"end": 10954,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 10943,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10932,
											"end": 10955,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10928,
											"end": 10960,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10925,
											"end": 11044,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10925,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 10925,
											"end": 11044,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10963,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 10963,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 10963,
											"end": 11042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10963,
											"end": 11042,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 10963,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10925,
											"end": 11044,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 10925,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11108,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 11164,
											"end": 11171,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11155,
											"end": 11161,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11144,
											"end": 11153,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11140,
											"end": 11162,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11108,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 11108,
											"end": 11172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11108,
											"end": 11172,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 11108,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11098,
											"end": 11172,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11098,
											"end": 11172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11054,
											"end": 11182,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 11189,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 11189,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 11189,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 11189,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 11189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11195,
											"end": 11359,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 11195,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11335,
											"end": 11351,
											"name": "PUSH",
											"source": 15,
											"value": "4461746120746F6F2073686F7274000000000000000000000000000000000000"
										},
										{
											"begin": 11331,
											"end": 11332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11319,
											"end": 11333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11312,
											"end": 11352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11195,
											"end": 11359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11195,
											"end": 11359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11365,
											"end": 11731,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 11365,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11528,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 11592,
											"end": 11594,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 11587,
											"end": 11590,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11528,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 11528,
											"end": 11595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11528,
											"end": 11595,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 11528,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11521,
											"end": 11595,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11521,
											"end": 11595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11604,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 11693,
											"end": 11696,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11604,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 11604,
											"end": 11697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11604,
											"end": 11697,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 11604,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11724,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11717,
											"end": 11720,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11706,
											"end": 11725,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11706,
											"end": 11725,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11365,
											"end": 11731,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11365,
											"end": 11731,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11365,
											"end": 11731,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11365,
											"end": 11731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 12156,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 11737,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11903,
											"end": 11907,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11941,
											"end": 11943,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11926,
											"end": 11944,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11918,
											"end": 11944,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11918,
											"end": 11944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11990,
											"end": 11999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11984,
											"end": 11988,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11980,
											"end": 12000,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11976,
											"end": 11977,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11961,
											"end": 11978,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11954,
											"end": 12001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12018,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 12144,
											"end": 12148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12018,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 12018,
											"end": 12149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12018,
											"end": 12149,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 12018,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12010,
											"end": 12149,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12010,
											"end": 12149,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 12156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 12156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 12156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 12156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"EAS/Common.sol",
								"EAS/IEAS.sol",
								"EAS/ISchemaRegistry.sol",
								"EAS/ISchemaResolver.sol",
								"EAS/ISemver.sol",
								"EAS/SchemaResolver.sol",
								"EAS/Semver.sol",
								"resolver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
							"isPayable()": "ce46e046",
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"eas\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"A schema resolver that checks whether the sender is the owner of the contract behind attestation.recipient.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"resolver.sol\":\"OwnerRecipientResolver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"EAS/Common.sol\":{\"keccak256\":\"0x9007deeeb757cfd4c504887f0c82b49f43fe92de13f4ffd9400f457d8c5276c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://949de4842085918b42d71c50f837b468e77871fc1417f480d2a6618f75eeb57d\",\"dweb:/ipfs/QmbyYxXLvryZBHdNKijCmZzwsgU4bnTXszyA38F5Xdg5h1\"]},\"EAS/IEAS.sol\":{\"keccak256\":\"0xdc4fed434a7d7907767ba1dc6a8e9ddc94ede6df08fbea5d827077ef22e8bd8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297555c22ff767608088c01ba2efe6da4dff7e95b7eb614e09d72cb36d0c989b\",\"dweb:/ipfs/QmQ7YWcBxiaf2mXZL1VLFsYSJPtVTHbWSBuimATVLMC7U4\"]},\"EAS/ISchemaRegistry.sol\":{\"keccak256\":\"0x9f23d5b875dd34e36512ff4ba75615ac5eb56ee20c6451ef2b70da99d95bf006\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad6ef991e5d45128cd5632b88088b4c2fc65153f1da313fb6b603f7db0f27749\",\"dweb:/ipfs/QmQGxZEmQ7xYiCVQFEp9N2jjBtJYKd1CYNUNGoGYmV2F47\"]},\"EAS/ISchemaResolver.sol\":{\"keccak256\":\"0x4df78a9ec7244d6f75d58b01c223e865316e16a071eb9d36d28adddcb784d787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0399b3b62b3f95f12a6f09c397249dbf7f517fc6a2a0bc1be1cd0cc962d85888\",\"dweb:/ipfs/QmYozmYWNnntXQaiVigovQRJuVoxHg78btYxZrLwMDQfx8\"]},\"EAS/ISemver.sol\":{\"keccak256\":\"0x6c6073e407395170dfc58d74be5e4cba5d2f6680d2c9aeade07e591dd7c6d5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f57462c6e329fcf5960e75e9f9a405429f416fec1debcfd4c79c2f10c04dd4\",\"dweb:/ipfs/QmehZy36QoFsBKMMbCo5Jmta5y3uU3so4e4C14MHzx2VDp\"]},\"EAS/SchemaResolver.sol\":{\"keccak256\":\"0xb6dc636c973996ca481d6522decae3ecae8c043c8d2ca5228e8f53a6c0210951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7f2f9db27662ba6aea6be58351e1cc834a1c84122a6cecfcb6d293628a1364\",\"dweb:/ipfs/QmTkQ7gDaJaY4tgneQyNxmbz9AovJQmMfuZgG8akbAqu5K\"]},\"EAS/Semver.sol\":{\"keccak256\":\"0xcb67b60a08b4acb41ccda1ee2a44bb3d4291f3da9ecd60eed49991bdbfafb972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eea3e91b983ce442be39c0a88c93627043d1c6de342be99562916a948a5933e3\",\"dweb:/ipfs/QmTFeE2vsjwn1pNeSMWAoQ4NivUTHza5DYMgJA854Ddx8F\"]},\"resolver.sol\":{\"keccak256\":\"0xea2961d2fcbb40eadd6a3ecba41c82c57a5fb7e6375ffcc1a393a0547b67d953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ede3a972441e2ffa70a0d440bf8d8570fe002649f969cbc5abcb7c05198554da\",\"dweb:/ipfs/QmPVP51wkgv8gm7fJZ3evGqCyqa3vrU7U9AA3hNmveWfYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation and verifies whether it's valid."
							},
							"isPayable()": {
								"notice": "Checks if the resolver can be sent ETH."
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes multiple attestations and verifies whether they are valid."
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes revocation of multiple attestation and verifies they can be revoked."
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation revocation and verifies if it can be revoked."
							},
							"version()": {
								"notice": "Returns the full semver contract version."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							229
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:2",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 229,
							"linearizedBaseContracts": [
								229
							],
							"name": "Panic",
							"nameLocation": "665:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:2",
										"text": "@dev generic / unspecified error"
									},
									"id": 184,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "718:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 182,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:2",
										"text": "@dev used by the assert() builtin"
									},
									"id": 188,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "806:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:2",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 192,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "897:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 191,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:2",
										"text": "@dev division or modulo by zero"
									},
									"id": 196,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "990:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:2",
										"text": "@dev enum conversion error"
									},
									"id": 200,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "1080:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 199,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:2",
										"text": "@dev invalid encoding in storage"
									},
									"id": 204,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "1181:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:2",
										"text": "@dev empty array pop"
									},
									"id": 208,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "1271:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:2",
										"text": "@dev array out of bounds access"
									},
									"id": 212,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "1365:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:2",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 216,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "1493:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 214,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 215,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:2",
										"text": "@dev calling invalid internal function"
									},
									"id": 220,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "1593:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 219,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1819:151:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:2",
													"nodeType": "YulBlock",
													"src": "1854:110:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:2",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:2",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:2"
																},
																"nativeSrc": "1868:24:2",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:2"
															},
															"nativeSrc": "1868:24:2",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:2"
																},
																"nativeSrc": "1905:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:2"
															},
															"nativeSrc": "1905:18:2",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:2",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:2"
																},
																"nativeSrc": "1936:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:2"
															},
															"nativeSrc": "1936:18:2",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 223,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:2",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 226,
												"nodeType": "InlineAssembly",
												"src": "1829:135:2"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:2",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1791:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:2"
									},
									"scope": 229,
									"src": "1776:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 230,
							"src": "657:1315:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2155
						],
						"SignedMath": [
							4064
						],
						"Strings": [
							549
						]
					},
					"id": 550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 2156,
							"src": "127:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2155,
										"src": "135:4:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 4065,
							"src": "165:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 234,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4064,
										"src": "173:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 549,
							"linearizedBaseContracts": [
								549
							],
							"name": "Strings",
							"nameLocation": "259:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 239,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "273:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 237,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 238,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 242,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "335:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 240,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:3",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 249,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "505:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "520:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:3"
									},
									"src": "470:66:3"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "708:561:3",
										"statements": [
											{
												"id": 295,
												"nodeType": "UncheckedBlock",
												"src": "718:545:3",
												"statements": [
													{
														"assignments": [
															258
														],
														"declarations": [
															{
																"constant": false,
																"id": 258,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "742:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 257,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 265,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 261,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "770:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 259,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "759:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2155_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1927,
																	"src": "759:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:3"
													},
													{
														"assignments": [
															267
														],
														"declarations": [
															{
																"constant": false,
																"id": 267,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "794:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 266,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 272,
														"initialValue": {
															"arguments": [
																{
																	"id": 270,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "828:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 268,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:3"
													},
													{
														"assignments": [
															274
														],
														"declarations": [
															{
																"constant": false,
																"id": 274,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "849:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 275,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:3"
													},
													{
														"AST": {
															"nativeSrc": "899:67:3",
															"nodeType": "YulBlock",
															"src": "899:67:3",
															"statements": [
																{
																	"nativeSrc": "917:35:3",
																	"nodeType": "YulAssignment",
																	"src": "917:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "928:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "940:2:3",
																						"nodeType": "YulLiteral",
																						"src": "940:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "944:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "936:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "936:3:3"
																				},
																				"nativeSrc": "936:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "936:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:28:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "917:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 267,
																"isOffset": false,
																"isSlot": false,
																"src": "928:6:3",
																"valueSize": 1
															},
															{
																"declaration": 258,
																"isOffset": false,
																"isSlot": false,
																"src": "944:6:3",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "917:3:3",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 276,
														"nodeType": "InlineAssembly",
														"src": "874:92:3"
													},
													{
														"body": {
															"id": 291,
															"nodeType": "Block",
															"src": "992:234:3",
															"statements": [
																{
																	"expression": {
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1010:5:3",
																		"subExpression": {
																			"id": 278,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 274,
																			"src": "1010:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 280,
																	"nodeType": "ExpressionStatement",
																	"src": "1010:5:3"
																},
																{
																	"AST": {
																		"nativeSrc": "1058:86:3",
																		"nodeType": "YulBlock",
																		"src": "1058:86:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1088:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1088:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1102:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "1102:5:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1109:2:3",
																											"nodeType": "YulLiteral",
																											"src": "1109:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1098:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "1098:3:3"
																									},
																									"nativeSrc": "1098:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "1098:14:3"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1114:10:3",
																									"nodeType": "YulIdentifier",
																									"src": "1114:10:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1093:4:3",
																								"nodeType": "YulIdentifier",
																								"src": "1093:4:3"
																							},
																							"nativeSrc": "1093:32:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1093:32:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1080:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "1080:7:3"
																					},
																					"nativeSrc": "1080:46:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1080:46:3"
																				},
																				"nativeSrc": "1080:46:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1080:46:3"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 239,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1114:10:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 274,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1088:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 252,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1102:5:3",
																			"valueSize": 1
																		}
																	],
																	"flags": [
																		"memory-safe"
																	],
																	"id": 281,
																	"nodeType": "InlineAssembly",
																	"src": "1033:111:3"
																},
																{
																	"expression": {
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 282,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 252,
																			"src": "1161:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1170:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1161:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 285,
																	"nodeType": "ExpressionStatement",
																	"src": "1161:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 286,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 252,
																			"src": "1194:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1203:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1194:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 290,
																	"nodeType": "IfStatement",
																	"src": "1190:21:3",
																	"trueBody": {
																		"id": 289,
																		"nodeType": "Break",
																		"src": "1206:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 292,
														"nodeType": "WhileStatement",
														"src": "979:247:3"
													},
													{
														"expression": {
															"id": 293,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "1246:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 256,
														"id": 294,
														"nodeType": "Return",
														"src": "1239:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:3"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:3"
									},
									"scope": 549,
									"src": "637:632:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1445:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 308,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "1476:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1484:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1476:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1494:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1476:20:3",
															"trueExpression": {
																"hexValue": "2d",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "1522:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 315,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4064,
																			"src": "1507:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$4064_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1518:3:3",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4063,
																		"src": "1507:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1507:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 314,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "1498:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1498:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 305,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1462:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1469:6:3",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1462:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 321,
												"nodeType": "Return",
												"src": "1455:75:3"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "1275:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1378:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1400:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 299,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:14:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1430:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 302,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:15:3"
									},
									"scope": 549,
									"src": "1369:168:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "1716:100:3",
										"statements": [
											{
												"id": 341,
												"nodeType": "UncheckedBlock",
												"src": "1726:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "1769:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 335,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "1788:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 333,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2155,
																				"src": "1776:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2155_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1781:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2098,
																			"src": "1776:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1776:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1797:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1776:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 331,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	343,
																	426,
																	446
																],
																"referencedDeclaration": 426,
																"src": "1757:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1757:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 330,
														"id": 340,
														"nodeType": "Return",
														"src": "1750:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1543:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1651:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "1663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:3"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "1701:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 328,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:3"
									},
									"scope": 549,
									"src": "1642:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2029:435:3",
										"statements": [
											{
												"assignments": [
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2047:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "2039:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2039:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"id": 355,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 346,
													"src": "2060:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2039:26:3"
											},
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2088:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "2075:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2075:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 362,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "2111:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2107:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2107:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2097:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 359,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2101:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:47:3"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 368,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "2132:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 370,
														"indexExpression": {
															"hexValue": "30",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2139:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2132:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2144:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2132:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "2132:15:3"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 374,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "2157:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"indexExpression": {
															"hexValue": "31",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2164:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2157:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2169:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2157:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2157:15:3"
											},
											{
												"body": {
													"id": 408,
													"nodeType": "Block",
													"src": "2227:95:3",
													"statements": [
														{
															"expression": {
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 394,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "2241:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 396,
																	"indexExpression": {
																		"id": 395,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2248:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2241:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 397,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 239,
																		"src": "2253:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 401,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 398,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "2264:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2277:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2264:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2253:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2241:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 403,
															"nodeType": "ExpressionStatement",
															"src": "2241:40:3"
														},
														{
															"expression": {
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 404,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2295:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2310:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2295:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 407,
															"nodeType": "ExpressionStatement",
															"src": "2295:16:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 388,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "2215:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2219:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2215:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 409,
												"initializationExpression": {
													"assignments": [
														381
													],
													"declarations": [
														{
															"constant": false,
															"id": 381,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2195:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 409,
															"src": "2187:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 380,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2187:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 387,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2199:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 383,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2203:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2199:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2199:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2187:26:3"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2222:3:3",
														"subExpression": {
															"id": 391,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "2224:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ExpressionStatement",
													"src": "2222:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2182:140:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 410,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2335:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2349:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2335:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "2331:96:3",
												"trueBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "2352:75:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 414,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "2402:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 415,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2409:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 413,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "2373:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2373:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 417,
															"nodeType": "RevertStatement",
															"src": "2366:50:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "2450:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2443:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 420,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2443:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 352,
												"id": 424,
												"nodeType": "Return",
												"src": "2436:21:3"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1822:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1948:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1968:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1960:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1983:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1975:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:31:3"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2014:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:15:3"
									},
									"scope": 549,
									"src": "1939:525:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2696:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 439,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "2741:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2733:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 437,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2733:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2733:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2725:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 435,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2725:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2725:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 442,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "2749:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 434,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															343,
															426,
															446
														],
														"referencedDeclaration": 426,
														"src": "2713:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 433,
												"id": 444,
												"nodeType": "Return",
												"src": "2706:58:3"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2632:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2652:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2644:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:14:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2681:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2681:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:15:3"
									},
									"scope": 549,
									"src": "2623:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "3028:642:3",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3051:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "3038:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 454,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3038:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "3078:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 458,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	343,
																	426,
																	446
																],
																"referencedDeclaration": 446,
																"src": "3066:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (address) pure returns (string memory)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3066:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3060:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 456,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3060:5:3",
															"typeDescriptions": {}
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3038:46:3"
											},
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "hashValue",
														"nameLocation": "3177:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "3169:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"nodeType": "VariableDeclarationStatement",
												"src": "3169:17:3"
											},
											{
												"AST": {
													"nativeSrc": "3221:78:3",
													"nodeType": "YulBlock",
													"src": "3221:78:3",
													"statements": [
														{
															"nativeSrc": "3235:54:3",
															"nodeType": "YulAssignment",
															"src": "3235:54:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "buffer",
																						"nativeSrc": "3270:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3270:6:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3278:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3278:4:3",
																						"type": "",
																						"value": "0x22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:3"
																				},
																				"nativeSrc": "3266:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:17:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3285:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3285:2:3",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3256:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "3256:9:3"
																		},
																		"nativeSrc": "3256:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:32:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3248:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:3"
																},
																"nativeSrc": "3248:41:3",
																"nodeType": "YulFunctionCall",
																"src": "3248:41:3"
															},
															"variableNames": [
																{
																	"name": "hashValue",
																	"nativeSrc": "3235:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "3235:9:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "3270:6:3",
														"valueSize": 1
													},
													{
														"declaration": 464,
														"isOffset": false,
														"isSlot": false,
														"src": "3235:9:3",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 466,
												"nodeType": "InlineAssembly",
												"src": "3196:103:3"
											},
											{
												"body": {
													"id": 503,
													"nodeType": "Block",
													"src": "3342:291:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 477,
																			"name": "hashValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "3448:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3460:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "3448:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3466:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "3448:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 484,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 455,
																					"src": "3477:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 486,
																				"indexExpression": {
																					"id": 485,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "3484:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3477:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3471:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 482,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3471:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3471:16:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3490:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "3471:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3448:44:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 498,
															"nodeType": "IfStatement",
															"src": "3444:150:3",
															"trueBody": {
																"id": 497,
																"nodeType": "Block",
																"src": "3494:100:3",
																"statements": [
																	{
																		"expression": {
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 491,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 455,
																					"src": "3562:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 493,
																				"indexExpression": {
																					"id": 492,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "3569:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3562:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "^=",
																			"rightHandSide": {
																				"hexValue": "30783230",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3575:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "0x20"
																			},
																			"src": "3562:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 496,
																		"nodeType": "ExpressionStatement",
																		"src": "3562:17:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 499,
																	"name": "hashValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "3607:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3607:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "3607:15:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "3330:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3334:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"initializationExpression": {
													"assignments": [
														468
													],
													"declarations": [
														{
															"constant": false,
															"id": 468,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3322:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 504,
															"src": "3314:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 467,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3314:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 470,
													"initialValue": {
														"hexValue": "3431",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3326:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_41_by_1",
															"typeString": "int_const 41"
														},
														"value": "41"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3314:14:3"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "3337:3:3",
														"subExpression": {
															"id": 474,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "3339:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 476,
													"nodeType": "ExpressionStatement",
													"src": "3337:3:3"
												},
												"nodeType": "ForStatement",
												"src": "3309:324:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3656:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3649:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 505,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3649:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 453,
												"id": 509,
												"nodeType": "Return",
												"src": "3642:21:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2777:165:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toChecksumHexString",
									"nameLocation": "2956:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2984:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "2976:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:14:3"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3013:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3013:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:15:3"
									},
									"scope": 549,
									"src": "2947:723:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3825:104:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 523,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "3848:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3842:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 521,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3842:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3842:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3842:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 528,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "3867:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3861:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3861:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3861:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3870:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3861:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3842:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 535,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "3896:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3890:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 533,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3890:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3890:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 532,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3880:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3880:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 541,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 516,
																			"src": "3919:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3913:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3913:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3913:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 538,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3903:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3880:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3842:80:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 520,
												"id": 546,
												"nodeType": "Return",
												"src": "3835:87:3"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3676:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3756:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3762:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3762:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3793:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3779:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3779:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:34:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3819:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:3"
									},
									"scope": 549,
									"src": "3747:182:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 550,
							"src": "251:3680:3",
							"usedErrors": [
								249
							],
							"usedEvents": []
						}
					],
					"src": "101:3831:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2155
						],
						"Panic": [
							229
						],
						"SafeCast": [
							3920
						]
					},
					"id": 2156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 551,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2156,
							"sourceUnit": 230,
							"src": "129:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 552,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "137:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2156,
							"sourceUnit": 3921,
							"src": "165:40:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 554,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3920,
										"src": "173:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 556,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2155,
							"linearizedBaseContracts": [
								2155
							],
							"name": "Math",
							"nameLocation": "289:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 561,
									"members": [
										{
											"id": 557,
											"name": "Floor",
											"nameLocation": "324:5:4",
											"nodeType": "EnumValue",
											"src": "324:5:4"
										},
										{
											"id": 558,
											"name": "Ceil",
											"nameLocation": "367:4:4",
											"nodeType": "EnumValue",
											"src": "367:4:4"
										},
										{
											"id": 559,
											"name": "Trunc",
											"nameLocation": "409:5:4",
											"nodeType": "EnumValue",
											"src": "409:5:4"
										},
										{
											"id": 560,
											"name": "Expand",
											"nameLocation": "439:6:4",
											"nodeType": "EnumValue",
											"src": "439:6:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:4",
									"nodeType": "EnumDefinition",
									"src": "300:169:4"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "677:140:4",
										"statements": [
											{
												"id": 591,
												"nodeType": "UncheckedBlock",
												"src": "687:124:4",
												"statements": [
													{
														"assignments": [
															574
														],
														"declarations": [
															{
																"constant": false,
																"id": 574,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 591,
																"src": "711:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 573,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 578,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "727:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 579,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "746:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 580,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "750:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 586,
														"nodeType": "IfStatement",
														"src": "742:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 584,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 572,
															"id": 585,
															"nodeType": "Return",
															"src": "753:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "798:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 589,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 572,
														"id": 590,
														"nodeType": "Return",
														"src": "784:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:4",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "602:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "613:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "647:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "661:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:4"
									},
									"scope": 2155,
									"src": "586:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "1028:113:4",
										"statements": [
											{
												"id": 619,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 605,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1066:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 606,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "1070:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 612,
														"nodeType": "IfStatement",
														"src": "1062:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 604,
															"id": 611,
															"nodeType": "Return",
															"src": "1073:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 614,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "1118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 615,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "1122:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 617,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 604,
														"id": 618,
														"nodeType": "Return",
														"src": "1104:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "953:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "964:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:4"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "998:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1012:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:4"
									},
									"scope": 2155,
									"src": "937:204:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "1355:417:4",
										"statements": [
											{
												"id": 661,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 633,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "1623:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 640,
														"nodeType": "IfStatement",
														"src": "1619:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 632,
															"id": 639,
															"nodeType": "Return",
															"src": "1631:16:4"
														}
													},
													{
														"assignments": [
															642
														],
														"declarations": [
															{
																"constant": false,
																"id": 642,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 661,
																"src": "1661:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 641,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 646,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "1673:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "1677:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 647,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "1696:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 648,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "1700:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "1705:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 656,
														"nodeType": "IfStatement",
														"src": "1692:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 654,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 632,
															"id": 655,
															"nodeType": "Return",
															"src": "1708:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 658,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "1753:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 659,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 632,
														"id": 660,
														"nodeType": "Return",
														"src": "1739:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "1280:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "1291:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "1339:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:4"
									},
									"scope": 2155,
									"src": "1264:508:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "1987:114:4",
										"statements": [
											{
												"id": 689,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "2025:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 682,
														"nodeType": "IfStatement",
														"src": "2021:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 680,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 674,
															"id": 681,
															"nodeType": "Return",
															"src": "2033:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 684,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "2078:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 685,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "2082:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 687,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 674,
														"id": 688,
														"nodeType": "Return",
														"src": "2064:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:4",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1912:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1923:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:4"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1957:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1971:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:4"
									},
									"scope": 2155,
									"src": "1896:205:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "2326:114:4",
										"statements": [
											{
												"id": 717,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 703,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2364:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 710,
														"nodeType": "IfStatement",
														"src": "2360:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 702,
															"id": 709,
															"nodeType": "Return",
															"src": "2372:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 712,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 694,
																		"src": "2417:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 713,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "2421:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 715,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 702,
														"id": 716,
														"nodeType": "Return",
														"src": "2403:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2251:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2262:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:4"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2296:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2310:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:4"
									},
									"scope": 2155,
									"src": "2235:205:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "2912:207:4",
										"statements": [
											{
												"id": 744,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:4",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3060:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 732,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 724,
																						"src": "3066:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 733,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 726,
																						"src": "3070:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 735,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 738,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "3091:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 736,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3920,
																					"src": "3075:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:4",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3919,
																				"src": "3075:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 741,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 730,
														"id": 743,
														"nodeType": "Return",
														"src": "3053:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:4",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2842:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2858:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2869:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2903:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:4"
									},
									"scope": 2155,
									"src": "2825:294:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "3256:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 757,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "3281:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 758,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "3285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 760,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "3288:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 761,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "3291:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 756,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "3273:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 755,
												"id": 763,
												"nodeType": "Return",
												"src": "3266:27:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3202:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3213:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:4"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3247:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:4"
									},
									"scope": 2155,
									"src": "3189:111:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "3438:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 776,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "3463:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 777,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "3467:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 779,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "3470:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 780,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3473:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "3455:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 774,
												"id": 782,
												"nodeType": "Return",
												"src": "3448:27:4"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3384:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:4"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3429:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:4"
									},
									"scope": 2155,
									"src": "3371:111:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "3666:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 794,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "3721:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 795,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "3725:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "3731:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 799,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "3735:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 801,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 805,
												"nodeType": "Return",
												"src": "3713:28:4"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3623:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:4"
									},
									"scope": 2155,
									"src": "3595:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "4040:633:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 817,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4054:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "4050:150:4",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "4062:138:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 823,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "4166:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:4",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "4166:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 820,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "4154:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:4",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 228,
																	"src": "4154:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:4"
														}
													]
												}
											},
											{
												"id": 846,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:4",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 831,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 810,
																			"src": "4630:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 829,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "4614:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "4614:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 837,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 835,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 810,
																							"src": "4641:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 836,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 838,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 839,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "4650:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 816,
														"id": 845,
														"nodeType": "Return",
														"src": "4607:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "3986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "3997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:4"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4031:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:4"
									},
									"scope": 2155,
									"src": "3969:704:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "5094:4128:4",
										"statements": [
											{
												"id": 983,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:4",
												"statements": [
													{
														"assignments": [
															861
														],
														"declarations": [
															{
																"constant": false,
																"id": 861,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 983,
																"src": "5433:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 860,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 865,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "5449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 863,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "5453:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:4"
													},
													{
														"assignments": [
															867
														],
														"declarations": [
															{
																"constant": false,
																"id": 867,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 983,
																"src": "5513:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 866,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 868,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:4"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:4",
															"nodeType": "YulBlock",
															"src": "5593:122:4",
															"statements": [
																{
																	"nativeSrc": "5611:30:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:4",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:4"
																				},
																				"nativeSrc": "5634:6:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:4"
																		},
																		"nativeSrc": "5621:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:4",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:4",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:4"
																				},
																				"nativeSrc": "5671:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:4"
																				},
																				"nativeSrc": "5687:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:4"
																		},
																		"nativeSrc": "5667:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:4",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:4",
																"valueSize": 1
															},
															{
																"declaration": 867,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:4",
																"valueSize": 1
															},
															{
																"declaration": 851,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:4",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:4",
																"valueSize": 1
															}
														],
														"id": 869,
														"nodeType": "InlineAssembly",
														"src": "5584:131:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 870,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "5796:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 878,
														"nodeType": "IfStatement",
														"src": "5792:368:4",
														"trueBody": {
															"id": 877,
															"nodeType": "Block",
															"src": "5808:352:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 873,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "6126:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 874,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 855,
																			"src": "6134:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 859,
																	"id": 876,
																	"nodeType": "Return",
																	"src": "6119:26:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 879,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "6270:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 880,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "6285:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 897,
														"nodeType": "IfStatement",
														"src": "6266:143:4",
														"trueBody": {
															"id": 896,
															"nodeType": "Block",
															"src": "6292:117:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 888,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 886,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 855,
																							"src": "6330:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 887,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 889,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 229,
																							"src": "6348:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 890,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:4",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 196,
																						"src": "6348:22:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 891,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 229,
																							"src": "6372:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 892,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:4",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 192,
																						"src": "6372:20:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 885,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "6322:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 882,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "6310:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:4",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 228,
																			"src": "6310:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 895,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:4"
																}
															]
														}
													},
													{
														"assignments": [
															899
														],
														"declarations": [
															{
																"constant": false,
																"id": 899,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 983,
																"src": "6664:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 900,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:4"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:4",
															"nodeType": "YulBlock",
															"src": "6704:291:4",
															"statements": [
																{
																	"nativeSrc": "6773:38:4",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:4"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:4"
																		},
																		"nativeSrc": "6786:25:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:4",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:4",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:4"
																				},
																				"nativeSrc": "6913:20:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:4"
																		},
																		"nativeSrc": "6902:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:4",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:4"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:4"
																		},
																		"nativeSrc": "6960:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 855,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:4",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:4",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:4",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:4",
																"valueSize": 1
															},
															{
																"declaration": 867,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:4",
																"valueSize": 1
															},
															{
																"declaration": 867,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:4",
																"valueSize": 1
															},
															{
																"declaration": 899,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:4",
																"valueSize": 1
															},
															{
																"declaration": 899,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:4",
																"valueSize": 1
															},
															{
																"declaration": 899,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:4",
																"valueSize": 1
															},
															{
																"declaration": 851,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:4",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:4",
																"valueSize": 1
															}
														],
														"id": 901,
														"nodeType": "InlineAssembly",
														"src": "6695:300:4"
													},
													{
														"assignments": [
															903
														],
														"declarations": [
															{
																"constant": false,
																"id": 903,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 983,
																"src": "7199:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 902,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 910,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 904,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "7214:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 906,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 855,
																			"src": "7233:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 908,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:4"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:4",
															"nodeType": "YulBlock",
															"src": "7268:366:4",
															"statements": [
																{
																	"nativeSrc": "7333:37:4",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:4"
																		},
																		"nativeSrc": "7348:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:4",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:4"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:4",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:4"
																		},
																		"nativeSrc": "7446:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:4",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:4",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:4"
																						},
																						"nativeSrc": "7597:12:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:4"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:4"
																				},
																				"nativeSrc": "7593:23:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:4"
																		},
																		"nativeSrc": "7589:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:4",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 855,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:4",
																"valueSize": 1
															},
															{
																"declaration": 855,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:4",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:4",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:4",
																"valueSize": 1
															},
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:4",
																"valueSize": 1
															},
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:4",
																"valueSize": 1
															},
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:4",
																"valueSize": 1
															},
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:4",
																"valueSize": 1
															},
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:4",
																"valueSize": 1
															}
														],
														"id": 911,
														"nodeType": "InlineAssembly",
														"src": "7259:375:4"
													},
													{
														"expression": {
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 912,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "7700:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 913,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "7709:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 914,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "7717:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 917,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:4"
													},
													{
														"assignments": [
															919
														],
														"declarations": [
															{
																"constant": false,
																"id": 919,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 983,
																"src": "8056:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 918,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 926,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 921,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 855,
																			"src": "8079:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 923,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:4"
													},
													{
														"expression": {
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 927,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "8312:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 929,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "8327:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 930,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8341:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 934,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:4"
													},
													{
														"expression": {
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 935,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "8382:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 937,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "8397:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 938,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8411:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 942,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:4"
													},
													{
														"expression": {
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 943,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "8454:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 945,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "8469:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 946,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8483:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 950,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:4"
													},
													{
														"expression": {
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 951,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "8525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 953,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "8540:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 954,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8554:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 958,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:4"
													},
													{
														"expression": {
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 959,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "8598:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 961,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "8613:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 962,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8627:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 966,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:4"
													},
													{
														"expression": {
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 967,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "8672:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 969,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "8687:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 970,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8701:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:4"
													},
													{
														"expression": {
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "9154:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 976,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "9163:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 977,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "9171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 980,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:4"
													},
													{
														"expression": {
															"id": 981,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "9199:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 859,
														"id": 982,
														"nodeType": "Return",
														"src": "9192:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:4",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5012:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5023:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5034:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5078:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:4"
									},
									"scope": 2155,
									"src": "4996:4226:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "9461:128:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1001,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "9485:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1002,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "9488:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1003,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "9491:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1000,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																985,
																1022
															],
															"referencedDeclaration": 985,
															"src": "9478:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1008,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "9539:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$561",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$561",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1007,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "9522:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$561_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1011,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 988,
																				"src": "9559:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1012,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "9562:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1013,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "9565:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1010,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1005,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3920,
																"src": "9506:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:4",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3919,
															"src": "9506:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 999,
												"id": 1020,
												"nodeType": "Return",
												"src": "9471:111:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:4",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "9367:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "9378:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "9389:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "9410:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$561",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 993,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "9410:8:4"
													},
													"referencedDeclaration": 561,
													"src": "9410:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$561",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:4"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "9452:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:4"
									},
									"scope": 2155,
									"src": "9351:238:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "10223:1849:4",
										"statements": [
											{
												"id": 1117,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "10261:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1037,
														"nodeType": "IfStatement",
														"src": "10257:20:4",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1031,
															"id": 1036,
															"nodeType": "Return",
															"src": "10269:8:4"
														}
													},
													{
														"assignments": [
															1039
														],
														"declarations": [
															{
																"constant": false,
																"id": 1039,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 1117,
																"src": "10748:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1038,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1043,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1040,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "10768:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1041,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "10772:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:4"
													},
													{
														"assignments": [
															1045
														],
														"declarations": [
															{
																"constant": false,
																"id": 1045,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 1117,
																"src": "10787:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1044,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1047,
														"initialValue": {
															"id": 1046,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "10801:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:4"
													},
													{
														"assignments": [
															1049
														],
														"declarations": [
															{
																"constant": false,
																"id": 1049,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1117,
																"src": "10938:8:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1048,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1051,
														"initialValue": {
															"hexValue": "30",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:4"
													},
													{
														"assignments": [
															1053
														],
														"declarations": [
															{
																"constant": false,
																"id": 1053,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1117,
																"src": "10964:8:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1052,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1055,
														"initialValue": {
															"hexValue": "31",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:4"
													},
													{
														"body": {
															"id": 1092,
															"nodeType": "Block",
															"src": "11014:882:4",
															"statements": [
																{
																	"assignments": [
																		1060
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1060,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:4",
																			"nodeType": "VariableDeclaration",
																			"scope": 1092,
																			"src": "11032:16:4",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1059,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1064,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1061,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "11051:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1062,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1039,
																			"src": "11057:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:4"
																},
																{
																	"expression": {
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1065,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1045,
																					"src": "11086:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1066,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1039,
																					"src": "11091:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1067,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1068,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1039,
																					"src": "11191:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1069,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1045,
																						"src": "11436:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1072,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1070,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1039,
																							"src": "11442:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1071,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1060,
																							"src": "11454:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1074,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1076,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:4"
																},
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1077,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "11500:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1078,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "11503:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1079,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1080,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "11585:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1081,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1049,
																						"src": "11839:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1087,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1082,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1053,
																							"src": "11843:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1085,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1060,
																									"src": "11854:8:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1084,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1083,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1086,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1089,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:4"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1056,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "10998:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1093,
														"nodeType": "WhileStatement",
														"src": "10991:905:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1094,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "11914:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1099,
														"nodeType": "IfStatement",
														"src": "11910:22:4",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1031,
															"id": 1098,
															"nodeType": "Return",
															"src": "11924:8:4"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1101,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "11983:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1104,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "11990:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:4",
																				"subExpression": {
																					"id": 1107,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "12003:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1105,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1113,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1049,
																			"src": "12015:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1111,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1100,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "11975:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1031,
														"id": 1116,
														"nodeType": "Return",
														"src": "11968:50:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:4",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10169:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10180:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:4"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10214:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:4"
									},
									"scope": 2155,
									"src": "10153:1919:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12672:82:4",
										"statements": [
											{
												"id": 1138,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1131,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "12725:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1132,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "12728:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1135,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "12735:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1129,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2155,
																	"src": "12713:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2155_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:4",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1176,
																"src": "12713:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1128,
														"id": 1137,
														"nodeType": "Return",
														"src": "12706:31:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:4",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12618:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12629:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:4"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12663:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:4"
									},
									"scope": 2155,
									"src": "12597:157:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "13524:174:4",
										"statements": [
											{
												"assignments": [
													1153,
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "13535:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1152,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "13549:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"arguments": [
														{
															"id": 1157,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13577:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1158,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13580:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1159,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13583:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1200,
															1282
														],
														"referencedDeclaration": 1200,
														"src": "13567:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:4"
											},
											{
												"condition": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:4",
													"subExpression": {
														"id": 1162,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "13600:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "13595:74:4",
												"trueBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "13609:60:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1167,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "13635:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:4",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "13635:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1164,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "13623:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:4",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 228,
																	"src": "13623:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1170,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1173,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1155,
													"src": "13685:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1174,
												"nodeType": "Return",
												"src": "13678:13:4"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:4",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13459:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13470:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13481:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:4"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13515:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:4"
									},
									"scope": 2155,
									"src": "13443:255:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "14552:1493:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1190,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "14566:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"nodeType": "IfStatement",
												"src": "14562:29:4",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1189,
													"id": 1196,
													"nodeType": "Return",
													"src": "14574:17:4"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:4",
													"nodeType": "YulBlock",
													"src": "14626:1413:4",
													"statements": [
														{
															"nativeSrc": "14640:22:4",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:4",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:4"
																},
																"nativeSrc": "14651:11:4",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:4"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:4",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:4",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:4"
																},
																"nativeSrc": "15563:17:4",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:4"
															},
															"nativeSrc": "15563:17:4",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:4",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:4"
																		},
																		"nativeSrc": "15600:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:4"
																},
																"nativeSrc": "15593:28:4",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:4"
															},
															"nativeSrc": "15593:28:4",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:4",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:4",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:4"
																		},
																		"nativeSrc": "15641:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:4",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:4"
																},
																"nativeSrc": "15634:28:4",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:4"
															},
															"nativeSrc": "15634:28:4",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:4",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:4",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:4"
																		},
																		"nativeSrc": "15682:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:4"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:4"
																},
																"nativeSrc": "15675:25:4",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:4"
															},
															"nativeSrc": "15675:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:4",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:4",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:4"
																		},
																		"nativeSrc": "15720:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:4"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:4"
																},
																"nativeSrc": "15713:25:4",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:4"
															},
															"nativeSrc": "15713:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:4",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:4",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:4"
																		},
																		"nativeSrc": "15758:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:4"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:4"
																},
																"nativeSrc": "15751:25:4",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:4"
															},
															"nativeSrc": "15751:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:4"
														},
														{
															"nativeSrc": "15938:57:4",
															"nodeType": "YulAssignment",
															"src": "15938:57:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:4"
																		},
																		"nativeSrc": "15960:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:4",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:4",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:4",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:4",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:4",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:4",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:4"
																},
																"nativeSrc": "15949:46:4",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:4"
																}
															]
														},
														{
															"nativeSrc": "16008:21:4",
															"nodeType": "YulAssignment",
															"src": "16008:21:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:4",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:4"
																},
																"nativeSrc": "16018:11:4",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:4",
														"valueSize": 1
													},
													{
														"declaration": 1181,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:4",
														"valueSize": 1
													},
													{
														"declaration": 1183,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:4",
														"valueSize": 1
													},
													{
														"declaration": 1188,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1186,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1198,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:4"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:4",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14466:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14477:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14488:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:4"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14522:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14536:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:4"
									},
									"scope": 2155,
									"src": "14447:1598:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "16242:179:4",
										"statements": [
											{
												"assignments": [
													1213,
													1215
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "16253:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1212,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1215,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "16267:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"arguments": [
														{
															"id": 1217,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "16300:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1218,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "16303:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1219,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "16306:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1216,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1200,
															1282
														],
														"referencedDeclaration": 1282,
														"src": "16290:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:4"
											},
											{
												"condition": {
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:4",
													"subExpression": {
														"id": 1222,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "16323:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "16318:74:4",
												"trueBody": {
													"id": 1231,
													"nodeType": "Block",
													"src": "16332:60:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1227,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "16358:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:4",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "16358:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1224,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "16346:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$229_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:4",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 228,
																	"src": "16346:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1233,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1215,
													"src": "16408:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1211,
												"id": 1234,
												"nodeType": "Return",
												"src": "16401:13:4"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:4",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "16157:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "16173:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "16189:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:4"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "16228:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:4"
									},
									"scope": 2155,
									"src": "16141:280:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "16675:771:4",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1251,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "16700:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1250,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "16689:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "16685:47:4",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1254,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1258,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1249,
													"id": 1259,
													"nodeType": "Return",
													"src": "16704:28:4"
												}
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "16743:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1265,
												"initialValue": {
													"expression": {
														"id": 1263,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "16758:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:4"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1266,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "16848:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1269,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "16874:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1271,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "16884:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1273,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "16894:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1274,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "16900:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1275,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "16903:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1276,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "16906:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1267,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:4",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:4"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:4",
													"nodeType": "YulBlock",
													"src": "16944:496:4",
													"statements": [
														{
															"nativeSrc": "16958:32:4",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:4"
																},
																"nativeSrc": "16973:17:4",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:4"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:4",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:4",
															"nodeType": "YulAssignment",
															"src": "17080:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:4"
																		},
																		"nativeSrc": "17102:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:4",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:4",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:4"
																		},
																		"nativeSrc": "17124:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:4"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:4"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:4"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:4"
																},
																"nativeSrc": "17091:62:4",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:4"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:4"
																},
																"nativeSrc": "17302:20:4",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:4"
															},
															"nativeSrc": "17302:20:4",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:4",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:4",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:4"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:4"
																		},
																		"nativeSrc": "17411:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:4"
																},
																"nativeSrc": "17398:32:4",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:4"
															},
															"nativeSrc": "17398:32:4",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:4"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1262,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:4",
														"valueSize": 1
													},
													{
														"declaration": 1262,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:4",
														"valueSize": 1
													},
													{
														"declaration": 1262,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:4",
														"valueSize": 1
													},
													{
														"declaration": 1248,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1248,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1248,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1246,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1280,
												"nodeType": "InlineAssembly",
												"src": "16919:521:4"
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:4",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "16548:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "16572:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "16596:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:4"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "16640:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "16654:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:4"
									},
									"scope": 2155,
									"src": "16520:926:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "17601:176:4",
										"statements": [
											{
												"body": {
													"id": 1310,
													"nodeType": "Block",
													"src": "17658:92:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1301,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "17676:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1303,
																	"indexExpression": {
																		"id": 1302,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "17686:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1309,
															"nodeType": "IfStatement",
															"src": "17672:68:4",
															"trueBody": {
																"id": 1308,
																"nodeType": "Block",
																"src": "17695:45:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1289,
																		"id": 1307,
																		"nodeType": "Return",
																		"src": "17713:12:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1294,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "17631:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1295,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "17635:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"initializationExpression": {
													"assignments": [
														1291
													],
													"declarations": [
														{
															"constant": false,
															"id": 1291,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1311,
															"src": "17616:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1290,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1293,
													"initialValue": {
														"hexValue": "30",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:4",
														"subExpression": {
															"id": 1298,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "17655:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:4"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1289,
												"id": 1313,
												"nodeType": "Return",
												"src": "17759:11:4"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:4",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "17549:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:4"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "17595:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:4"
									},
									"scope": 2155,
									"src": "17529:248:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "18137:5124:4",
										"statements": [
											{
												"id": 1532,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1323,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1318,
																"src": "18241:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1329,
														"nodeType": "IfStatement",
														"src": "18237:53:4",
														"trueBody": {
															"id": 1328,
															"nodeType": "Block",
															"src": "18249:41:4",
															"statements": [
																{
																	"expression": {
																		"id": 1326,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "18274:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1322,
																	"id": 1327,
																	"nodeType": "Return",
																	"src": "18267:8:4"
																}
															]
														}
													},
													{
														"assignments": [
															1331
														],
														"declarations": [
															{
																"constant": false,
																"id": 1331,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:4",
																"nodeType": "VariableDeclaration",
																"scope": 1532,
																"src": "19217:10:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1333,
														"initialValue": {
															"id": 1332,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "19230:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:4"
													},
													{
														"assignments": [
															1335
														],
														"declarations": [
															{
																"constant": false,
																"id": 1335,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:4",
																"nodeType": "VariableDeclaration",
																"scope": 1532,
																"src": "19245:10:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1334,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1337,
														"initialValue": {
															"hexValue": "31",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1338,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "19278:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1353,
														"nodeType": "IfStatement",
														"src": "19274:92:4",
														"trueBody": {
															"id": 1352,
															"nodeType": "Block",
															"src": "19296:70:4",
															"statements": [
																{
																	"expression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1344,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "19314:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:4"
																},
																{
																	"expression": {
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1348,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "19342:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1354,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "19383:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 1358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1369,
														"nodeType": "IfStatement",
														"src": "19379:90:4",
														"trueBody": {
															"id": 1368,
															"nodeType": "Block",
															"src": "19400:69:4",
															"statements": [
																{
																	"expression": {
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1360,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "19418:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1363,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:4"
																},
																{
																	"expression": {
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1364,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "19445:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1367,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1370,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "19486:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 1374,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1385,
														"nodeType": "IfStatement",
														"src": "19482:90:4",
														"trueBody": {
															"id": 1384,
															"nodeType": "Block",
															"src": "19503:69:4",
															"statements": [
																{
																	"expression": {
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1376,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "19521:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:4"
																},
																{
																	"expression": {
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1380,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "19548:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1383,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1386,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "19589:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 1390,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1401,
														"nodeType": "IfStatement",
														"src": "19585:89:4",
														"trueBody": {
															"id": 1400,
															"nodeType": "Block",
															"src": "19606:68:4",
															"statements": [
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "19624:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:4"
																},
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "19651:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1402,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "19691:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 1406,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1417,
														"nodeType": "IfStatement",
														"src": "19687:87:4",
														"trueBody": {
															"id": 1416,
															"nodeType": "Block",
															"src": "19707:67:4",
															"statements": [
																{
																	"expression": {
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1408,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "19725:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1411,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:4"
																},
																{
																	"expression": {
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1412,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "19751:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1415,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "19791:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 1422,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1433,
														"nodeType": "IfStatement",
														"src": "19787:87:4",
														"trueBody": {
															"id": 1432,
															"nodeType": "Block",
															"src": "19807:67:4",
															"statements": [
																{
																	"expression": {
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1424,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "19825:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1427,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:4"
																},
																{
																	"expression": {
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1428,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "19851:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1431,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1434,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "19891:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 1438,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1445,
														"nodeType": "IfStatement",
														"src": "19887:61:4",
														"trueBody": {
															"id": 1444,
															"nodeType": "Block",
															"src": "19907:41:4",
															"statements": [
																{
																	"expression": {
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1440,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "19925:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1443,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:4"
																}
															]
														}
													},
													{
														"expression": {
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1446,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "20368:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 1447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1448,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "20378:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1450,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1454,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:4"
													},
													{
														"expression": {
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1455,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "22273:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1456,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "22279:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1457,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1318,
																					"src": "22284:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1458,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "22288:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1461,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1465,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:4"
													},
													{
														"expression": {
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1466,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "22382:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1467,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "22388:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1468,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1318,
																					"src": "22393:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1469,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "22397:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1472,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1476,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:4"
													},
													{
														"expression": {
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1477,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "22493:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1478,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "22499:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1479,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1318,
																					"src": "22504:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1480,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "22508:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1487,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:4"
													},
													{
														"expression": {
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1488,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "22602:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1489,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "22608:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1490,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1318,
																					"src": "22613:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1491,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "22617:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1498,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:4"
													},
													{
														"expression": {
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1499,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "22712:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1500,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "22718:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1501,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1318,
																					"src": "22723:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1502,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "22727:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1509,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:4"
													},
													{
														"expression": {
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1510,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "22822:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1511,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "22828:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1512,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1318,
																					"src": "22833:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1513,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "22837:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1520,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1521,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "23211:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1524,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "23232:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1525,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "23237:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1526,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "23241:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1522,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "23216:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "23216:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1322,
														"id": 1531,
														"nodeType": "Return",
														"src": "23204:40:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "18094:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:4"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "18128:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:4"
									},
									"scope": 2155,
									"src": "18080:5181:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "23434:171:4",
										"statements": [
											{
												"id": 1566,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:4",
												"statements": [
													{
														"assignments": [
															1546
														],
														"declarations": [
															{
																"constant": false,
																"id": 1546,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1566,
																"src": "23468:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1545,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1550,
														"initialValue": {
															"arguments": [
																{
																	"id": 1548,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "23490:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1547,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1534,
																	1568
																],
																"referencedDeclaration": 1534,
																"src": "23485:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1551,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "23513:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1555,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1540,
																					"src": "23555:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1554,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2154,
																				"src": "23538:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$561_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1557,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1546,
																					"src": "23568:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1558,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1546,
																					"src": "23577:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1560,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1537,
																				"src": "23586:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "23522:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "23522:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1544,
														"id": 1565,
														"nodeType": "Return",
														"src": "23506:82:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:4",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "23372:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "23383:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$561",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1538,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "23383:8:4"
													},
													"referencedDeclaration": 561,
													"src": "23383:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$561",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:4"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "23425:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:4"
									},
									"scope": 2155,
									"src": "23358:247:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "23796:981:4",
										"statements": [
											{
												"assignments": [
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1763,
														"src": "23806:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"hexValue": "30",
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:4"
											},
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1763,
														"src": "23834:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1582,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:4"
											},
											{
												"id": 1760,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:4",
												"statements": [
													{
														"expression": {
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1583,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "23879:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1587,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "23907:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 1590,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1588,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 1589,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 1591,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1585,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3920,
																			"src": "23891:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:4",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3919,
																		"src": "23891:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1598,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:4"
													},
													{
														"expression": {
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1599,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "23944:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1600,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "23954:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1602,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:4"
													},
													{
														"expression": {
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1603,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "23971:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1604,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "23981:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1606,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:4"
													},
													{
														"expression": {
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1607,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "23999:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1611,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "24026:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 1617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 1614,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1612,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 1613,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 1615,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1609,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3920,
																			"src": "24010:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:4",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3919,
																		"src": "24010:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1622,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:4"
													},
													{
														"expression": {
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1623,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "24062:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1624,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24072:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1626,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:4"
													},
													{
														"expression": {
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1627,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "24089:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1628,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24099:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1630,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:4"
													},
													{
														"expression": {
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1631,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24117:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1635,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "24144:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 1641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 1638,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 1637,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 1639,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1633,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3920,
																			"src": "24128:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:4",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3919,
																		"src": "24128:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1646,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:4"
													},
													{
														"expression": {
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1647,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "24180:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1648,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24190:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1650,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:4"
													},
													{
														"expression": {
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1651,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "24207:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1652,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24217:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1654,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:4"
													},
													{
														"expression": {
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1655,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24235:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1659,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "24262:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 1665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 1662,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1660,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 1661,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 1663,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1664,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1657,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3920,
																			"src": "24246:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:4",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3919,
																		"src": "24246:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1670,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:4"
													},
													{
														"expression": {
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1671,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "24298:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1672,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24308:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1674,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:4"
													},
													{
														"expression": {
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1675,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "24325:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1676,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24335:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1678,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:4"
													},
													{
														"expression": {
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1679,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24353:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1683,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "24379:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 1689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 1686,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1684,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 1685,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 1687,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1688,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1681,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3920,
																			"src": "24363:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:4",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3919,
																		"src": "24363:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1694,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:4"
													},
													{
														"expression": {
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1695,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "24414:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1696,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24424:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1698,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:4"
													},
													{
														"expression": {
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1699,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "24441:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1700,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24451:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1702,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:4"
													},
													{
														"expression": {
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1703,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24469:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1707,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "24495:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 1713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 1710,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1708,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 1709,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 1711,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1705,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3920,
																			"src": "24479:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:4",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3919,
																		"src": "24479:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1718,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:4"
													},
													{
														"expression": {
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1719,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "24530:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1720,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24540:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1722,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:4"
													},
													{
														"expression": {
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1723,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "24557:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1724,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24567:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1726,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:4"
													},
													{
														"expression": {
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1727,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24585:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1731,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "24611:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 1737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 1734,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1732,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 1733,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 1735,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1736,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1729,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3920,
																			"src": "24595:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:4",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3919,
																		"src": "24595:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1742,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:4"
													},
													{
														"expression": {
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1743,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "24646:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1744,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24656:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1746,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:4"
													},
													{
														"expression": {
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1747,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "24673:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1748,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "24683:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1750,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:4"
													},
													{
														"expression": {
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1751,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "24701:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1754,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1571,
																			"src": "24727:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1752,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "24711:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "24711:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1759,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:4"
													}
												]
											},
											{
												"expression": {
													"id": 1761,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1577,
													"src": "24764:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1762,
												"nodeType": "Return",
												"src": "24757:13:4"
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:4",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "23749:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:4"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "23787:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:4"
									},
									"scope": 2155,
									"src": "23735:1042:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "25010:175:4",
										"statements": [
											{
												"id": 1796,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:4",
												"statements": [
													{
														"assignments": [
															1776
														],
														"declarations": [
															{
																"constant": false,
																"id": 1776,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1796,
																"src": "25044:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1775,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1780,
														"initialValue": {
															"arguments": [
																{
																	"id": 1778,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1767,
																	"src": "25066:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1777,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1764,
																	1798
																],
																"referencedDeclaration": 1764,
																"src": "25061:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1781,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "25093:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1785,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1770,
																					"src": "25135:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1784,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2154,
																				"src": "25118:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$561_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1787,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1788,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1776,
																					"src": "25153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1790,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1767,
																				"src": "25162:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1782,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "25102:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "25102:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1774,
														"id": 1795,
														"nodeType": "Return",
														"src": "25086:82:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "24944:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "24959:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$561",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1769,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1768,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "24959:8:4"
													},
													"referencedDeclaration": 561,
													"src": "24959:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$561",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:4"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "25001:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:4"
									},
									"scope": 2155,
									"src": "24930:255:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "25378:854:4",
										"statements": [
											{
												"assignments": [
													1807
												],
												"declarations": [
													{
														"constant": false,
														"id": 1807,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1926,
														"src": "25388:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1806,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1809,
												"initialValue": {
													"hexValue": "30",
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:4"
											},
											{
												"id": 1923,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1810,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "25444:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1826,
														"nodeType": "IfStatement",
														"src": "25440:103:4",
														"trueBody": {
															"id": 1825,
															"nodeType": "Block",
															"src": "25463:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "25481:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1820,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:4"
																},
																{
																	"expression": {
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1821,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "25516:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1824,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1827,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "25560:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1843,
														"nodeType": "IfStatement",
														"src": "25556:103:4",
														"trueBody": {
															"id": 1842,
															"nodeType": "Block",
															"src": "25579:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "25597:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1837,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:4"
																},
																{
																	"expression": {
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "25632:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1841,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "25676:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1860,
														"nodeType": "IfStatement",
														"src": "25672:103:4",
														"trueBody": {
															"id": 1859,
															"nodeType": "Block",
															"src": "25695:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "25713:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1854,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:4"
																},
																{
																	"expression": {
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "25748:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1858,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "25792:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1877,
														"nodeType": "IfStatement",
														"src": "25788:100:4",
														"trueBody": {
															"id": 1876,
															"nodeType": "Block",
															"src": "25810:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "25828:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1871,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:4"
																},
																{
																	"expression": {
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "25862:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1875,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1878,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "25905:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1894,
														"nodeType": "IfStatement",
														"src": "25901:100:4",
														"trueBody": {
															"id": 1893,
															"nodeType": "Block",
															"src": "25923:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "25941:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1888,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:4"
																},
																{
																	"expression": {
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "25975:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1892,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "26018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1911,
														"nodeType": "IfStatement",
														"src": "26014:100:4",
														"trueBody": {
															"id": 1910,
															"nodeType": "Block",
															"src": "26036:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "26054:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1905,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:4"
																},
																{
																	"expression": {
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1906,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "26088:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1909,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1912,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "26131:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1922,
														"nodeType": "IfStatement",
														"src": "26127:66:4",
														"trueBody": {
															"id": 1921,
															"nodeType": "Block",
															"src": "26149:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1917,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "26167:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1920,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1924,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1807,
													"src": "26219:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1925,
												"nodeType": "Return",
												"src": "26212:13:4"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:4",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "25331:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:4"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "25369:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:4"
									},
									"scope": 2155,
									"src": "25316:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "26467:177:4",
										"statements": [
											{
												"id": 1959,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:4",
												"statements": [
													{
														"assignments": [
															1939
														],
														"declarations": [
															{
																"constant": false,
																"id": 1939,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1959,
																"src": "26501:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1938,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1943,
														"initialValue": {
															"arguments": [
																{
																	"id": 1941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "26524:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1940,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1927,
																	1961
																],
																"referencedDeclaration": 1927,
																"src": "26518:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1944,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "26551:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1948,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1933,
																					"src": "26593:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1947,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2154,
																				"src": "26576:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$561_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1950,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 1951,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1939,
																					"src": "26612:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1953,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1930,
																				"src": "26621:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1945,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "26560:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "26560:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1937,
														"id": 1958,
														"nodeType": "Return",
														"src": "26544:83:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "26401:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "26416:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$561",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1932,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1931,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "26416:8:4"
													},
													"referencedDeclaration": 561,
													"src": "26416:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$561",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:4"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "26458:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:4"
									},
									"scope": 2155,
									"src": "26386:258:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "26964:674:4",
										"statements": [
											{
												"assignments": [
													1970
												],
												"declarations": [
													{
														"constant": false,
														"id": 1970,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 2097,
														"src": "26974:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1972,
												"initialValue": {
													"hexValue": "30",
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:4"
											},
											{
												"assignments": [
													1974
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 2097,
														"src": "27002:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1973,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:4"
											},
											{
												"id": 2094,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:4",
												"statements": [
													{
														"expression": {
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1976,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "27048:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1979,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "27071:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 1985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 1982,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1980,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 1981,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 1983,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1977,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "27055:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "27055:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1989,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:4"
													},
													{
														"expression": {
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1990,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "27108:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1991,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27118:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1995,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:4"
													},
													{
														"expression": {
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "27142:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1997,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27152:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2001,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:4"
													},
													{
														"expression": {
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2002,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "27176:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2005,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "27199:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 2008,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2006,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 2007,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 2009,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2003,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "27183:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "27183:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2015,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:4"
													},
													{
														"expression": {
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2016,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "27235:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2017,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27245:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2021,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:4"
													},
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2022,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "27268:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2023,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27278:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:4"
													},
													{
														"expression": {
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2028,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "27301:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2031,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "27324:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 2034,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2032,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 2033,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 2035,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2029,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "27308:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "27308:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2041,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:4"
													},
													{
														"expression": {
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2042,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "27360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2043,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27370:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2047,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:4"
													},
													{
														"expression": {
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2048,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "27393:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2049,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27403:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2053,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:4"
													},
													{
														"expression": {
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2054,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "27426:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2057,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "27449:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 2060,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2058,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 2059,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 2061,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2055,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "27433:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "27433:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2067,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:4"
													},
													{
														"expression": {
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2068,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "27485:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2069,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27495:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2073,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:4"
													},
													{
														"expression": {
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2074,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "27518:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2075,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "27528:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2079,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:4"
													},
													{
														"expression": {
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2080,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "27551:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2083,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "27577:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 2086,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2084,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 2085,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 2087,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2081,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "27561:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "27561:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2093,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:4"
													}
												]
											},
											{
												"expression": {
													"id": 2095,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1970,
													"src": "27625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1968,
												"id": 2096,
												"nodeType": "Return",
												"src": "27618:13:4"
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:4",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "26917:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:4"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "26955:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:4"
									},
									"scope": 2155,
									"src": "26901:737:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2134,
										"nodeType": "Block",
										"src": "27875:184:4",
										"statements": [
											{
												"id": 2133,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:4",
												"statements": [
													{
														"assignments": [
															2110
														],
														"declarations": [
															{
																"constant": false,
																"id": 2110,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 2133,
																"src": "27909:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2109,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2114,
														"initialValue": {
															"arguments": [
																{
																	"id": 2112,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "27933:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2111,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2098,
																	2135
																],
																"referencedDeclaration": 2098,
																"src": "27926:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2115,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "27960:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2119,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "28002:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$561",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2118,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2154,
																				"src": "27985:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$561_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2124,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2122,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2110,
																								"src": "28021:6:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2123,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2125,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2127,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2101,
																				"src": "28036:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2116,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "27969:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:4",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3919,
																	"src": "27969:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2108,
														"id": 2132,
														"nodeType": "Return",
														"src": "27953:89:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:4",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "27809:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "27824:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$561",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "27824:8:4"
													},
													"referencedDeclaration": 561,
													"src": "27824:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$561",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:4"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "27866:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:4"
									},
									"scope": 2155,
									"src": "27793:266:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "28257:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2146,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "28280:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$561",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$561",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2144,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2143,
												"id": 2152,
												"nodeType": "Return",
												"src": "28267:31:4"
											}
										]
									},
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:4",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "28209:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$561",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2137,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "28209:8:4"
													},
													"referencedDeclaration": 561,
													"src": "28209:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$561",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:4"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "28251:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:4"
									},
									"scope": 2155,
									"src": "28183:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2156,
							"src": "281:28026:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							3920
						]
					},
					"id": 3921,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2157,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2158,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:5",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 3920,
							"linearizedBaseContracts": [
								3920
							],
							"name": "SafeCast",
							"nameLocation": "777:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:5",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2165,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "902:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2160,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "914:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:5"
									},
									"src": "865:64:5"
								},
								{
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:5",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2170,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1049:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2167,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:5"
									},
									"src": "1015:48:5"
								},
								{
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:5",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2177,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "1177:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2172,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "1189:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2174,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:5"
									},
									"src": "1141:62:5"
								},
								{
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:5",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2182,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "1323:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:5"
									},
									"src": "1289:49:5"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "1695:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2190,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "1709:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2192,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2191,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2203,
												"nodeType": "IfStatement",
												"src": "1705:105:5",
												"trueBody": {
													"id": 2202,
													"nodeType": "Block",
													"src": "1736:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2199,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "1793:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2197,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "1757:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2201,
															"nodeType": "RevertStatement",
															"src": "1750:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2206,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "1834:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2204,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2208,
												"nodeType": "Return",
												"src": "1819:21:5"
											}
										]
									},
									"documentation": {
										"id": 2183,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:5",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "1648:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:5"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "1686:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2187,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:5"
									},
									"scope": 3920,
									"src": "1629:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "2204:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2218,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "2218:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2220,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2219,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "2214:105:5",
												"trueBody": {
													"id": 2230,
													"nodeType": "Block",
													"src": "2245:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2227,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2213,
																		"src": "2302:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2225,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "2266:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2229,
															"nodeType": "RevertStatement",
															"src": "2259:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2234,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "2343:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2232,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2236,
												"nodeType": "Return",
												"src": "2328:21:5"
											}
										]
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:5",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:5"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2195:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2215,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:5"
									},
									"scope": 3920,
									"src": "2138:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "2713:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2246,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "2727:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2248,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2247,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2259,
												"nodeType": "IfStatement",
												"src": "2723:105:5",
												"trueBody": {
													"id": 2258,
													"nodeType": "Block",
													"src": "2754:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2255,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "2811:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2253,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "2775:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2257,
															"nodeType": "RevertStatement",
															"src": "2768:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2262,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "2852:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2260,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2264,
												"nodeType": "Return",
												"src": "2837:21:5"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:5",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2666:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:5"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2704:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2243,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:5"
									},
									"scope": 3920,
									"src": "2647:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "3222:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2274,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "3236:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2276,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2275,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2287,
												"nodeType": "IfStatement",
												"src": "3232:105:5",
												"trueBody": {
													"id": 2286,
													"nodeType": "Block",
													"src": "3263:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2283,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "3320:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2281,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "3284:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2285,
															"nodeType": "RevertStatement",
															"src": "3277:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2290,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "3361:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2288,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2292,
												"nodeType": "Return",
												"src": "3346:21:5"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:5",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "3175:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:5"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "3213:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2271,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:5"
									},
									"scope": 3920,
									"src": "3156:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "3731:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2302,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "3745:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2304,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2303,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2315,
												"nodeType": "IfStatement",
												"src": "3741:105:5",
												"trueBody": {
													"id": 2314,
													"nodeType": "Block",
													"src": "3772:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2311,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "3829:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2309,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "3793:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2313,
															"nodeType": "RevertStatement",
															"src": "3786:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2318,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "3870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2316,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2301,
												"id": 2320,
												"nodeType": "Return",
												"src": "3855:21:5"
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:5",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "3684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:5"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "3722:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2299,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:5"
									},
									"scope": 3920,
									"src": "3665:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "4240:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2330,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "4254:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2332,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2331,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2343,
												"nodeType": "IfStatement",
												"src": "4250:105:5",
												"trueBody": {
													"id": 2342,
													"nodeType": "Block",
													"src": "4281:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2339,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "4338:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2337,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "4302:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2341,
															"nodeType": "RevertStatement",
															"src": "4295:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2346,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "4379:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2344,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2329,
												"id": 2348,
												"nodeType": "Return",
												"src": "4364:21:5"
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:5",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "4193:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:5"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "4231:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2327,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:5"
									},
									"scope": 3920,
									"src": "4174:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "4749:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2358,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "4763:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2360,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2359,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2371,
												"nodeType": "IfStatement",
												"src": "4759:105:5",
												"trueBody": {
													"id": 2370,
													"nodeType": "Block",
													"src": "4790:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2367,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "4847:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2365,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "4811:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2369,
															"nodeType": "RevertStatement",
															"src": "4804:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "4888:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2372,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2376,
												"nodeType": "Return",
												"src": "4873:21:5"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:5",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "4702:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:5"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "4740:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2355,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:5"
									},
									"scope": 3920,
									"src": "4683:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "5258:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2386,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "5272:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2388,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2387,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2399,
												"nodeType": "IfStatement",
												"src": "5268:105:5",
												"trueBody": {
													"id": 2398,
													"nodeType": "Block",
													"src": "5299:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2395,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2381,
																		"src": "5356:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2393,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "5320:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2397,
															"nodeType": "RevertStatement",
															"src": "5313:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "5397:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2400,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2385,
												"id": 2404,
												"nodeType": "Return",
												"src": "5382:21:5"
											}
										]
									},
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:5",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "5211:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:5"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "5249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2383,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:5"
									},
									"scope": 3920,
									"src": "5192:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "5767:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2414,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2409,
														"src": "5781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2416,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2415,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2427,
												"nodeType": "IfStatement",
												"src": "5777:105:5",
												"trueBody": {
													"id": 2426,
													"nodeType": "Block",
													"src": "5808:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2423,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "5865:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2421,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "5829:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2425,
															"nodeType": "RevertStatement",
															"src": "5822:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "5906:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2428,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2413,
												"id": 2432,
												"nodeType": "Return",
												"src": "5891:21:5"
											}
										]
									},
									"documentation": {
										"id": 2407,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:5",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "5720:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:5"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "5758:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2411,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:5"
									},
									"scope": 3920,
									"src": "5701:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2461,
										"nodeType": "Block",
										"src": "6276:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2442,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "6290:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2444,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2443,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2455,
												"nodeType": "IfStatement",
												"src": "6286:105:5",
												"trueBody": {
													"id": 2454,
													"nodeType": "Block",
													"src": "6317:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2437,
																		"src": "6374:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2449,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "6338:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2453,
															"nodeType": "RevertStatement",
															"src": "6331:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2458,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "6415:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2456,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2441,
												"id": 2460,
												"nodeType": "Return",
												"src": "6400:21:5"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:5",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "6229:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:5"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "6267:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2439,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:5"
									},
									"scope": 3920,
									"src": "6210:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "6785:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2470,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "6799:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2472,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2471,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2483,
												"nodeType": "IfStatement",
												"src": "6795:105:5",
												"trueBody": {
													"id": 2482,
													"nodeType": "Block",
													"src": "6826:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2479,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2465,
																		"src": "6883:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2477,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "6847:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2481,
															"nodeType": "RevertStatement",
															"src": "6840:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2486,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "6924:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2484,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2469,
												"id": 2488,
												"nodeType": "Return",
												"src": "6909:21:5"
											}
										]
									},
									"documentation": {
										"id": 2463,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:5",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "6738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:5"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "6776:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2467,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:5"
									},
									"scope": 3920,
									"src": "6719:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "7294:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2498,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2493,
														"src": "7308:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2500,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2499,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2511,
												"nodeType": "IfStatement",
												"src": "7304:105:5",
												"trueBody": {
													"id": 2510,
													"nodeType": "Block",
													"src": "7335:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2507,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2493,
																		"src": "7392:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2505,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "7356:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2509,
															"nodeType": "RevertStatement",
															"src": "7349:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2514,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2493,
															"src": "7433:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2512,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2497,
												"id": 2516,
												"nodeType": "Return",
												"src": "7418:21:5"
											}
										]
									},
									"documentation": {
										"id": 2491,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:5",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "7247:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:5"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "7285:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2495,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:5"
									},
									"scope": 3920,
									"src": "7228:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "7803:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2526,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "7817:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2528,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2527,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2539,
												"nodeType": "IfStatement",
												"src": "7813:105:5",
												"trueBody": {
													"id": 2538,
													"nodeType": "Block",
													"src": "7844:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2535,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "7901:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2533,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "7865:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2537,
															"nodeType": "RevertStatement",
															"src": "7858:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2542,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "7942:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2540,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2525,
												"id": 2544,
												"nodeType": "Return",
												"src": "7927:21:5"
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:5",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7756:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:5"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7794:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2523,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:5"
									},
									"scope": 3920,
									"src": "7737:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "8312:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2554,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "8326:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2556,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2555,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2567,
												"nodeType": "IfStatement",
												"src": "8322:105:5",
												"trueBody": {
													"id": 2566,
													"nodeType": "Block",
													"src": "8353:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2563,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2549,
																		"src": "8410:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2561,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "8374:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2565,
															"nodeType": "RevertStatement",
															"src": "8367:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2570,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "8451:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2568,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2553,
												"id": 2572,
												"nodeType": "Return",
												"src": "8436:21:5"
											}
										]
									},
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:5",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "8265:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:5"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "8303:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2551,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:5"
									},
									"scope": 3920,
									"src": "8246:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "8821:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2582,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2577,
														"src": "8835:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2584,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2583,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2595,
												"nodeType": "IfStatement",
												"src": "8831:105:5",
												"trueBody": {
													"id": 2594,
													"nodeType": "Block",
													"src": "8862:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "8919:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2589,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "8883:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2593,
															"nodeType": "RevertStatement",
															"src": "8876:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2598,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "8960:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 2596,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2581,
												"id": 2600,
												"nodeType": "Return",
												"src": "8945:21:5"
											}
										]
									},
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:5",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "8774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:5"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "8812:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2579,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:5"
									},
									"scope": 3920,
									"src": "8755:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "9330:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2610,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "9344:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2612,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2611,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2623,
												"nodeType": "IfStatement",
												"src": "9340:105:5",
												"trueBody": {
													"id": 2622,
													"nodeType": "Block",
													"src": "9371:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2619,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2605,
																		"src": "9428:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2617,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "9392:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2621,
															"nodeType": "RevertStatement",
															"src": "9385:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2626,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "9469:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2624,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2609,
												"id": 2628,
												"nodeType": "Return",
												"src": "9454:21:5"
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:5",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "9283:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:5"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "9321:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2607,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:5"
									},
									"scope": 3920,
									"src": "9264:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2657,
										"nodeType": "Block",
										"src": "9839:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2638,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2633,
														"src": "9853:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 2640,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 2639,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 2643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2651,
												"nodeType": "IfStatement",
												"src": "9849:105:5",
												"trueBody": {
													"id": 2650,
													"nodeType": "Block",
													"src": "9880:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 2647,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2633,
																		"src": "9937:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2645,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "9901:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2649,
															"nodeType": "RevertStatement",
															"src": "9894:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2654,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2633,
															"src": "9978:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 2652,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 2637,
												"id": 2656,
												"nodeType": "Return",
												"src": "9963:21:5"
											}
										]
									},
									"documentation": {
										"id": 2631,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:5",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 2658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "9792:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:5"
									},
									"returnParameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "9830:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 2635,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:5"
									},
									"scope": 3920,
									"src": "9773:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "10348:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2666,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2661,
														"src": "10362:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 2668,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 2667,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 2671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2679,
												"nodeType": "IfStatement",
												"src": "10358:105:5",
												"trueBody": {
													"id": 2678,
													"nodeType": "Block",
													"src": "10389:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 2675,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2661,
																		"src": "10446:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2673,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "10410:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2677,
															"nodeType": "RevertStatement",
															"src": "10403:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2682,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2661,
															"src": "10487:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 2680,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 2665,
												"id": 2684,
												"nodeType": "Return",
												"src": "10472:21:5"
											}
										]
									},
									"documentation": {
										"id": 2659,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:5",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "10301:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:5"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "10339:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2663,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:5"
									},
									"scope": 3920,
									"src": "10282:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "10857:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2689,
														"src": "10871:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 2696,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 2695,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 2699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2707,
												"nodeType": "IfStatement",
												"src": "10867:105:5",
												"trueBody": {
													"id": 2706,
													"nodeType": "Block",
													"src": "10898:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 2703,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "10955:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2701,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "10919:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2705,
															"nodeType": "RevertStatement",
															"src": "10912:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "10996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 2708,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 2693,
												"id": 2712,
												"nodeType": "Return",
												"src": "10981:21:5"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:5",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "10810:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:5"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "10848:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 2691,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:5"
									},
									"scope": 3920,
									"src": "10791:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "11360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2722,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2717,
														"src": "11374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 2724,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 2723,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 2727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2735,
												"nodeType": "IfStatement",
												"src": "11370:103:5",
												"trueBody": {
													"id": 2734,
													"nodeType": "Block",
													"src": "11400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 2731,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "11456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2729,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "11421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2733,
															"nodeType": "RevertStatement",
															"src": "11414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2738,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "11496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 2736,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2721,
												"id": 2740,
												"nodeType": "Return",
												"src": "11482:20:5"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:5",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "11314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:5"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "11352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2719,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:5"
									},
									"scope": 3920,
									"src": "11296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "11860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2750,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2745,
														"src": "11874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 2752,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 2751,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 2755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2763,
												"nodeType": "IfStatement",
												"src": "11870:103:5",
												"trueBody": {
													"id": 2762,
													"nodeType": "Block",
													"src": "11900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2759,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2745,
																		"src": "11956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2757,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "11921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2761,
															"nodeType": "RevertStatement",
															"src": "11914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "11996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 2764,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 2749,
												"id": 2768,
												"nodeType": "Return",
												"src": "11982:20:5"
											}
										]
									},
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:5",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "11814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:5"
									},
									"returnParameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "11852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 2747,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:5"
									},
									"scope": 3920,
									"src": "11796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "12360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2778,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2773,
														"src": "12374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 2780,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 2779,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2791,
												"nodeType": "IfStatement",
												"src": "12370:103:5",
												"trueBody": {
													"id": 2790,
													"nodeType": "Block",
													"src": "12400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 2787,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "12456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2785,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "12421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2789,
															"nodeType": "RevertStatement",
															"src": "12414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2794,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "12496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 2792,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 2777,
												"id": 2796,
												"nodeType": "Return",
												"src": "12482:20:5"
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:5",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 2798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "12314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:5"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "12352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2775,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:5"
									},
									"scope": 3920,
									"src": "12296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "12860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2806,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "12874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 2808,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 2807,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 2811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2819,
												"nodeType": "IfStatement",
												"src": "12870:103:5",
												"trueBody": {
													"id": 2818,
													"nodeType": "Block",
													"src": "12900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 2815,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2801,
																		"src": "12956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2813,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "12921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2817,
															"nodeType": "RevertStatement",
															"src": "12914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2822,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2801,
															"src": "12996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 2820,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 2805,
												"id": 2824,
												"nodeType": "Return",
												"src": "12982:20:5"
											}
										]
									},
									"documentation": {
										"id": 2799,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:5",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "12814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:5"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "12852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 2803,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:5"
									},
									"scope": 3920,
									"src": "12796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2853,
										"nodeType": "Block",
										"src": "13360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2834,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2829,
														"src": "13374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2836,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 2835,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 2839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2847,
												"nodeType": "IfStatement",
												"src": "13370:103:5",
												"trueBody": {
													"id": 2846,
													"nodeType": "Block",
													"src": "13400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 2842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 2843,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2829,
																		"src": "13456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2841,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "13421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2845,
															"nodeType": "RevertStatement",
															"src": "13414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2850,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2829,
															"src": "13496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 2848,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2833,
												"id": 2852,
												"nodeType": "Return",
												"src": "13482:20:5"
											}
										]
									},
									"documentation": {
										"id": 2827,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:5",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 2854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "13314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:5"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "13352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2831,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:5"
									},
									"scope": 3920,
									"src": "13296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2881,
										"nodeType": "Block",
										"src": "13860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2862,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "13874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 2864,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 2863,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2875,
												"nodeType": "IfStatement",
												"src": "13870:103:5",
												"trueBody": {
													"id": 2874,
													"nodeType": "Block",
													"src": "13900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 2871,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2857,
																		"src": "13956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2869,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "13921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2873,
															"nodeType": "RevertStatement",
															"src": "13914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2878,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "13996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 2876,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 2861,
												"id": 2880,
												"nodeType": "Return",
												"src": "13982:20:5"
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:5",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 2882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "13814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:5"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "13852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 2859,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:5"
									},
									"scope": 3920,
									"src": "13796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2909,
										"nodeType": "Block",
										"src": "14360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2890,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "14374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 2892,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 2891,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 2895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2903,
												"nodeType": "IfStatement",
												"src": "14370:103:5",
												"trueBody": {
													"id": 2902,
													"nodeType": "Block",
													"src": "14400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 2899,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2885,
																		"src": "14456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2897,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "14421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2901,
															"nodeType": "RevertStatement",
															"src": "14414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2906,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2885,
															"src": "14496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 2904,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 2889,
												"id": 2908,
												"nodeType": "Return",
												"src": "14482:20:5"
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:5",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 2910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "14314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:5"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "14352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2887,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:5"
									},
									"scope": 3920,
									"src": "14296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2937,
										"nodeType": "Block",
										"src": "14860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2918,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2913,
														"src": "14874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 2920,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 2919,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2931,
												"nodeType": "IfStatement",
												"src": "14870:103:5",
												"trueBody": {
													"id": 2930,
													"nodeType": "Block",
													"src": "14900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 2927,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2913,
																		"src": "14956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2925,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "14921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2929,
															"nodeType": "RevertStatement",
															"src": "14914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2934,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2913,
															"src": "14996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 2932,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2936,
												"nodeType": "Return",
												"src": "14982:20:5"
											}
										]
									},
									"documentation": {
										"id": 2911,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:5",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 2938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "14814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:5"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "14852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 2915,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:5"
									},
									"scope": 3920,
									"src": "14796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "15360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2946,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2941,
														"src": "15374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 2948,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 2947,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2959,
												"nodeType": "IfStatement",
												"src": "15370:103:5",
												"trueBody": {
													"id": 2958,
													"nodeType": "Block",
													"src": "15400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 2955,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2941,
																		"src": "15456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2953,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "15421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2957,
															"nodeType": "RevertStatement",
															"src": "15414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "15496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 2960,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2945,
												"id": 2964,
												"nodeType": "Return",
												"src": "15482:20:5"
											}
										]
									},
									"documentation": {
										"id": 2939,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:5",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 2966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "15314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:5"
									},
									"returnParameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "15352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2943,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:5"
									},
									"scope": 3920,
									"src": "15296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2993,
										"nodeType": "Block",
										"src": "15860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2974,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2969,
														"src": "15874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 2976,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 2975,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2987,
												"nodeType": "IfStatement",
												"src": "15870:103:5",
												"trueBody": {
													"id": 2986,
													"nodeType": "Block",
													"src": "15900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 2983,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2969,
																		"src": "15956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2981,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "15921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2985,
															"nodeType": "RevertStatement",
															"src": "15914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2990,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2969,
															"src": "15996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2988,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 2973,
												"id": 2992,
												"nodeType": "Return",
												"src": "15982:20:5"
											}
										]
									},
									"documentation": {
										"id": 2967,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:5",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 2994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "15814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:5"
									},
									"returnParameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "15852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2971,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:5"
									},
									"scope": 3920,
									"src": "15796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3021,
										"nodeType": "Block",
										"src": "16360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3002,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "16374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3004,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3003,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3015,
												"nodeType": "IfStatement",
												"src": "16370:103:5",
												"trueBody": {
													"id": 3014,
													"nodeType": "Block",
													"src": "16400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3011,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2997,
																		"src": "16456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3009,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "16421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3013,
															"nodeType": "RevertStatement",
															"src": "16414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3018,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "16496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3016,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3001,
												"id": 3020,
												"nodeType": "Return",
												"src": "16482:20:5"
											}
										]
									},
									"documentation": {
										"id": 2995,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:5",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "16314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:5"
									},
									"returnParameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "16352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2999,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:5"
									},
									"scope": 3920,
									"src": "16296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3049,
										"nodeType": "Block",
										"src": "16854:146:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3030,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "16868:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3032,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3031,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3043,
												"nodeType": "IfStatement",
												"src": "16864:101:5",
												"trueBody": {
													"id": 3042,
													"nodeType": "Block",
													"src": "16893:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3039,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3025,
																		"src": "16948:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3037,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "16914:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3041,
															"nodeType": "RevertStatement",
															"src": "16907:47:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3046,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3025,
															"src": "16987:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3044,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 3047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3029,
												"id": 3048,
												"nodeType": "Return",
												"src": "16974:19:5"
											}
										]
									},
									"documentation": {
										"id": 3023,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:5",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3050,
												"src": "16809:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:5"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3050,
												"src": "16847:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3027,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:5"
									},
									"scope": 3920,
									"src": "16792:208:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3072,
										"nodeType": "Block",
										"src": "17236:128:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3058,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3053,
														"src": "17250:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3066,
												"nodeType": "IfStatement",
												"src": "17246:81:5",
												"trueBody": {
													"id": 3065,
													"nodeType": "Block",
													"src": "17261:66:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3062,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3053,
																		"src": "17310:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3061,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "17282:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3064,
															"nodeType": "RevertStatement",
															"src": "17275:41:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3069,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3053,
															"src": "17351:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3057,
												"id": 3071,
												"nodeType": "Return",
												"src": "17336:21:5"
											}
										]
									},
									"documentation": {
										"id": 3051,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:5",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "17190:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3052,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:5"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "17227:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:5"
									},
									"scope": 3920,
									"src": "17171:193:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3098,
										"nodeType": "Block",
										"src": "17761:150:5",
										"statements": [
											{
												"expression": {
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3081,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3079,
														"src": "17771:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3084,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3076,
																"src": "17791:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3082,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3087,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3088,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3079,
														"src": "17811:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3089,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3076,
														"src": "17825:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3097,
												"nodeType": "IfStatement",
												"src": "17807:98:5",
												"trueBody": {
													"id": 3096,
													"nodeType": "Block",
													"src": "17832:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3093,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3076,
																		"src": "17888:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3091,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "17853:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3095,
															"nodeType": "RevertStatement",
															"src": "17846:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3074,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:5",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "17705:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3075,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:5"
									},
									"returnParameters": {
										"id": 3080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "17742:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3078,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:5"
									},
									"scope": 3920,
									"src": "17687:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3124,
										"nodeType": "Block",
										"src": "18308:150:5",
										"statements": [
											{
												"expression": {
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3107,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3105,
														"src": "18318:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3110,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3102,
																"src": "18338:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3108,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3113,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3114,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3105,
														"src": "18358:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3115,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "18372:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3123,
												"nodeType": "IfStatement",
												"src": "18354:98:5",
												"trueBody": {
													"id": 3122,
													"nodeType": "Block",
													"src": "18379:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3119,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3102,
																		"src": "18435:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3117,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "18400:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3121,
															"nodeType": "RevertStatement",
															"src": "18393:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3100,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:5",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "18252:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:5"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "18289:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3104,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:5"
									},
									"scope": 3920,
									"src": "18234:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3150,
										"nodeType": "Block",
										"src": "18855:150:5",
										"statements": [
											{
												"expression": {
													"id": 3138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3133,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3131,
														"src": "18865:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3136,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3128,
																"src": "18885:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3134,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3139,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3140,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3131,
														"src": "18905:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3141,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "18919:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3149,
												"nodeType": "IfStatement",
												"src": "18901:98:5",
												"trueBody": {
													"id": 3148,
													"nodeType": "Block",
													"src": "18926:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3145,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3128,
																		"src": "18982:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3143,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "18947:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3147,
															"nodeType": "RevertStatement",
															"src": "18940:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3126,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:5",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "18799:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3127,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:5"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "18836:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3130,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:5"
									},
									"scope": 3920,
									"src": "18781:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3176,
										"nodeType": "Block",
										"src": "19402:150:5",
										"statements": [
											{
												"expression": {
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3159,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "19412:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3162,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "19432:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3160,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3165,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3166,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "19452:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3167,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3154,
														"src": "19466:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3175,
												"nodeType": "IfStatement",
												"src": "19448:98:5",
												"trueBody": {
													"id": 3174,
													"nodeType": "Block",
													"src": "19473:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3171,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3154,
																		"src": "19529:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3169,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "19494:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3173,
															"nodeType": "RevertStatement",
															"src": "19487:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3152,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:5",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "19346:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3153,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:5"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "19383:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3156,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:5"
									},
									"scope": 3920,
									"src": "19328:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3202,
										"nodeType": "Block",
										"src": "19949:150:5",
										"statements": [
											{
												"expression": {
													"id": 3190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3185,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3183,
														"src": "19959:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3188,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3180,
																"src": "19979:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3186,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3191,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3192,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3183,
														"src": "19999:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3193,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3180,
														"src": "20013:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3201,
												"nodeType": "IfStatement",
												"src": "19995:98:5",
												"trueBody": {
													"id": 3200,
													"nodeType": "Block",
													"src": "20020:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3197,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3180,
																		"src": "20076:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3195,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "20041:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3199,
															"nodeType": "RevertStatement",
															"src": "20034:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3178,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:5",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "19893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3179,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:5"
									},
									"returnParameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "19930:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3182,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:5"
									},
									"scope": 3920,
									"src": "19875:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3228,
										"nodeType": "Block",
										"src": "20496:150:5",
										"statements": [
											{
												"expression": {
													"id": 3216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3211,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "20506:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3214,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3206,
																"src": "20526:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3212,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3217,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3218,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "20546:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3219,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3206,
														"src": "20560:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3227,
												"nodeType": "IfStatement",
												"src": "20542:98:5",
												"trueBody": {
													"id": 3226,
													"nodeType": "Block",
													"src": "20567:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3206,
																		"src": "20623:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3221,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "20588:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3225,
															"nodeType": "RevertStatement",
															"src": "20581:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3204,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:5",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "20440:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3205,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:5"
									},
									"returnParameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "20477:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3208,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:5"
									},
									"scope": 3920,
									"src": "20422:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3254,
										"nodeType": "Block",
										"src": "21043:150:5",
										"statements": [
											{
												"expression": {
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3237,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3235,
														"src": "21053:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3240,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3232,
																"src": "21073:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3238,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3243,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3244,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3235,
														"src": "21093:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3245,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3232,
														"src": "21107:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3253,
												"nodeType": "IfStatement",
												"src": "21089:98:5",
												"trueBody": {
													"id": 3252,
													"nodeType": "Block",
													"src": "21114:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3249,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3232,
																		"src": "21170:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3247,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "21135:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3251,
															"nodeType": "RevertStatement",
															"src": "21128:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3230,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:5",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3255,
												"src": "20987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3231,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:5"
									},
									"returnParameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3235,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3255,
												"src": "21024:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3234,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:5"
									},
									"scope": 3920,
									"src": "20969:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3280,
										"nodeType": "Block",
										"src": "21590:150:5",
										"statements": [
											{
												"expression": {
													"id": 3268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3263,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3261,
														"src": "21600:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3266,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3258,
																"src": "21620:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3264,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3269,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3270,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3261,
														"src": "21640:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3271,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3258,
														"src": "21654:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3279,
												"nodeType": "IfStatement",
												"src": "21636:98:5",
												"trueBody": {
													"id": 3278,
													"nodeType": "Block",
													"src": "21661:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3275,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3258,
																		"src": "21717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3273,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "21682:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3277,
															"nodeType": "RevertStatement",
															"src": "21675:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3256,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:5",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3281,
												"src": "21534:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:5"
									},
									"returnParameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3261,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3281,
												"src": "21571:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3260,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:5"
									},
									"scope": 3920,
									"src": "21516:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3306,
										"nodeType": "Block",
										"src": "22137:150:5",
										"statements": [
											{
												"expression": {
													"id": 3294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3289,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3287,
														"src": "22147:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3292,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3284,
																"src": "22167:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3290,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3295,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3296,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3287,
														"src": "22187:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3297,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3284,
														"src": "22201:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3305,
												"nodeType": "IfStatement",
												"src": "22183:98:5",
												"trueBody": {
													"id": 3304,
													"nodeType": "Block",
													"src": "22208:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3301,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3284,
																		"src": "22264:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3299,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "22229:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3303,
															"nodeType": "RevertStatement",
															"src": "22222:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3282,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:5",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3307,
												"src": "22081:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3283,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:5"
									},
									"returnParameters": {
										"id": 3288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3307,
												"src": "22118:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3286,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:5"
									},
									"scope": 3920,
									"src": "22063:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3332,
										"nodeType": "Block",
										"src": "22684:150:5",
										"statements": [
											{
												"expression": {
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3315,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3313,
														"src": "22694:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3310,
																"src": "22714:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3316,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3321,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3322,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3313,
														"src": "22734:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3323,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "22748:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3331,
												"nodeType": "IfStatement",
												"src": "22730:98:5",
												"trueBody": {
													"id": 3330,
													"nodeType": "Block",
													"src": "22755:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3327,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3310,
																		"src": "22811:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3325,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "22776:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3329,
															"nodeType": "RevertStatement",
															"src": "22769:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3308,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:5",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "22628:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3309,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:5"
									},
									"returnParameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "22665:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3312,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:5"
									},
									"scope": 3920,
									"src": "22610:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3358,
										"nodeType": "Block",
										"src": "23231:150:5",
										"statements": [
											{
												"expression": {
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3341,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "23241:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3336,
																"src": "23261:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3342,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3347,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3348,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "23281:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3349,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3336,
														"src": "23295:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3357,
												"nodeType": "IfStatement",
												"src": "23277:98:5",
												"trueBody": {
													"id": 3356,
													"nodeType": "Block",
													"src": "23302:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3353,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3336,
																		"src": "23358:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3351,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "23323:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3355,
															"nodeType": "RevertStatement",
															"src": "23316:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3334,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:5",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3359,
												"src": "23175:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3335,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:5"
									},
									"returnParameters": {
										"id": 3340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3339,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3359,
												"src": "23212:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3338,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:5"
									},
									"scope": 3920,
									"src": "23157:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3384,
										"nodeType": "Block",
										"src": "23778:150:5",
										"statements": [
											{
												"expression": {
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3367,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3365,
														"src": "23788:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3370,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3362,
																"src": "23808:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3368,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3373,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3374,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3365,
														"src": "23828:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3375,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3362,
														"src": "23842:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3383,
												"nodeType": "IfStatement",
												"src": "23824:98:5",
												"trueBody": {
													"id": 3382,
													"nodeType": "Block",
													"src": "23849:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3379,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3362,
																		"src": "23905:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3377,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "23870:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3381,
															"nodeType": "RevertStatement",
															"src": "23863:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3360,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:5",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "23722:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3361,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:5"
									},
									"returnParameters": {
										"id": 3366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3365,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "23759:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3364,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:5"
									},
									"scope": 3920,
									"src": "23704:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3410,
										"nodeType": "Block",
										"src": "24325:150:5",
										"statements": [
											{
												"expression": {
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3393,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3391,
														"src": "24335:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3396,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3388,
																"src": "24355:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3394,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3399,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3400,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3391,
														"src": "24375:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3401,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "24389:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3409,
												"nodeType": "IfStatement",
												"src": "24371:98:5",
												"trueBody": {
													"id": 3408,
													"nodeType": "Block",
													"src": "24396:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3405,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3388,
																		"src": "24452:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3403,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "24417:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3407,
															"nodeType": "RevertStatement",
															"src": "24410:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3386,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:5",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "24269:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3387,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:5"
									},
									"returnParameters": {
										"id": 3392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3391,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "24306:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3390,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:5"
									},
									"scope": 3920,
									"src": "24251:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3436,
										"nodeType": "Block",
										"src": "24872:150:5",
										"statements": [
											{
												"expression": {
													"id": 3424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3419,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3417,
														"src": "24882:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3422,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3414,
																"src": "24902:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3420,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3425,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3426,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3417,
														"src": "24922:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3427,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3414,
														"src": "24936:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3435,
												"nodeType": "IfStatement",
												"src": "24918:98:5",
												"trueBody": {
													"id": 3434,
													"nodeType": "Block",
													"src": "24943:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3431,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3414,
																		"src": "24999:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3429,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "24964:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3433,
															"nodeType": "RevertStatement",
															"src": "24957:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3412,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:5",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3437,
												"src": "24816:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3413,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:5"
									},
									"returnParameters": {
										"id": 3418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3417,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3437,
												"src": "24853:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3416,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:5"
									},
									"scope": 3920,
									"src": "24798:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3462,
										"nodeType": "Block",
										"src": "25419:150:5",
										"statements": [
											{
												"expression": {
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3445,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3443,
														"src": "25429:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3448,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3440,
																"src": "25449:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3446,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3451,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3452,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3443,
														"src": "25469:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3453,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3440,
														"src": "25483:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3461,
												"nodeType": "IfStatement",
												"src": "25465:98:5",
												"trueBody": {
													"id": 3460,
													"nodeType": "Block",
													"src": "25490:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3457,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3440,
																		"src": "25546:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3455,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "25511:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3459,
															"nodeType": "RevertStatement",
															"src": "25504:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3438,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:5",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "25363:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3439,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:5"
									},
									"returnParameters": {
										"id": 3444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3443,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "25400:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3442,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:5"
									},
									"scope": 3920,
									"src": "25345:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3488,
										"nodeType": "Block",
										"src": "25966:150:5",
										"statements": [
											{
												"expression": {
													"id": 3476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3471,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3469,
														"src": "25976:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3474,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3466,
																"src": "25996:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3472,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3477,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3478,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3469,
														"src": "26016:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3479,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3466,
														"src": "26030:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3487,
												"nodeType": "IfStatement",
												"src": "26012:98:5",
												"trueBody": {
													"id": 3486,
													"nodeType": "Block",
													"src": "26037:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3483,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3466,
																		"src": "26093:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3481,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "26058:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3485,
															"nodeType": "RevertStatement",
															"src": "26051:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3464,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:5",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "25910:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3465,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:5"
									},
									"returnParameters": {
										"id": 3470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3469,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "25947:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3468,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:5"
									},
									"scope": 3920,
									"src": "25892:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3514,
										"nodeType": "Block",
										"src": "26513:150:5",
										"statements": [
											{
												"expression": {
													"id": 3502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3497,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3495,
														"src": "26523:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3500,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3492,
																"src": "26543:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3498,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3503,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3504,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3495,
														"src": "26563:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3505,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3492,
														"src": "26577:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3513,
												"nodeType": "IfStatement",
												"src": "26559:98:5",
												"trueBody": {
													"id": 3512,
													"nodeType": "Block",
													"src": "26584:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3509,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3492,
																		"src": "26640:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3507,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "26605:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3511,
															"nodeType": "RevertStatement",
															"src": "26598:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3490,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:5",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3515,
												"src": "26457:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3491,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:5"
									},
									"returnParameters": {
										"id": 3496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3495,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3515,
												"src": "26494:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3494,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:5"
									},
									"scope": 3920,
									"src": "26439:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3540,
										"nodeType": "Block",
										"src": "27060:150:5",
										"statements": [
											{
												"expression": {
													"id": 3528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3523,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3521,
														"src": "27070:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3526,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3518,
																"src": "27090:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3524,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3529,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3530,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3521,
														"src": "27110:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3531,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3518,
														"src": "27124:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3539,
												"nodeType": "IfStatement",
												"src": "27106:98:5",
												"trueBody": {
													"id": 3538,
													"nodeType": "Block",
													"src": "27131:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3535,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3518,
																		"src": "27187:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3533,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "27152:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3537,
															"nodeType": "RevertStatement",
															"src": "27145:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3516,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:5",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "27004:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3517,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:5"
									},
									"returnParameters": {
										"id": 3522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3521,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "27041:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3520,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:5"
									},
									"scope": 3920,
									"src": "26986:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3566,
										"nodeType": "Block",
										"src": "27607:150:5",
										"statements": [
											{
												"expression": {
													"id": 3554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3549,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3547,
														"src": "27617:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3544,
																"src": "27637:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3550,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 3553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3555,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3556,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3547,
														"src": "27657:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3557,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3544,
														"src": "27671:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3565,
												"nodeType": "IfStatement",
												"src": "27653:98:5",
												"trueBody": {
													"id": 3564,
													"nodeType": "Block",
													"src": "27678:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3561,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3544,
																		"src": "27734:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3559,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "27699:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3563,
															"nodeType": "RevertStatement",
															"src": "27692:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3542,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:5",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3544,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "27551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:5"
									},
									"returnParameters": {
										"id": 3548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3547,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "27588:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3546,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:5"
									},
									"scope": 3920,
									"src": "27533:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3592,
										"nodeType": "Block",
										"src": "28147:148:5",
										"statements": [
											{
												"expression": {
													"id": 3580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3575,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3573,
														"src": "28157:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3570,
																"src": "28176:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3576,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3581,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3582,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3573,
														"src": "28196:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3583,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3570,
														"src": "28210:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3591,
												"nodeType": "IfStatement",
												"src": "28192:97:5",
												"trueBody": {
													"id": 3590,
													"nodeType": "Block",
													"src": "28217:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3570,
																		"src": "28272:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3585,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "28238:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3589,
															"nodeType": "RevertStatement",
															"src": "28231:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3568,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:5",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3593,
												"src": "28092:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3569,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:5"
									},
									"returnParameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3593,
												"src": "28129:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3572,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:5"
									},
									"scope": 3920,
									"src": "28075:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3618,
										"nodeType": "Block",
										"src": "28685:148:5",
										"statements": [
											{
												"expression": {
													"id": 3606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3601,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3599,
														"src": "28695:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3604,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3596,
																"src": "28714:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 3602,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 3607,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3608,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3599,
														"src": "28734:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3609,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3596,
														"src": "28748:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3617,
												"nodeType": "IfStatement",
												"src": "28730:97:5",
												"trueBody": {
													"id": 3616,
													"nodeType": "Block",
													"src": "28755:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3613,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3596,
																		"src": "28810:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3611,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "28776:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3615,
															"nodeType": "RevertStatement",
															"src": "28769:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3594,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:5",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3619,
												"src": "28630:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3595,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:5"
									},
									"returnParameters": {
										"id": 3600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3619,
												"src": "28667:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 3598,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:5"
									},
									"scope": 3920,
									"src": "28613:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3644,
										"nodeType": "Block",
										"src": "29223:148:5",
										"statements": [
											{
												"expression": {
													"id": 3632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3627,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3625,
														"src": "29233:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3630,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3622,
																"src": "29252:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 3628,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 3633,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3634,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3625,
														"src": "29272:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3635,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3622,
														"src": "29286:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3643,
												"nodeType": "IfStatement",
												"src": "29268:97:5",
												"trueBody": {
													"id": 3642,
													"nodeType": "Block",
													"src": "29293:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3639,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3622,
																		"src": "29348:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3637,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "29314:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3641,
															"nodeType": "RevertStatement",
															"src": "29307:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3620,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:5",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "29168:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3621,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:5"
									},
									"returnParameters": {
										"id": 3626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3625,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "29205:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 3624,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:5"
									},
									"scope": 3920,
									"src": "29151:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3670,
										"nodeType": "Block",
										"src": "29761:148:5",
										"statements": [
											{
												"expression": {
													"id": 3658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3653,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3651,
														"src": "29771:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3656,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3648,
																"src": "29790:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 3654,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 3659,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3660,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3651,
														"src": "29810:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3661,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3648,
														"src": "29824:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3669,
												"nodeType": "IfStatement",
												"src": "29806:97:5",
												"trueBody": {
													"id": 3668,
													"nodeType": "Block",
													"src": "29831:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3665,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3648,
																		"src": "29886:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3663,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "29852:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3667,
															"nodeType": "RevertStatement",
															"src": "29845:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3646,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:5",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3671,
												"src": "29706:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3647,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:5"
									},
									"returnParameters": {
										"id": 3652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3651,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3671,
												"src": "29743:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 3650,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:5"
									},
									"scope": 3920,
									"src": "29689:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3696,
										"nodeType": "Block",
										"src": "30299:148:5",
										"statements": [
											{
												"expression": {
													"id": 3684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3679,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3677,
														"src": "30309:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3682,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3674,
																"src": "30328:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 3680,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 3685,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3686,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3677,
														"src": "30348:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3687,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3674,
														"src": "30362:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3695,
												"nodeType": "IfStatement",
												"src": "30344:97:5",
												"trueBody": {
													"id": 3694,
													"nodeType": "Block",
													"src": "30369:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3691,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3674,
																		"src": "30424:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3689,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "30390:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3693,
															"nodeType": "RevertStatement",
															"src": "30383:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3672,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:5",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3697,
												"src": "30244:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3673,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:5"
									},
									"returnParameters": {
										"id": 3678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3677,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3697,
												"src": "30281:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3676,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:5"
									},
									"scope": 3920,
									"src": "30227:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3722,
										"nodeType": "Block",
										"src": "30837:148:5",
										"statements": [
											{
												"expression": {
													"id": 3710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3705,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3703,
														"src": "30847:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3700,
																"src": "30866:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 3706,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 3711,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3712,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3703,
														"src": "30886:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3713,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3700,
														"src": "30900:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3721,
												"nodeType": "IfStatement",
												"src": "30882:97:5",
												"trueBody": {
													"id": 3720,
													"nodeType": "Block",
													"src": "30907:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3717,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3700,
																		"src": "30962:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3715,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "30928:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3719,
															"nodeType": "RevertStatement",
															"src": "30921:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3698,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:5",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "30782:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3699,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:5"
									},
									"returnParameters": {
										"id": 3704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3703,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "30819:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 3702,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:5"
									},
									"scope": 3920,
									"src": "30765:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3748,
										"nodeType": "Block",
										"src": "31375:148:5",
										"statements": [
											{
												"expression": {
													"id": 3736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3731,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3729,
														"src": "31385:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3734,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3726,
																"src": "31404:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 3732,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 3737,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3738,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3729,
														"src": "31424:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3739,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3726,
														"src": "31438:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3747,
												"nodeType": "IfStatement",
												"src": "31420:97:5",
												"trueBody": {
													"id": 3746,
													"nodeType": "Block",
													"src": "31445:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3743,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3726,
																		"src": "31500:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3741,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "31466:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3745,
															"nodeType": "RevertStatement",
															"src": "31459:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3724,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:5",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3749,
												"src": "31320:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3725,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:5"
									},
									"returnParameters": {
										"id": 3730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3729,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3749,
												"src": "31357:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 3728,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:5"
									},
									"scope": 3920,
									"src": "31303:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3774,
										"nodeType": "Block",
										"src": "31913:148:5",
										"statements": [
											{
												"expression": {
													"id": 3762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3757,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3755,
														"src": "31923:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3760,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3752,
																"src": "31942:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 3758,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 3763,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3764,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3755,
														"src": "31962:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3765,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3752,
														"src": "31976:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3773,
												"nodeType": "IfStatement",
												"src": "31958:97:5",
												"trueBody": {
													"id": 3772,
													"nodeType": "Block",
													"src": "31983:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3769,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3752,
																		"src": "32038:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3767,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "32004:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3771,
															"nodeType": "RevertStatement",
															"src": "31997:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3750,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:5",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3775,
												"src": "31858:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3751,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:5"
									},
									"returnParameters": {
										"id": 3756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3755,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3775,
												"src": "31895:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 3754,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:5"
									},
									"scope": 3920,
									"src": "31841:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3800,
										"nodeType": "Block",
										"src": "32451:148:5",
										"statements": [
											{
												"expression": {
													"id": 3788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3783,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3781,
														"src": "32461:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3786,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3778,
																"src": "32480:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 3784,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 3789,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3790,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3781,
														"src": "32500:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3791,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3778,
														"src": "32514:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3799,
												"nodeType": "IfStatement",
												"src": "32496:97:5",
												"trueBody": {
													"id": 3798,
													"nodeType": "Block",
													"src": "32521:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3795,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3778,
																		"src": "32576:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3793,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "32542:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3797,
															"nodeType": "RevertStatement",
															"src": "32535:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3776,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:5",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3801,
												"src": "32396:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3777,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:5"
									},
									"returnParameters": {
										"id": 3782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3781,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3801,
												"src": "32433:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 3780,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:5"
									},
									"scope": 3920,
									"src": "32379:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3826,
										"nodeType": "Block",
										"src": "32989:148:5",
										"statements": [
											{
												"expression": {
													"id": 3814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3809,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3807,
														"src": "32999:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3812,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3804,
																"src": "33018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 3810,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3815,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3816,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3807,
														"src": "33038:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3817,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3804,
														"src": "33052:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3825,
												"nodeType": "IfStatement",
												"src": "33034:97:5",
												"trueBody": {
													"id": 3824,
													"nodeType": "Block",
													"src": "33059:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3821,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3804,
																		"src": "33114:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3819,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "33080:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3823,
															"nodeType": "RevertStatement",
															"src": "33073:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3802,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:5",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3827,
												"src": "32934:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3803,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:5"
									},
									"returnParameters": {
										"id": 3808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3807,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3827,
												"src": "32971:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3806,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:5"
									},
									"scope": 3920,
									"src": "32917:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3852,
										"nodeType": "Block",
										"src": "33527:148:5",
										"statements": [
											{
												"expression": {
													"id": 3840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3835,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3833,
														"src": "33537:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3838,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3830,
																"src": "33556:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 3836,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 3839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 3841,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3842,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3833,
														"src": "33576:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3843,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3830,
														"src": "33590:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3851,
												"nodeType": "IfStatement",
												"src": "33572:97:5",
												"trueBody": {
													"id": 3850,
													"nodeType": "Block",
													"src": "33597:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3847,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3830,
																		"src": "33652:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3845,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "33618:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3849,
															"nodeType": "RevertStatement",
															"src": "33611:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3828,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:5",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3853,
												"src": "33472:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3829,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:5"
									},
									"returnParameters": {
										"id": 3834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3833,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3853,
												"src": "33509:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 3832,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:5"
									},
									"scope": 3920,
									"src": "33455:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3878,
										"nodeType": "Block",
										"src": "34058:146:5",
										"statements": [
											{
												"expression": {
													"id": 3866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3861,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3859,
														"src": "34068:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3864,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3856,
																"src": "34086:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 3862,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:5",
																"typeDescriptions": {}
															}
														},
														"id": 3865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 3867,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3868,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3859,
														"src": "34106:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3869,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3856,
														"src": "34120:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3877,
												"nodeType": "IfStatement",
												"src": "34102:96:5",
												"trueBody": {
													"id": 3876,
													"nodeType": "Block",
													"src": "34127:71:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3873,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3856,
																		"src": "34181:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3871,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "34148:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3875,
															"nodeType": "RevertStatement",
															"src": "34141:46:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3854,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:5",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3879,
												"src": "34004:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3855,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:5"
									},
									"returnParameters": {
										"id": 3860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3859,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3879,
												"src": "34041:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 3858,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:5"
									},
									"scope": 3920,
									"src": "33988:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3908,
										"nodeType": "Block",
										"src": "34444:250:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3887,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3882,
														"src": "34557:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 3891,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 3890,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 3894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:5",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3888,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 3895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3902,
												"nodeType": "IfStatement",
												"src": "34553:105:5",
												"trueBody": {
													"id": 3901,
													"nodeType": "Block",
													"src": "34592:66:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3898,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3882,
																		"src": "34641:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3897,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "34613:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 3899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3900,
															"nodeType": "RevertStatement",
															"src": "34606:41:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3905,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3882,
															"src": "34681:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 3903,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 3906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3886,
												"id": 3907,
												"nodeType": "Return",
												"src": "34667:20:5"
											}
										]
									},
									"documentation": {
										"id": 3880,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:5",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 3909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3909,
												"src": "34398:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:5"
									},
									"returnParameters": {
										"id": 3886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3909,
												"src": "34436:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3884,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:5"
									},
									"scope": 3920,
									"src": "34380:314:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3918,
										"nodeType": "Block",
										"src": "34853:87:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:5",
													"nodeType": "YulBlock",
													"src": "34888:46:5",
													"statements": [
														{
															"nativeSrc": "34902:22:5",
															"nodeType": "YulAssignment",
															"src": "34902:22:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:5"
																		},
																		"nativeSrc": "34914:9:5",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:5"
																},
																"nativeSrc": "34907:17:5",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:5"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3912,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:5",
														"valueSize": 1
													},
													{
														"declaration": 3915,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 3917,
												"nodeType": "InlineAssembly",
												"src": "34863:71:5"
											}
										]
									},
									"documentation": {
										"id": 3910,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:5",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 3919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3912,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "34811:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:5"
									},
									"returnParameters": {
										"id": 3916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3915,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "34842:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:5"
									},
									"scope": 3920,
									"src": "34795:145:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3921,
							"src": "769:34173:5",
							"usedErrors": [
								2165,
								2170,
								2177,
								2182
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SafeCast": [
							3920
						],
						"SignedMath": [
							4064
						]
					},
					"id": 4065,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3922,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 3924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4065,
							"sourceUnit": 3921,
							"src": "135:40:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3923,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3920,
										"src": "143:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3925,
								"nodeType": "StructuredDocumentation",
								"src": "177:80:6",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 4064,
							"linearizedBaseContracts": [
								4064
							],
							"name": "SignedMath",
							"nameLocation": "266:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3954,
										"nodeType": "Block",
										"src": "746:215:6",
										"statements": [
											{
												"id": 3953,
												"nodeType": "UncheckedBlock",
												"src": "756:199:6",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3937,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3932,
																"src": "894:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 3940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3938,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3930,
																						"src": "900:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 3939,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3932,
																						"src": "904:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "900:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 3941,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "899:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 3946,
																							"name": "condition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3928,
																							"src": "932:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"expression": {
																							"id": 3944,
																							"name": "SafeCast",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3920,
																							"src": "916:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeCast_$3920_$",
																								"typeString": "type(library SafeCast)"
																							}
																						},
																						"id": 3945,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "925:6:6",
																						"memberName": "toUint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3919,
																						"src": "916:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																							"typeString": "function (bool) pure returns (uint256)"
																						}
																					},
																					"id": 3947,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "916:26:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "909:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 3942,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "909:6:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "909:34:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "899:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 3950,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "898:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "894:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 3936,
														"id": 3952,
														"nodeType": "Return",
														"src": "887:57:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3926,
										"nodeType": "StructuredDocumentation",
										"src": "283:374:6",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 3955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "671:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3928,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "684:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "679:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3930,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "702:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "695:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3929,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3932,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "712:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "705:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3931,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "705:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:36:6"
									},
									"returnParameters": {
										"id": 3936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "738:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3934,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:8:6"
									},
									"scope": 4064,
									"src": "662:299:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3973,
										"nodeType": "Block",
										"src": "1102:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3966,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3958,
																"src": "1127:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 3967,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3960,
																"src": "1131:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1127:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 3969,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3958,
															"src": "1134:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 3970,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3960,
															"src": "1137:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3965,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "1119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 3971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3964,
												"id": 3972,
												"nodeType": "Return",
												"src": "1112:27:6"
											}
										]
									},
									"documentation": {
										"id": 3956,
										"nodeType": "StructuredDocumentation",
										"src": "967:66:6",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1047:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3958,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 3974,
												"src": "1051:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3957,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3960,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1068:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 3974,
												"src": "1061:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3959,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:20:6"
									},
									"returnParameters": {
										"id": 3964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3974,
												"src": "1094:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3962,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:8:6"
									},
									"scope": 4064,
									"src": "1038:108:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3992,
										"nodeType": "Block",
										"src": "1288:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3985,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3977,
																"src": "1313:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 3986,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3979,
																"src": "1317:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1313:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 3988,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3977,
															"src": "1320:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 3989,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3979,
															"src": "1323:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3984,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "1305:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 3990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3983,
												"id": 3991,
												"nodeType": "Return",
												"src": "1298:27:6"
											}
										]
									},
									"documentation": {
										"id": 3975,
										"nodeType": "StructuredDocumentation",
										"src": "1152:67:6",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1233:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1244:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "1237:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3976,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1254:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "1247:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3978,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:20:6"
									},
									"returnParameters": {
										"id": 3983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "1280:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3981,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:8:6"
									},
									"scope": 4064,
									"src": "1224:108:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4036,
										"nodeType": "Block",
										"src": "1537:162:6",
										"statements": [
											{
												"assignments": [
													4004
												],
												"declarations": [
													{
														"constant": false,
														"id": 4004,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1606:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 4036,
														"src": "1599:8:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 4003,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1599:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4017,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4005,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3996,
																	"src": "1611:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 4006,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3998,
																	"src": "1615:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1611:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4008,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1610:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 4011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4009,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3996,
																				"src": "1622:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 4010,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3998,
																				"src": "1626:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1622:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 4012,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1621:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 4013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1632:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1621:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4015,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1620:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1610:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:35:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4018,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4004,
														"src": "1651:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 4023,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4004,
																						"src": "1671:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 4022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1663:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 4021,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1663:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 4024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1663:10:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 4025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1677:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "1663:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1656:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 4019,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1656:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1656:25:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 4030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4028,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3996,
																				"src": "1685:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 4029,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3998,
																				"src": "1689:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1685:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 4031,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1684:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1656:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4033,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1655:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1651:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4002,
												"id": 4035,
												"nodeType": "Return",
												"src": "1644:48:6"
											}
										]
									},
									"documentation": {
										"id": 3994,
										"nodeType": "StructuredDocumentation",
										"src": "1338:126:6",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 4037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "1478:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3996,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1493:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 4037,
												"src": "1486:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3995,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3998,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 4037,
												"src": "1496:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3997,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:20:6"
									},
									"returnParameters": {
										"id": 4002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4037,
												"src": "1529:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4000,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:8:6"
									},
									"scope": 4064,
									"src": "1469:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4062,
										"nodeType": "Block",
										"src": "1843:767:6",
										"statements": [
											{
												"id": 4061,
												"nodeType": "UncheckedBlock",
												"src": "1853:751:6",
												"statements": [
													{
														"assignments": [
															4046
														],
														"declarations": [
															{
																"constant": false,
																"id": 4046,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "2424:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 4061,
																"src": "2417:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 4045,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2417:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 4050,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 4049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4047,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4040,
																"src": "2431:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 4048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2436:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "2431:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2417:22:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 4058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 4055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 4053,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4040,
																					"src": "2576:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 4054,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4046,
																					"src": "2580:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "2576:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 4056,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2575:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 4057,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4046,
																		"src": "2588:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2575:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 4052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2567:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 4051,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2567:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 4059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2567:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4044,
														"id": 4060,
														"nodeType": "Return",
														"src": "2560:33:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4038,
										"nodeType": "StructuredDocumentation",
										"src": "1705:78:6",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 4063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1797:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4040,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1808:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 4063,
												"src": "1801:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4039,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:10:6"
									},
									"returnParameters": {
										"id": 4044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4063,
												"src": "1834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:9:6"
									},
									"scope": 4064,
									"src": "1788:822:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4065,
							"src": "258:2354:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:2504:6"
				},
				"id": 6
			},
			"EAS/Common.sol": {
				"ast": {
					"absolutePath": "EAS/Common.sol",
					"exportedSymbols": {
						"AccessDenied": [
							4074
						],
						"Attestation": [
							4114
						],
						"DeadlineExpired": [
							4076
						],
						"EMPTY_UID": [
							4069
						],
						"InvalidEAS": [
							4078
						],
						"InvalidLength": [
							4080
						],
						"InvalidSignature": [
							4082
						],
						"NO_EXPIRATION_TIME": [
							4072
						],
						"NotFound": [
							4084
						],
						"Signature": [
							4092
						],
						"uncheckedInc": [
							4130
						]
					},
					"id": 4131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4066,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"constant": true,
							"id": 4069,
							"mutability": "constant",
							"name": "EMPTY_UID",
							"nameLocation": "126:9:7",
							"nodeType": "VariableDeclaration",
							"scope": 4131,
							"src": "109:30:7",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							},
							"typeName": {
								"id": 4067,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "109:7:7",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 4068,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "138:1:7",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 4072,
							"mutability": "constant",
							"name": "NO_EXPIRATION_TIME",
							"nameLocation": "219:18:7",
							"nodeType": "VariableDeclaration",
							"scope": 4131,
							"src": "203:38:7",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint64",
								"typeString": "uint64"
							},
							"typeName": {
								"id": 4070,
								"name": "uint64",
								"nodeType": "ElementaryTypeName",
								"src": "203:6:7",
								"typeDescriptions": {
									"typeIdentifier": "t_uint64",
									"typeString": "uint64"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 4071,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "240:1:7",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"errorSelector": "4ca88867",
							"id": 4074,
							"name": "AccessDenied",
							"nameLocation": "250:12:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4073,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "262:2:7"
							},
							"src": "244:21:7"
						},
						{
							"errorSelector": "1ab7da6b",
							"id": 4076,
							"name": "DeadlineExpired",
							"nameLocation": "272:15:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4075,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "287:2:7"
							},
							"src": "266:24:7"
						},
						{
							"errorSelector": "83780ffe",
							"id": 4078,
							"name": "InvalidEAS",
							"nameLocation": "297:10:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4077,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "307:2:7"
							},
							"src": "291:19:7"
						},
						{
							"errorSelector": "947d5a84",
							"id": 4080,
							"name": "InvalidLength",
							"nameLocation": "317:13:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4079,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "330:2:7"
							},
							"src": "311:22:7"
						},
						{
							"errorSelector": "8baa579f",
							"id": 4082,
							"name": "InvalidSignature",
							"nameLocation": "340:16:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4081,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "356:2:7"
							},
							"src": "334:25:7"
						},
						{
							"errorSelector": "c5723b51",
							"id": 4084,
							"name": "NotFound",
							"nameLocation": "366:8:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4083,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "374:2:7"
							},
							"src": "360:17:7"
						},
						{
							"canonicalName": "Signature",
							"documentation": {
								"id": 4085,
								"nodeType": "StructuredDocumentation",
								"src": "379:56:7",
								"text": "@notice A struct representing ECDSA signature data."
							},
							"id": 4092,
							"members": [
								{
									"constant": false,
									"id": 4087,
									"mutability": "mutable",
									"name": "v",
									"nameLocation": "464:1:7",
									"nodeType": "VariableDeclaration",
									"scope": 4092,
									"src": "458:7:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 4086,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "458:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4089,
									"mutability": "mutable",
									"name": "r",
									"nameLocation": "499:1:7",
									"nodeType": "VariableDeclaration",
									"scope": 4092,
									"src": "491:9:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4088,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4091,
									"mutability": "mutable",
									"name": "s",
									"nameLocation": "550:1:7",
									"nodeType": "VariableDeclaration",
									"scope": 4092,
									"src": "542:9:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4090,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "542:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Signature",
							"nameLocation": "442:9:7",
							"nodeType": "StructDefinition",
							"scope": 4131,
							"src": "435:142:7",
							"visibility": "public"
						},
						{
							"canonicalName": "Attestation",
							"documentation": {
								"id": 4093,
								"nodeType": "StructuredDocumentation",
								"src": "579:56:7",
								"text": "@notice A struct representing a single attestation."
							},
							"id": 4114,
							"members": [
								{
									"constant": false,
									"id": 4095,
									"mutability": "mutable",
									"name": "uid",
									"nameLocation": "668:3:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "660:11:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4094,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "660:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4097,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "728:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "720:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4096,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "720:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4099,
									"mutability": "mutable",
									"name": "time",
									"nameLocation": "787:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "780:11:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4098,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "780:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4101,
									"mutability": "mutable",
									"name": "expirationTime",
									"nameLocation": "867:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "860:21:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4100,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "860:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4103,
									"mutability": "mutable",
									"name": "revocationTime",
									"nameLocation": "953:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "946:21:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4102,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "946:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4105,
									"mutability": "mutable",
									"name": "refUID",
									"nameLocation": "1044:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "1036:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4104,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1036:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4107,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "1103:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "1095:17:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4106,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1095:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4109,
									"mutability": "mutable",
									"name": "attester",
									"nameLocation": "1163:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "1155:16:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4108,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1155:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4111,
									"mutability": "mutable",
									"name": "revocable",
									"nameLocation": "1225:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "1220:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4110,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1220:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4113,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "1287:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 4114,
									"src": "1281:10:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 4112,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1281:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Attestation",
							"nameLocation": "642:11:7",
							"nodeType": "StructDefinition",
							"scope": 4131,
							"src": "635:687:7",
							"visibility": "public"
						},
						{
							"body": {
								"id": 4129,
								"nodeType": "Block",
								"src": "1455:44:7",
								"statements": [
									{
										"id": 4128,
										"nodeType": "UncheckedBlock",
										"src": "1461:36:7",
										"statements": [
											{
												"expression": {
													"id": 4126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4122,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4120,
														"src": "1481:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4123,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4117,
															"src": "1485:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 4124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1489:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1485:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1481:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4127,
												"nodeType": "ExpressionStatement",
												"src": "1481:9:7"
											}
										]
									}
								]
							},
							"documentation": {
								"id": 4115,
								"nodeType": "StructuredDocumentation",
								"src": "1324:73:7",
								"text": "@notice A helper function to work with unchecked iterators in loops."
							},
							"id": 4130,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "uncheckedInc",
							"nameLocation": "1406:12:7",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 4118,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 4117,
										"mutability": "mutable",
										"name": "i",
										"nameLocation": "1427:1:7",
										"nodeType": "VariableDeclaration",
										"scope": 4130,
										"src": "1419:9:7",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 4116,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1419:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1418:11:7"
							},
							"returnParameters": {
								"id": 4121,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 4120,
										"mutability": "mutable",
										"name": "j",
										"nameLocation": "1452:1:7",
										"nodeType": "VariableDeclaration",
										"scope": 4130,
										"src": "1444:9:7",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 4119,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1444:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1443:11:7"
							},
							"scope": 4131,
							"src": "1397:102:7",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "33:1466:7"
				},
				"id": 7
			},
			"EAS/IEAS.sol": {
				"ast": {
					"absolutePath": "EAS/IEAS.sol",
					"exportedSymbols": {
						"Attestation": [
							4114
						],
						"AttestationRequest": [
							4160
						],
						"AttestationRequestData": [
							4153
						],
						"DelegatedAttestationRequest": [
							4174
						],
						"DelegatedRevocationRequest": [
							4225
						],
						"IEAS": [
							4437
						],
						"ISchemaRegistry": [
							4490
						],
						"ISemver": [
							4560
						],
						"MultiAttestationRequest": [
							4182
						],
						"MultiDelegatedAttestationRequest": [
							4198
						],
						"MultiDelegatedRevocationRequest": [
							4249
						],
						"MultiRevocationRequest": [
							4233
						],
						"RevocationRequest": [
							4211
						],
						"RevocationRequestData": [
							4204
						],
						"Signature": [
							4092
						]
					},
					"id": 4438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "EAS/ISchemaRegistry.sol",
							"file": "./ISchemaRegistry.sol",
							"id": 4134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4438,
							"sourceUnit": 4491,
							"src": "58:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4133,
										"name": "ISchemaRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4490,
										"src": "67:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/ISemver.sol",
							"file": "./ISemver.sol",
							"id": 4136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4438,
							"sourceUnit": 4561,
							"src": "115:40:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4135,
										"name": "ISemver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4560,
										"src": "124:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/Common.sol",
							"file": "./Common.sol",
							"id": 4139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4438,
							"sourceUnit": 4131,
							"src": "156:54:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4137,
										"name": "Attestation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4114,
										"src": "165:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 4138,
										"name": "Signature",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4092,
										"src": "178:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "AttestationRequestData",
							"documentation": {
								"id": 4140,
								"nodeType": "StructuredDocumentation",
								"src": "212:76:8",
								"text": "@notice A struct representing the arguments of the attestation request."
							},
							"id": 4153,
							"members": [
								{
									"constant": false,
									"id": 4142,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "332:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 4153,
									"src": "324:17:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4141,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4144,
									"mutability": "mutable",
									"name": "expirationTime",
									"nameLocation": "391:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 4153,
									"src": "384:21:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4143,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "384:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4146,
									"mutability": "mutable",
									"name": "revocable",
									"nameLocation": "475:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 4153,
									"src": "470:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4145,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "470:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4148,
									"mutability": "mutable",
									"name": "refUID",
									"nameLocation": "539:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4153,
									"src": "531:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4147,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "531:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4150,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "596:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4153,
									"src": "590:10:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 4149,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "590:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4152,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "642:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 4153,
									"src": "634:13:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "634:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "AttestationRequestData",
							"nameLocation": "295:22:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "288:466:8",
							"visibility": "public"
						},
						{
							"canonicalName": "AttestationRequest",
							"documentation": {
								"id": 4154,
								"nodeType": "StructuredDocumentation",
								"src": "756:81:8",
								"text": "@notice A struct representing the full arguments of the attestation request."
							},
							"id": 4160,
							"members": [
								{
									"constant": false,
									"id": 4156,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "877:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4160,
									"src": "869:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4155,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "869:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4159,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "952:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4160,
									"src": "929:27:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AttestationRequestData_$4153_storage_ptr",
										"typeString": "struct AttestationRequestData"
									},
									"typeName": {
										"id": 4158,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4157,
											"name": "AttestationRequestData",
											"nameLocations": [
												"929:22:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4153,
											"src": "929:22:8"
										},
										"referencedDeclaration": 4153,
										"src": "929:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AttestationRequestData_$4153_storage_ptr",
											"typeString": "struct AttestationRequestData"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "AttestationRequest",
							"nameLocation": "844:18:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "837:167:8",
							"visibility": "public"
						},
						{
							"canonicalName": "DelegatedAttestationRequest",
							"documentation": {
								"id": 4161,
								"nodeType": "StructuredDocumentation",
								"src": "1006:96:8",
								"text": "@notice A struct representing the full arguments of the full delegated attestation request."
							},
							"id": 4174,
							"members": [
								{
									"constant": false,
									"id": 4163,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "1151:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4174,
									"src": "1143:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4162,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1143:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4166,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "1226:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4174,
									"src": "1203:27:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AttestationRequestData_$4153_storage_ptr",
										"typeString": "struct AttestationRequestData"
									},
									"typeName": {
										"id": 4165,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4164,
											"name": "AttestationRequestData",
											"nameLocations": [
												"1203:22:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4153,
											"src": "1203:22:8"
										},
										"referencedDeclaration": 4153,
										"src": "1203:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AttestationRequestData_$4153_storage_ptr",
											"typeString": "struct AttestationRequestData"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4169,
									"mutability": "mutable",
									"name": "signature",
									"nameLocation": "1291:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 4174,
									"src": "1281:19:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Signature_$4092_storage_ptr",
										"typeString": "struct Signature"
									},
									"typeName": {
										"id": 4168,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4167,
											"name": "Signature",
											"nameLocations": [
												"1281:9:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4092,
											"src": "1281:9:8"
										},
										"referencedDeclaration": 4092,
										"src": "1281:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Signature_$4092_storage_ptr",
											"typeString": "struct Signature"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4171,
									"mutability": "mutable",
									"name": "attester",
									"nameLocation": "1343:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 4174,
									"src": "1335:16:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4170,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4173,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "1390:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 4174,
									"src": "1383:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4172,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1383:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "DelegatedAttestationRequest",
							"nameLocation": "1109:27:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "1102:341:8",
							"visibility": "public"
						},
						{
							"canonicalName": "MultiAttestationRequest",
							"documentation": {
								"id": 4175,
								"nodeType": "StructuredDocumentation",
								"src": "1445:87:8",
								"text": "@notice A struct representing the full arguments of the multi attestation request."
							},
							"id": 4182,
							"members": [
								{
									"constant": false,
									"id": 4177,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "1577:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4182,
									"src": "1569:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4176,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1569:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4181,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "1654:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4182,
									"src": "1629:29:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$4153_storage_$dyn_storage_ptr",
										"typeString": "struct AttestationRequestData[]"
									},
									"typeName": {
										"baseType": {
											"id": 4179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4178,
												"name": "AttestationRequestData",
												"nameLocations": [
													"1629:22:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4153,
												"src": "1629:22:8"
											},
											"referencedDeclaration": 4153,
											"src": "1629:22:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AttestationRequestData_$4153_storage_ptr",
												"typeString": "struct AttestationRequestData"
											}
										},
										"id": 4180,
										"nodeType": "ArrayTypeName",
										"src": "1629:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$4153_storage_$dyn_storage_ptr",
											"typeString": "struct AttestationRequestData[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MultiAttestationRequest",
							"nameLocation": "1539:23:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "1532:174:8",
							"visibility": "public"
						},
						{
							"canonicalName": "MultiDelegatedAttestationRequest",
							"documentation": {
								"id": 4183,
								"nodeType": "StructuredDocumentation",
								"src": "1708:97:8",
								"text": "@notice A struct representing the full arguments of the delegated multi attestation request."
							},
							"id": 4198,
							"members": [
								{
									"constant": false,
									"id": 4185,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "1859:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4198,
									"src": "1851:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4184,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1851:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4189,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "1936:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4198,
									"src": "1911:29:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$4153_storage_$dyn_storage_ptr",
										"typeString": "struct AttestationRequestData[]"
									},
									"typeName": {
										"baseType": {
											"id": 4187,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4186,
												"name": "AttestationRequestData",
												"nameLocations": [
													"1911:22:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4153,
												"src": "1911:22:8"
											},
											"referencedDeclaration": 4153,
											"src": "1911:22:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AttestationRequestData_$4153_storage_ptr",
												"typeString": "struct AttestationRequestData"
											}
										},
										"id": 4188,
										"nodeType": "ArrayTypeName",
										"src": "1911:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$4153_storage_$dyn_storage_ptr",
											"typeString": "struct AttestationRequestData[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4193,
									"mutability": "mutable",
									"name": "signatures",
									"nameLocation": "2004:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 4198,
									"src": "1992:22:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Signature_$4092_storage_$dyn_storage_ptr",
										"typeString": "struct Signature[]"
									},
									"typeName": {
										"baseType": {
											"id": 4191,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4190,
												"name": "Signature",
												"nameLocations": [
													"1992:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4092,
												"src": "1992:9:8"
											},
											"referencedDeclaration": 4092,
											"src": "1992:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Signature_$4092_storage_ptr",
												"typeString": "struct Signature"
											}
										},
										"id": 4192,
										"nodeType": "ArrayTypeName",
										"src": "1992:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Signature_$4092_storage_$dyn_storage_ptr",
											"typeString": "struct Signature[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4195,
									"mutability": "mutable",
									"name": "attester",
									"nameLocation": "2139:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 4198,
									"src": "2131:16:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4194,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2131:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4197,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "2186:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 4198,
									"src": "2179:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4196,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2179:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MultiDelegatedAttestationRequest",
							"nameLocation": "1812:32:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "1805:434:8",
							"visibility": "public"
						},
						{
							"canonicalName": "RevocationRequestData",
							"documentation": {
								"id": 4199,
								"nodeType": "StructuredDocumentation",
								"src": "2241:75:8",
								"text": "@notice A struct representing the arguments of the revocation request."
							},
							"id": 4204,
							"members": [
								{
									"constant": false,
									"id": 4201,
									"mutability": "mutable",
									"name": "uid",
									"nameLocation": "2359:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 4204,
									"src": "2351:11:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4200,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2351:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4203,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "2417:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 4204,
									"src": "2409:13:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2409:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RevocationRequestData",
							"nameLocation": "2323:21:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "2316:213:8",
							"visibility": "public"
						},
						{
							"canonicalName": "RevocationRequest",
							"documentation": {
								"id": 4205,
								"nodeType": "StructuredDocumentation",
								"src": "2531:80:8",
								"text": "@notice A struct representing the full arguments of the revocation request."
							},
							"id": 4211,
							"members": [
								{
									"constant": false,
									"id": 4207,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "2650:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4211,
									"src": "2642:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2642:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4210,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "2724:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4211,
									"src": "2702:26:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RevocationRequestData_$4204_storage_ptr",
										"typeString": "struct RevocationRequestData"
									},
									"typeName": {
										"id": 4209,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4208,
											"name": "RevocationRequestData",
											"nameLocations": [
												"2702:21:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4204,
											"src": "2702:21:8"
										},
										"referencedDeclaration": 4204,
										"src": "2702:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RevocationRequestData_$4204_storage_ptr",
											"typeString": "struct RevocationRequestData"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RevocationRequest",
							"nameLocation": "2618:17:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "2611:164:8",
							"visibility": "public"
						},
						{
							"canonicalName": "DelegatedRevocationRequest",
							"documentation": {
								"id": 4212,
								"nodeType": "StructuredDocumentation",
								"src": "2777:90:8",
								"text": "@notice A struct representing the arguments of the full delegated revocation request."
							},
							"id": 4225,
							"members": [
								{
									"constant": false,
									"id": 4214,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "2915:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4225,
									"src": "2907:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4213,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2907:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4217,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "2989:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4225,
									"src": "2967:26:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RevocationRequestData_$4204_storage_ptr",
										"typeString": "struct RevocationRequestData"
									},
									"typeName": {
										"id": 4216,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4215,
											"name": "RevocationRequestData",
											"nameLocations": [
												"2967:21:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4204,
											"src": "2967:21:8"
										},
										"referencedDeclaration": 4204,
										"src": "2967:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RevocationRequestData_$4204_storage_ptr",
											"typeString": "struct RevocationRequestData"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4220,
									"mutability": "mutable",
									"name": "signature",
									"nameLocation": "3053:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 4225,
									"src": "3043:19:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Signature_$4092_storage_ptr",
										"typeString": "struct Signature"
									},
									"typeName": {
										"id": 4219,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4218,
											"name": "Signature",
											"nameLocations": [
												"3043:9:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4092,
											"src": "3043:9:8"
										},
										"referencedDeclaration": 4092,
										"src": "3043:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Signature_$4092_storage_ptr",
											"typeString": "struct Signature"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4222,
									"mutability": "mutable",
									"name": "revoker",
									"nameLocation": "3105:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 4225,
									"src": "3097:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4221,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3097:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4224,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "3150:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 4225,
									"src": "3143:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4223,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "3143:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "DelegatedRevocationRequest",
							"nameLocation": "2874:26:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "2867:336:8",
							"visibility": "public"
						},
						{
							"canonicalName": "MultiRevocationRequest",
							"documentation": {
								"id": 4226,
								"nodeType": "StructuredDocumentation",
								"src": "3205:86:8",
								"text": "@notice A struct representing the full arguments of the multi revocation request."
							},
							"id": 4233,
							"members": [
								{
									"constant": false,
									"id": 4228,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "3335:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4233,
									"src": "3327:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4227,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3327:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4232,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "3411:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4233,
									"src": "3387:28:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$4204_storage_$dyn_storage_ptr",
										"typeString": "struct RevocationRequestData[]"
									},
									"typeName": {
										"baseType": {
											"id": 4230,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4229,
												"name": "RevocationRequestData",
												"nameLocations": [
													"3387:21:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4204,
												"src": "3387:21:8"
											},
											"referencedDeclaration": 4204,
											"src": "3387:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RevocationRequestData_$4204_storage_ptr",
												"typeString": "struct RevocationRequestData"
											}
										},
										"id": 4231,
										"nodeType": "ArrayTypeName",
										"src": "3387:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$4204_storage_$dyn_storage_ptr",
											"typeString": "struct RevocationRequestData[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MultiRevocationRequest",
							"nameLocation": "3298:22:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "3291:171:8",
							"visibility": "public"
						},
						{
							"canonicalName": "MultiDelegatedRevocationRequest",
							"documentation": {
								"id": 4234,
								"nodeType": "StructuredDocumentation",
								"src": "3464:96:8",
								"text": "@notice A struct representing the full arguments of the delegated multi revocation request."
							},
							"id": 4249,
							"members": [
								{
									"constant": false,
									"id": 4236,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "3613:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 4249,
									"src": "3605:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4235,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3605:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4240,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "3689:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 4249,
									"src": "3665:28:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$4204_storage_$dyn_storage_ptr",
										"typeString": "struct RevocationRequestData[]"
									},
									"typeName": {
										"baseType": {
											"id": 4238,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4237,
												"name": "RevocationRequestData",
												"nameLocations": [
													"3665:21:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4204,
												"src": "3665:21:8"
											},
											"referencedDeclaration": 4204,
											"src": "3665:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RevocationRequestData_$4204_storage_ptr",
												"typeString": "struct RevocationRequestData"
											}
										},
										"id": 4239,
										"nodeType": "ArrayTypeName",
										"src": "3665:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$4204_storage_$dyn_storage_ptr",
											"typeString": "struct RevocationRequestData[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4244,
									"mutability": "mutable",
									"name": "signatures",
									"nameLocation": "3756:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 4249,
									"src": "3744:22:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Signature_$4092_storage_$dyn_storage_ptr",
										"typeString": "struct Signature[]"
									},
									"typeName": {
										"baseType": {
											"id": 4242,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4241,
												"name": "Signature",
												"nameLocations": [
													"3744:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4092,
												"src": "3744:9:8"
											},
											"referencedDeclaration": 4092,
											"src": "3744:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Signature_$4092_storage_ptr",
												"typeString": "struct Signature"
											}
										},
										"id": 4243,
										"nodeType": "ArrayTypeName",
										"src": "3744:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Signature_$4092_storage_$dyn_storage_ptr",
											"typeString": "struct Signature[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4246,
									"mutability": "mutable",
									"name": "revoker",
									"nameLocation": "3891:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 4249,
									"src": "3883:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4245,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3883:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4248,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "3936:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 4249,
									"src": "3929:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 4247,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "3929:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MultiDelegatedRevocationRequest",
							"nameLocation": "3567:31:8",
							"nodeType": "StructDefinition",
							"scope": 4438,
							"src": "3560:429:8",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4251,
										"name": "ISemver",
										"nameLocations": [
											"4083:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4560,
										"src": "4083:7:8"
									},
									"id": 4252,
									"nodeType": "InheritanceSpecifier",
									"src": "4083:7:8"
								}
							],
							"canonicalName": "IEAS",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4250,
								"nodeType": "StructuredDocumentation",
								"src": "3991:74:8",
								"text": "@title IEAS\n @notice EAS - Ethereum Attestation Service interface."
							},
							"fullyImplemented": false,
							"id": 4437,
							"linearizedBaseContracts": [
								4437,
								4560
							],
							"name": "IEAS",
							"nameLocation": "4075:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 4253,
										"nodeType": "StructuredDocumentation",
										"src": "4097:259:8",
										"text": "@notice Emitted when an attestation has been made.\n @param recipient The recipient of the attestation.\n @param attester The attesting account.\n @param uid The UID of the new attestation.\n @param schemaUID The UID of the schema."
									},
									"eventSelector": "8bf46bf4cfd674fa735a3d63ec1c9ad4153f033c290341f3a588b75685141b35",
									"id": 4263,
									"name": "Attested",
									"nameLocation": "4367:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4255,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4392:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4263,
												"src": "4376:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4376:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4257,
												"indexed": true,
												"mutability": "mutable",
												"name": "attester",
												"nameLocation": "4419:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 4263,
												"src": "4403:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4259,
												"indexed": false,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "4437:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 4263,
												"src": "4429:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4261,
												"indexed": true,
												"mutability": "mutable",
												"name": "schemaUID",
												"nameLocation": "4458:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4263,
												"src": "4442:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4375:93:8"
									},
									"src": "4361:108:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4264,
										"nodeType": "StructuredDocumentation",
										"src": "4475:263:8",
										"text": "@notice Emitted when an attestation has been revoked.\n @param recipient The recipient of the attestation.\n @param attester The attesting account.\n @param schemaUID The UID of the schema.\n @param uid The UID the revoked attestation."
									},
									"eventSelector": "f930a6e2523c9cc298691873087a740550b8fc85a0680830414c148ed927f615",
									"id": 4274,
									"name": "Revoked",
									"nameLocation": "4749:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4266,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4773:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4274,
												"src": "4757:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4757:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4268,
												"indexed": true,
												"mutability": "mutable",
												"name": "attester",
												"nameLocation": "4800:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 4274,
												"src": "4784:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4270,
												"indexed": false,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "4818:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 4274,
												"src": "4810:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4272,
												"indexed": true,
												"mutability": "mutable",
												"name": "schemaUID",
												"nameLocation": "4839:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4274,
												"src": "4823:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4271,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4756:93:8"
									},
									"src": "4743:107:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4275,
										"nodeType": "StructuredDocumentation",
										"src": "4856:123:8",
										"text": "@notice Emitted when a data has been timestamped.\n @param data The data.\n @param timestamp The timestamp."
									},
									"eventSelector": "5aafceeb1c7ad58e4a84898bdee37c02c0fc46e7d24e6b60e8209449f183459f",
									"id": 4281,
									"name": "Timestamped",
									"nameLocation": "4990:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4277,
												"indexed": true,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5018:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4281,
												"src": "5002:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4279,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5039:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4281,
												"src": "5024:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4278,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5024:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:48:8"
									},
									"src": "4984:66:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4282,
										"nodeType": "StructuredDocumentation",
										"src": "5056:170:8",
										"text": "@notice Emitted when a data has been revoked.\n @param revoker The address of the revoker.\n @param data The data.\n @param timestamp The timestamp."
									},
									"eventSelector": "92a1f7a41a7c585a8b09e25b195e225b1d43248daca46b0faf9e0792777a2229",
									"id": 4290,
									"name": "RevokedOffchain",
									"nameLocation": "5237:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4284,
												"indexed": true,
												"mutability": "mutable",
												"name": "revoker",
												"nameLocation": "5269:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 4290,
												"src": "5253:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4286,
												"indexed": true,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5294:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4290,
												"src": "5278:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4288,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5315:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4290,
												"src": "5300:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4287,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5300:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:73:8"
									},
									"src": "5231:95:8"
								},
								{
									"documentation": {
										"id": 4291,
										"nodeType": "StructuredDocumentation",
										"src": "5332:121:8",
										"text": "@notice Returns the address of the global schema registry.\n @return The address of the global schema registry."
									},
									"functionSelector": "f10b5cc8",
									"id": 4297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSchemaRegistry",
									"nameLocation": "5467:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5484:2:8"
									},
									"returnParameters": {
										"id": 4296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4297,
												"src": "5510:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISchemaRegistry_$4490",
													"typeString": "contract ISchemaRegistry"
												},
												"typeName": {
													"id": 4294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4293,
														"name": "ISchemaRegistry",
														"nameLocations": [
															"5510:15:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4490,
														"src": "5510:15:8"
													},
													"referencedDeclaration": 4490,
													"src": "5510:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISchemaRegistry_$4490",
														"typeString": "contract ISchemaRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5509:17:8"
									},
									"scope": 4437,
									"src": "5458:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4298,
										"nodeType": "StructuredDocumentation",
										"src": "5533:665:8",
										"text": "@notice Attests to a specific schema.\n @param request The arguments of the attestation request.\n @return The UID of the new attestation.\n Example:\n     attest({\n         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",\n         data: {\n             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",\n             expirationTime: 0,\n             revocable: true,\n             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n             data: \"0xF00D\",\n             value: 0\n         }\n     })"
									},
									"functionSelector": "f17325e7",
									"id": 4306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attest",
									"nameLocation": "6212:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4301,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "6247:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 4306,
												"src": "6219:35:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AttestationRequest_$4160_calldata_ptr",
													"typeString": "struct AttestationRequest"
												},
												"typeName": {
													"id": 4300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4299,
														"name": "AttestationRequest",
														"nameLocations": [
															"6219:18:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4160,
														"src": "6219:18:8"
													},
													"referencedDeclaration": 4160,
													"src": "6219:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AttestationRequest_$4160_storage_ptr",
														"typeString": "struct AttestationRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6218:37:8"
									},
									"returnParameters": {
										"id": 4305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4306,
												"src": "6282:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6282:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6281:9:8"
									},
									"scope": 4437,
									"src": "6203:88:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4307,
										"nodeType": "StructuredDocumentation",
										"src": "6297:1004:8",
										"text": "@notice Attests to a specific schema via the provided ECDSA signature.\n @param delegatedRequest The arguments of the delegated attestation request.\n @return The UID of the new attestation.\n Example:\n     attestByDelegation({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 0\n         },\n         signature: {\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',\n         deadline: 1673891048\n     })"
									},
									"functionSelector": "3c042715",
									"id": 4315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attestByDelegation",
									"nameLocation": "7315:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4310,
												"mutability": "mutable",
												"name": "delegatedRequest",
												"nameLocation": "7380:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "7343:53:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelegatedAttestationRequest_$4174_calldata_ptr",
													"typeString": "struct DelegatedAttestationRequest"
												},
												"typeName": {
													"id": 4309,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4308,
														"name": "DelegatedAttestationRequest",
														"nameLocations": [
															"7343:27:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4174,
														"src": "7343:27:8"
													},
													"referencedDeclaration": 4174,
													"src": "7343:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelegatedAttestationRequest_$4174_storage_ptr",
														"typeString": "struct DelegatedAttestationRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7333:69:8"
									},
									"returnParameters": {
										"id": 4314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "7429:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7428:9:8"
									},
									"scope": 4437,
									"src": "7306:132:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4316,
										"nodeType": "StructuredDocumentation",
										"src": "7444:1656:8",
										"text": "@notice Attests to multiple schemas.\n @param multiRequests The arguments of the multi attestation requests. The requests should be grouped by distinct\n     schema ids to benefit from the best batching optimization.\n @return The UIDs of the new attestations.\n Example:\n     multiAttest([{\n         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',\n         data: [{\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 1000\n         },\n         {\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 0,\n             revocable: false,\n             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',\n             data: '0x00',\n             value: 0\n         }],\n     },\n     {\n         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n         data: [{\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 0,\n             revocable: true,\n             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',\n             data: '0x12345678',\n             value: 0\n         },\n     }])"
									},
									"functionSelector": "44adc90e",
									"id": 4326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiAttest",
									"nameLocation": "9114:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4320,
												"mutability": "mutable",
												"name": "multiRequests",
												"nameLocation": "9161:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 4326,
												"src": "9126:48:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MultiAttestationRequest_$4182_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct MultiAttestationRequest[]"
												},
												"typeName": {
													"baseType": {
														"id": 4318,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4317,
															"name": "MultiAttestationRequest",
															"nameLocations": [
																"9126:23:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4182,
															"src": "9126:23:8"
														},
														"referencedDeclaration": 4182,
														"src": "9126:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MultiAttestationRequest_$4182_storage_ptr",
															"typeString": "struct MultiAttestationRequest"
														}
													},
													"id": 4319,
													"nodeType": "ArrayTypeName",
													"src": "9126:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MultiAttestationRequest_$4182_storage_$dyn_storage_ptr",
														"typeString": "struct MultiAttestationRequest[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:50:8"
									},
									"returnParameters": {
										"id": 4325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4326,
												"src": "9202:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 4322,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "9202:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 4323,
													"nodeType": "ArrayTypeName",
													"src": "9202:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9201:18:8"
									},
									"scope": 4437,
									"src": "9105:115:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4327,
										"nodeType": "StructuredDocumentation",
										"src": "9226:1642:8",
										"text": "@notice Attests to multiple schemas using via provided ECDSA signatures.\n @param multiDelegatedRequests The arguments of the delegated multi attestation requests. The requests should be\n     grouped by distinct schema ids to benefit from the best batching optimization.\n @return The UIDs of the new attestations.\n Example:\n     multiAttestByDelegation([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 0\n         },\n         {\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 0,\n             revocable: false,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x00',\n             value: 0\n         }],\n         signatures: [{\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         {\n             v: 28,\n             r: '0x487s...67bb',\n             s: '0x12ad...2366'\n         }],\n         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',\n         deadline: 1673891048\n     }])"
									},
									"functionSelector": "95411525",
									"id": 4337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiAttestByDelegation",
									"nameLocation": "10882:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4331,
												"mutability": "mutable",
												"name": "multiDelegatedRequests",
												"nameLocation": "10959:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 4337,
												"src": "10915:66:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MultiDelegatedAttestationRequest_$4198_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct MultiDelegatedAttestationRequest[]"
												},
												"typeName": {
													"baseType": {
														"id": 4329,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4328,
															"name": "MultiDelegatedAttestationRequest",
															"nameLocations": [
																"10915:32:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4198,
															"src": "10915:32:8"
														},
														"referencedDeclaration": 4198,
														"src": "10915:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MultiDelegatedAttestationRequest_$4198_storage_ptr",
															"typeString": "struct MultiDelegatedAttestationRequest"
														}
													},
													"id": 4330,
													"nodeType": "ArrayTypeName",
													"src": "10915:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MultiDelegatedAttestationRequest_$4198_storage_$dyn_storage_ptr",
														"typeString": "struct MultiDelegatedAttestationRequest[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10905:82:8"
									},
									"returnParameters": {
										"id": 4336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4337,
												"src": "11014:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 4333,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "11014:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 4334,
													"nodeType": "ArrayTypeName",
													"src": "11014:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11013:18:8"
									},
									"scope": 4437,
									"src": "10873:159:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4338,
										"nodeType": "StructuredDocumentation",
										"src": "11038:450:8",
										"text": "@notice Revokes an existing attestation to a specific schema.\n @param request The arguments of the revocation request.\n Example:\n     revoke({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',\n             value: 0\n         }\n     })"
									},
									"functionSelector": "46926267",
									"id": 4344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "11502:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4341,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "11536:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 4344,
												"src": "11509:34:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RevocationRequest_$4211_calldata_ptr",
													"typeString": "struct RevocationRequest"
												},
												"typeName": {
													"id": 4340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4339,
														"name": "RevocationRequest",
														"nameLocations": [
															"11509:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4211,
														"src": "11509:17:8"
													},
													"referencedDeclaration": 4211,
													"src": "11509:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RevocationRequest_$4211_storage_ptr",
														"typeString": "struct RevocationRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11508:36:8"
									},
									"returnParameters": {
										"id": 4343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11561:0:8"
									},
									"scope": 4437,
									"src": "11493:69:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4345,
										"nodeType": "StructuredDocumentation",
										"src": "11568:777:8",
										"text": "@notice Revokes an existing attestation to a specific schema via the provided ECDSA signature.\n @param delegatedRequest The arguments of the delegated revocation request.\n Example:\n     revokeByDelegation({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',\n             value: 0\n         },\n         signature: {\n             v: 27,\n             r: '0xb593...7142',\n             s: '0x0f5b...2cce'\n         },\n         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n         deadline: 1673891048\n     })"
									},
									"functionSelector": "a6d4dbc7",
									"id": 4351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeByDelegation",
									"nameLocation": "12359:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4348,
												"mutability": "mutable",
												"name": "delegatedRequest",
												"nameLocation": "12414:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 4351,
												"src": "12378:52:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelegatedRevocationRequest_$4225_calldata_ptr",
													"typeString": "struct DelegatedRevocationRequest"
												},
												"typeName": {
													"id": 4347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4346,
														"name": "DelegatedRevocationRequest",
														"nameLocations": [
															"12378:26:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4225,
														"src": "12378:26:8"
													},
													"referencedDeclaration": 4225,
													"src": "12378:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelegatedRevocationRequest_$4225_storage_ptr",
														"typeString": "struct DelegatedRevocationRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12377:54:8"
									},
									"returnParameters": {
										"id": 4350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12448:0:8"
									},
									"scope": 4437,
									"src": "12350:99:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4352,
										"nodeType": "StructuredDocumentation",
										"src": "12455:1039:8",
										"text": "@notice Revokes existing attestations to multiple schemas.\n @param multiRequests The arguments of the multi revocation requests. The requests should be grouped by distinct\n     schema ids to benefit from the best batching optimization.\n Example:\n     multiRevoke([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n             value: 1000\n         },\n         {\n             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n             value: 0\n         }],\n     },\n     {\n         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n         data: [{\n             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',\n             value: 0\n         },\n     }])"
									},
									"functionSelector": "4cb7e9e5",
									"id": 4359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiRevoke",
									"nameLocation": "13508:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4356,
												"mutability": "mutable",
												"name": "multiRequests",
												"nameLocation": "13554:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 4359,
												"src": "13520:47:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MultiRevocationRequest_$4233_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct MultiRevocationRequest[]"
												},
												"typeName": {
													"baseType": {
														"id": 4354,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4353,
															"name": "MultiRevocationRequest",
															"nameLocations": [
																"13520:22:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4233,
															"src": "13520:22:8"
														},
														"referencedDeclaration": 4233,
														"src": "13520:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MultiRevocationRequest_$4233_storage_ptr",
															"typeString": "struct MultiRevocationRequest"
														}
													},
													"id": 4355,
													"nodeType": "ArrayTypeName",
													"src": "13520:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MultiRevocationRequest_$4233_storage_$dyn_storage_ptr",
														"typeString": "struct MultiRevocationRequest[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13519:49:8"
									},
									"returnParameters": {
										"id": 4358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13585:0:8"
									},
									"scope": 4437,
									"src": "13499:87:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4360,
										"nodeType": "StructuredDocumentation",
										"src": "13592:1229:8",
										"text": "@notice Revokes existing attestations to multiple schemas via provided ECDSA signatures.\n @param multiDelegatedRequests The arguments of the delegated multi revocation attestation requests. The requests\n     should be grouped by distinct schema ids to benefit from the best batching optimization.\n Example:\n     multiRevokeByDelegation([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n             value: 1000\n         },\n         {\n             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n             value: 0\n         }],\n         signatures: [{\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         {\n             v: 28,\n             r: '0x487s...67bb',\n             s: '0x12ad...2366'\n         }],\n         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n         deadline: 1673891048\n     }])"
									},
									"functionSelector": "0eabf660",
									"id": 4367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiRevokeByDelegation",
									"nameLocation": "14835:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4364,
												"mutability": "mutable",
												"name": "multiDelegatedRequests",
												"nameLocation": "14911:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 4367,
												"src": "14868:65:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MultiDelegatedRevocationRequest_$4249_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct MultiDelegatedRevocationRequest[]"
												},
												"typeName": {
													"baseType": {
														"id": 4362,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4361,
															"name": "MultiDelegatedRevocationRequest",
															"nameLocations": [
																"14868:31:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4249,
															"src": "14868:31:8"
														},
														"referencedDeclaration": 4249,
														"src": "14868:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MultiDelegatedRevocationRequest_$4249_storage_ptr",
															"typeString": "struct MultiDelegatedRevocationRequest"
														}
													},
													"id": 4363,
													"nodeType": "ArrayTypeName",
													"src": "14868:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MultiDelegatedRevocationRequest_$4249_storage_$dyn_storage_ptr",
														"typeString": "struct MultiDelegatedRevocationRequest[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14858:81:8"
									},
									"returnParameters": {
										"id": 4366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14956:0:8"
									},
									"scope": 4437,
									"src": "14826:131:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4368,
										"nodeType": "StructuredDocumentation",
										"src": "14963:154:8",
										"text": "@notice Timestamps the specified bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was timestamped with."
									},
									"functionSelector": "4d003070",
									"id": 4375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "timestamp",
									"nameLocation": "15131:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15149:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4375,
												"src": "15141:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15141:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15140:14:8"
									},
									"returnParameters": {
										"id": 4374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4375,
												"src": "15173:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4372,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "15173:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15172:8:8"
									},
									"scope": 4437,
									"src": "15122:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4376,
										"nodeType": "StructuredDocumentation",
										"src": "15187:163:8",
										"text": "@notice Timestamps the specified multiple bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was timestamped with."
									},
									"functionSelector": "e71ff365",
									"id": 4384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiTimestamp",
									"nameLocation": "15364:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15398:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4384,
												"src": "15379:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 4377,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "15379:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 4378,
													"nodeType": "ArrayTypeName",
													"src": "15379:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15378:25:8"
									},
									"returnParameters": {
										"id": 4383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4384,
												"src": "15422:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4381,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "15422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15421:8:8"
									},
									"scope": 4437,
									"src": "15355:75:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4385,
										"nodeType": "StructuredDocumentation",
										"src": "15436:147:8",
										"text": "@notice Revokes the specified bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was revoked with."
									},
									"functionSelector": "cf190f34",
									"id": 4392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOffchain",
									"nameLocation": "15597:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4387,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15620:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4392,
												"src": "15612:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15611:14:8"
									},
									"returnParameters": {
										"id": 4391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4392,
												"src": "15644:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4389,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "15644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15643:8:8"
									},
									"scope": 4437,
									"src": "15588:64:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4393,
										"nodeType": "StructuredDocumentation",
										"src": "15658:156:8",
										"text": "@notice Revokes the specified multiple bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was revoked with."
									},
									"functionSelector": "13893f61",
									"id": 4401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiRevokeOffchain",
									"nameLocation": "15828:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4396,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15867:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4401,
												"src": "15848:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 4394,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "15848:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 4395,
													"nodeType": "ArrayTypeName",
													"src": "15848:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15847:25:8"
									},
									"returnParameters": {
										"id": 4400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4401,
												"src": "15891:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4398,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "15891:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15890:8:8"
									},
									"scope": 4437,
									"src": "15819:80:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4402,
										"nodeType": "StructuredDocumentation",
										"src": "15905:156:8",
										"text": "@notice Returns an existing attestation by UID.\n @param uid The UID of the attestation to retrieve.\n @return The attestation data members."
									},
									"functionSelector": "a3112a64",
									"id": 4410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAttestation",
									"nameLocation": "16075:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4404,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "16098:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "16090:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16090:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16089:13:8"
									},
									"returnParameters": {
										"id": 4409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "16126:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_memory_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4406,
														"name": "Attestation",
														"nameLocations": [
															"16126:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "16126:11:8"
													},
													"referencedDeclaration": 4114,
													"src": "16126:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16125:20:8"
									},
									"scope": 4437,
									"src": "16066:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4411,
										"nodeType": "StructuredDocumentation",
										"src": "16152:155:8",
										"text": "@notice Checks whether an attestation exists.\n @param uid The UID of the attestation to retrieve.\n @return Whether an attestation exists."
									},
									"functionSelector": "e30bb563",
									"id": 4418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAttestationValid",
									"nameLocation": "16321:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4413,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "16348:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 4418,
												"src": "16340:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4412,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16340:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16339:13:8"
									},
									"returnParameters": {
										"id": 4417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4418,
												"src": "16376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16375:6:8"
									},
									"scope": 4437,
									"src": "16312:70:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4419,
										"nodeType": "StructuredDocumentation",
										"src": "16388:179:8",
										"text": "@notice Returns the timestamp that the specified data was timestamped with.\n @param data The data to query.\n @return The timestamp the data was timestamped with."
									},
									"functionSelector": "d45c4435",
									"id": 4426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestamp",
									"nameLocation": "16581:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4421,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16602:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4426,
												"src": "16594:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4420,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16594:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16593:14:8"
									},
									"returnParameters": {
										"id": 4425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4426,
												"src": "16631:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4423,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16631:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16630:8:8"
									},
									"scope": 4437,
									"src": "16572:67:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4427,
										"nodeType": "StructuredDocumentation",
										"src": "16645:179:8",
										"text": "@notice Returns the timestamp that the specified data was timestamped with.\n @param data The data to query.\n @return The timestamp the data was timestamped with."
									},
									"functionSelector": "b469318d",
									"id": 4436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRevokeOffchain",
									"nameLocation": "16838:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4429,
												"mutability": "mutable",
												"name": "revoker",
												"nameLocation": "16864:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 4436,
												"src": "16856:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16856:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4431,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16881:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 4436,
												"src": "16873:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4430,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16873:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16855:31:8"
									},
									"returnParameters": {
										"id": 4435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4436,
												"src": "16910:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4433,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16910:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16909:8:8"
									},
									"scope": 4437,
									"src": "16829:89:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4438,
							"src": "4065:12855:8",
							"usedErrors": [],
							"usedEvents": [
								4263,
								4274,
								4281,
								4290
							]
						}
					],
					"src": "33:16887:8"
				},
				"id": 8
			},
			"EAS/ISchemaRegistry.sol": {
				"ast": {
					"absolutePath": "EAS/ISchemaRegistry.sol",
					"exportedSymbols": {
						"ISchemaRegistry": [
							4490
						],
						"ISchemaResolver": [
							4550
						],
						"ISemver": [
							4560
						],
						"SchemaRecord": [
							4454
						]
					},
					"id": 4491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "EAS/ISemver.sol",
							"file": "./ISemver.sol",
							"id": 4441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4491,
							"sourceUnit": 4561,
							"src": "58:40:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4440,
										"name": "ISemver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4560,
										"src": "67:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/ISchemaResolver.sol",
							"file": "./ISchemaResolver.sol",
							"id": 4443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4491,
							"sourceUnit": 4551,
							"src": "100:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4442,
										"name": "ISchemaResolver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4550,
										"src": "109:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "SchemaRecord",
							"documentation": {
								"id": 4444,
								"nodeType": "StructuredDocumentation",
								"src": "158:67:9",
								"text": "@notice A struct representing a record for a submitted schema."
							},
							"id": 4454,
							"members": [
								{
									"constant": false,
									"id": 4446,
									"mutability": "mutable",
									"name": "uid",
									"nameLocation": "259:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 4454,
									"src": "251:11:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4445,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "251:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4449,
									"mutability": "mutable",
									"name": "resolver",
									"nameLocation": "324:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 4454,
									"src": "308:24:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISchemaResolver_$4550",
										"typeString": "contract ISchemaResolver"
									},
									"typeName": {
										"id": 4448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4447,
											"name": "ISchemaResolver",
											"nameLocations": [
												"308:15:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4550,
											"src": "308:15:9"
										},
										"referencedDeclaration": 4550,
										"src": "308:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISchemaResolver_$4550",
											"typeString": "contract ISchemaResolver"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4451,
									"mutability": "mutable",
									"name": "revocable",
									"nameLocation": "372:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 4454,
									"src": "367:14:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4450,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "367:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4453,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "447:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 4454,
									"src": "440:13:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 4452,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "440:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SchemaRecord",
							"nameLocation": "232:12:9",
							"nodeType": "StructDefinition",
							"scope": 4491,
							"src": "225:285:9",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4456,
										"name": "ISemver",
										"nameLocations": [
											"671:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4560,
										"src": "671:7:9"
									},
									"id": 4457,
									"nodeType": "InheritanceSpecifier",
									"src": "671:7:9"
								}
							],
							"canonicalName": "ISchemaRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4455,
								"nodeType": "StructuredDocumentation",
								"src": "512:130:9",
								"text": "@title ISchemaRegistry\n @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol."
							},
							"fullyImplemented": false,
							"id": 4490,
							"linearizedBaseContracts": [
								4490,
								4560
							],
							"name": "ISchemaRegistry",
							"nameLocation": "652:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 4458,
										"nodeType": "StructuredDocumentation",
										"src": "685:213:9",
										"text": "@notice Emitted when a new schema has been registered\n @param uid The schema UID.\n @param registerer The address of the account used to register the schema.\n @param schema The schema data."
									},
									"eventSelector": "d0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e",
									"id": 4467,
									"name": "Registered",
									"nameLocation": "909:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4460,
												"indexed": true,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "936:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 4467,
												"src": "920:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4462,
												"indexed": true,
												"mutability": "mutable",
												"name": "registerer",
												"nameLocation": "957:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4467,
												"src": "941:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4465,
												"indexed": false,
												"mutability": "mutable",
												"name": "schema",
												"nameLocation": "982:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4467,
												"src": "969:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SchemaRecord_$4454_memory_ptr",
													"typeString": "struct SchemaRecord"
												},
												"typeName": {
													"id": 4464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4463,
														"name": "SchemaRecord",
														"nameLocations": [
															"969:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4454,
														"src": "969:12:9"
													},
													"referencedDeclaration": 4454,
													"src": "969:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SchemaRecord_$4454_storage_ptr",
														"typeString": "struct SchemaRecord"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:70:9"
									},
									"src": "903:87:9"
								},
								{
									"documentation": {
										"id": 4468,
										"nodeType": "StructuredDocumentation",
										"src": "996:262:9",
										"text": "@notice Submits and reserves a new schema\n @param schema The schema data schema.\n @param resolver An optional schema resolver.\n @param revocable Whether the schema allows revocations explicitly.\n @return The UID of the new schema."
									},
									"functionSelector": "60d7a278",
									"id": 4480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "1272:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4470,
												"mutability": "mutable",
												"name": "schema",
												"nameLocation": "1297:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4480,
												"src": "1281:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1281:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4473,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "1321:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 4480,
												"src": "1305:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISchemaResolver_$4550",
													"typeString": "contract ISchemaResolver"
												},
												"typeName": {
													"id": 4472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4471,
														"name": "ISchemaResolver",
														"nameLocations": [
															"1305:15:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4550,
														"src": "1305:15:9"
													},
													"referencedDeclaration": 4550,
													"src": "1305:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISchemaResolver_$4550",
														"typeString": "contract ISchemaResolver"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4475,
												"mutability": "mutable",
												"name": "revocable",
												"nameLocation": "1336:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4480,
												"src": "1331:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1331:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:66:9"
									},
									"returnParameters": {
										"id": 4479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4480,
												"src": "1365:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:9:9"
									},
									"scope": 4490,
									"src": "1263:111:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4481,
										"nodeType": "StructuredDocumentation",
										"src": "1380:140:9",
										"text": "@notice Returns an existing schema by UID\n @param uid The UID of the schema to retrieve.\n @return The schema data members."
									},
									"functionSelector": "a2ea7c6e",
									"id": 4489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSchema",
									"nameLocation": "1534:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4483,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "1552:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 4489,
												"src": "1544:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4482,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:13:9"
									},
									"returnParameters": {
										"id": 4488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4489,
												"src": "1580:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SchemaRecord_$4454_memory_ptr",
													"typeString": "struct SchemaRecord"
												},
												"typeName": {
													"id": 4486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4485,
														"name": "SchemaRecord",
														"nameLocations": [
															"1580:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4454,
														"src": "1580:12:9"
													},
													"referencedDeclaration": 4454,
													"src": "1580:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SchemaRecord_$4454_storage_ptr",
														"typeString": "struct SchemaRecord"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:21:9"
									},
									"scope": 4490,
									"src": "1525:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4491,
							"src": "642:961:9",
							"usedErrors": [],
							"usedEvents": [
								4467
							]
						}
					],
					"src": "33:1570:9"
				},
				"id": 9
			},
			"EAS/ISchemaResolver.sol": {
				"ast": {
					"absolutePath": "EAS/ISchemaResolver.sol",
					"exportedSymbols": {
						"Attestation": [
							4114
						],
						"ISchemaResolver": [
							4550
						],
						"ISemver": [
							4560
						]
					},
					"id": 4551,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "EAS/Common.sol",
							"file": "./Common.sol",
							"id": 4494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4551,
							"sourceUnit": 4131,
							"src": "58:43:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4493,
										"name": "Attestation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4114,
										"src": "67:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/ISemver.sol",
							"file": "./ISemver.sol",
							"id": 4496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4551,
							"sourceUnit": 4561,
							"src": "102:40:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4495,
										"name": "ISemver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4560,
										"src": "111:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4498,
										"name": "ISemver",
										"nameLocations": [
											"258:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4560,
										"src": "258:7:10"
									},
									"id": 4499,
									"nodeType": "InheritanceSpecifier",
									"src": "258:7:10"
								}
							],
							"canonicalName": "ISchemaResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4497,
								"nodeType": "StructuredDocumentation",
								"src": "144:85:10",
								"text": "@title ISchemaResolver\n @notice The interface of an optional schema resolver."
							},
							"fullyImplemented": false,
							"id": 4550,
							"linearizedBaseContracts": [
								4550,
								4560
							],
							"name": "ISchemaResolver",
							"nameLocation": "239:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4500,
										"nodeType": "StructuredDocumentation",
										"src": "272:112:10",
										"text": "@notice Checks if the resolver can be sent ETH.\n @return Whether the resolver supports ETH transfers."
									},
									"functionSelector": "ce46e046",
									"id": 4505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPayable",
									"nameLocation": "398:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:10"
									},
									"returnParameters": {
										"id": 4504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4505,
												"src": "433:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:10"
									},
									"scope": 4550,
									"src": "389:50:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4506,
										"nodeType": "StructuredDocumentation",
										"src": "445:167:10",
										"text": "@notice Processes an attestation and verifies whether it's valid.\n @param attestation The new attestation.\n @return Whether the attestation is valid."
									},
									"functionSelector": "e60c3505",
									"id": 4514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attest",
									"nameLocation": "626:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4509,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "654:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 4514,
												"src": "633:32:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4507,
														"name": "Attestation",
														"nameLocations": [
															"633:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "633:11:10"
													},
													"referencedDeclaration": 4114,
													"src": "633:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:34:10"
									},
									"returnParameters": {
										"id": 4513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4514,
												"src": "693:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "693:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:6:10"
									},
									"scope": 4550,
									"src": "617:82:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4515,
										"nodeType": "StructuredDocumentation",
										"src": "705:268:10",
										"text": "@notice Processes multiple attestations and verifies whether they are valid.\n @param attestations The new attestations.\n @param values Explicit ETH amounts which were sent with each attestation.\n @return Whether all the attestations are valid."
									},
									"functionSelector": "91db0b7e",
									"id": 4527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiAttest",
									"nameLocation": "987:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4519,
												"mutability": "mutable",
												"name": "attestations",
												"nameLocation": "1031:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 4527,
												"src": "1008:35:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Attestation[]"
												},
												"typeName": {
													"baseType": {
														"id": 4517,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4516,
															"name": "Attestation",
															"nameLocations": [
																"1008:11:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4114,
															"src": "1008:11:10"
														},
														"referencedDeclaration": 4114,
														"src": "1008:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
															"typeString": "struct Attestation"
														}
													},
													"id": 4518,
													"nodeType": "ArrayTypeName",
													"src": "1008:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_storage_$dyn_storage_ptr",
														"typeString": "struct Attestation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4522,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1072:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 4527,
												"src": "1053:25:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 4520,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1053:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4521,
													"nodeType": "ArrayTypeName",
													"src": "1053:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:86:10"
									},
									"returnParameters": {
										"id": 4526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4527,
												"src": "1111:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1111:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:6:10"
									},
									"scope": 4550,
									"src": "978:139:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4528,
										"nodeType": "StructuredDocumentation",
										"src": "1123:205:10",
										"text": "@notice Processes an attestation revocation and verifies if it can be revoked.\n @param attestation The existing attestation to be revoked.\n @return Whether the attestation can be revoked."
									},
									"functionSelector": "e49617e1",
									"id": 4536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "1342:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4531,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "1370:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 4536,
												"src": "1349:32:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4529,
														"name": "Attestation",
														"nameLocations": [
															"1349:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "1349:11:10"
													},
													"referencedDeclaration": 4114,
													"src": "1349:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1348:34:10"
									},
									"returnParameters": {
										"id": 4535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4536,
												"src": "1409:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1409:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:6:10"
									},
									"scope": 4550,
									"src": "1333:82:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4537,
										"nodeType": "StructuredDocumentation",
										"src": "1421:297:10",
										"text": "@notice Processes revocation of multiple attestation and verifies they can be revoked.\n @param attestations The existing attestations to be revoked.\n @param values Explicit ETH amounts which were sent with each revocation.\n @return Whether the attestations can be revoked."
									},
									"functionSelector": "88e5b2d9",
									"id": 4549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiRevoke",
									"nameLocation": "1732:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4541,
												"mutability": "mutable",
												"name": "attestations",
												"nameLocation": "1776:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 4549,
												"src": "1753:35:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Attestation[]"
												},
												"typeName": {
													"baseType": {
														"id": 4539,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4538,
															"name": "Attestation",
															"nameLocations": [
																"1753:11:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4114,
															"src": "1753:11:10"
														},
														"referencedDeclaration": 4114,
														"src": "1753:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
															"typeString": "struct Attestation"
														}
													},
													"id": 4540,
													"nodeType": "ArrayTypeName",
													"src": "1753:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_storage_$dyn_storage_ptr",
														"typeString": "struct Attestation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4544,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1817:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 4549,
												"src": "1798:25:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 4542,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4543,
													"nodeType": "ArrayTypeName",
													"src": "1798:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:86:10"
									},
									"returnParameters": {
										"id": 4548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4549,
												"src": "1856:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1856:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:6:10"
									},
									"scope": 4550,
									"src": "1723:139:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4551,
							"src": "229:1635:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1831:10"
				},
				"id": 10
			},
			"EAS/ISemver.sol": {
				"ast": {
					"absolutePath": "EAS/ISemver.sol",
					"exportedSymbols": {
						"ISemver": [
							4560
						]
					},
					"id": 4561,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4552,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISemver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4553,
								"nodeType": "StructuredDocumentation",
								"src": "58:51:11",
								"text": "@title ISemver\n @notice A semver interface."
							},
							"fullyImplemented": false,
							"id": 4560,
							"linearizedBaseContracts": [
								4560
							],
							"name": "ISemver",
							"nameLocation": "119:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4554,
										"nodeType": "StructuredDocumentation",
										"src": "133:106:11",
										"text": "@notice Returns the full semver contract version.\n @return Semver contract version as a string."
									},
									"functionSelector": "54fd4d50",
									"id": 4559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "253:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:2:11"
									},
									"returnParameters": {
										"id": 4558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4559,
												"src": "286:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "286:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:15:11"
									},
									"scope": 4560,
									"src": "244:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4561,
							"src": "109:194:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:270:11"
				},
				"id": 11
			},
			"EAS/SchemaResolver.sol": {
				"ast": {
					"absolutePath": "EAS/SchemaResolver.sol",
					"exportedSymbols": {
						"AccessDenied": [
							4074
						],
						"Attestation": [
							4114
						],
						"IEAS": [
							4437
						],
						"ISchemaResolver": [
							4550
						],
						"InvalidEAS": [
							4078
						],
						"InvalidLength": [
							4080
						],
						"SchemaResolver": [
							4887
						],
						"Semver": [
							4954
						],
						"uncheckedInc": [
							4130
						]
					},
					"id": 4888,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4562,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "EAS/Common.sol",
							"file": "./Common.sol",
							"id": 4567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4888,
							"sourceUnit": 4131,
							"src": "58:85:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4563,
										"name": "AccessDenied",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4074,
										"src": "67:12:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 4564,
										"name": "InvalidEAS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4078,
										"src": "81:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 4565,
										"name": "InvalidLength",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4080,
										"src": "93:13:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 4566,
										"name": "uncheckedInc",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4130,
										"src": "108:12:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/IEAS.sol",
							"file": "./IEAS.sol",
							"id": 4570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4888,
							"sourceUnit": 4438,
							"src": "144:47:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4568,
										"name": "IEAS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4437,
										"src": "153:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 4569,
										"name": "Attestation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4114,
										"src": "159:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/Semver.sol",
							"file": "./Semver.sol",
							"id": 4572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4888,
							"sourceUnit": 4955,
							"src": "192:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4571,
										"name": "Semver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4954,
										"src": "201:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/ISchemaResolver.sol",
							"file": "./ISchemaResolver.sol",
							"id": 4574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4888,
							"sourceUnit": 4551,
							"src": "231:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4573,
										"name": "ISchemaResolver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4550,
										"src": "240:15:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4576,
										"name": "ISchemaResolver",
										"nameLocations": [
											"398:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4550,
										"src": "398:15:12"
									},
									"id": 4577,
									"nodeType": "InheritanceSpecifier",
									"src": "398:15:12"
								},
								{
									"baseName": {
										"id": 4578,
										"name": "Semver",
										"nameLocations": [
											"415:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4954,
										"src": "415:6:12"
									},
									"id": 4579,
									"nodeType": "InheritanceSpecifier",
									"src": "415:6:12"
								}
							],
							"canonicalName": "SchemaResolver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4575,
								"nodeType": "StructuredDocumentation",
								"src": "289:73:12",
								"text": "@title SchemaResolver\n @notice The base schema resolver contract."
							},
							"fullyImplemented": false,
							"id": 4887,
							"linearizedBaseContracts": [
								4887,
								4954,
								4550,
								4560
							],
							"name": "SchemaResolver",
							"nameLocation": "380:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "11011294",
									"id": 4581,
									"name": "InsufficientValue",
									"nameLocation": "434:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:12"
									},
									"src": "428:26:12"
								},
								{
									"errorSelector": "1574f9f3",
									"id": 4583,
									"name": "NotPayable",
									"nameLocation": "465:10:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:2:12"
									},
									"src": "459:19:12"
								},
								{
									"constant": false,
									"id": 4586,
									"mutability": "immutable",
									"name": "_eas",
									"nameLocation": "540:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 4887,
									"src": "516:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IEAS_$4437",
										"typeString": "contract IEAS"
									},
									"typeName": {
										"id": 4585,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4584,
											"name": "IEAS",
											"nameLocations": [
												"516:4:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4437,
											"src": "516:4:12"
										},
										"referencedDeclaration": 4437,
										"src": "516:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEAS_$4437",
											"typeString": "contract IEAS"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4616,
										"nodeType": "Block",
										"src": "685:113:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 4600,
																"name": "eas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4590,
																"src": "707:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEAS_$4437",
																	"typeString": "contract IEAS"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IEAS_$4437",
																	"typeString": "contract IEAS"
																}
															],
															"id": 4599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "699:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "699:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 4601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "699:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "723:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "715:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4602,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "715:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 4605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "715:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "699:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4611,
												"nodeType": "IfStatement",
												"src": "695:76:12",
												"trueBody": {
													"id": 4610,
													"nodeType": "Block",
													"src": "727:44:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 4607,
																	"name": "InvalidEAS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4078,
																	"src": "748:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 4608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "748:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4609,
															"nodeType": "RevertStatement",
															"src": "741:19:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4612,
														"name": "_eas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4586,
														"src": "781:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEAS_$4437",
															"typeString": "contract IEAS"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4613,
														"name": "eas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4590,
														"src": "788:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEAS_$4437",
															"typeString": "contract IEAS"
														}
													},
													"src": "781:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEAS_$4437",
														"typeString": "contract IEAS"
													}
												},
												"id": 4615,
												"nodeType": "ExpressionStatement",
												"src": "781:10:12"
											}
										]
									},
									"documentation": {
										"id": 4587,
										"nodeType": "StructuredDocumentation",
										"src": "551:91:12",
										"text": "@dev Creates a new resolver.\n @param eas The address of the global EAS contract."
									},
									"id": 4617,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "31",
													"id": 4593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "676:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												{
													"hexValue": "33",
													"id": 4594,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "679:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												{
													"hexValue": "30",
													"id": 4595,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "682:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"id": 4596,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4592,
												"name": "Semver",
												"nameLocations": [
													"669:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4954,
												"src": "669:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "669:15:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4590,
												"mutability": "mutable",
												"name": "eas",
												"nameLocation": "664:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4617,
												"src": "659:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEAS_$4437",
													"typeString": "contract IEAS"
												},
												"typeName": {
													"id": 4589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4588,
														"name": "IEAS",
														"nameLocations": [
															"659:4:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4437,
														"src": "659:4:12"
													},
													"referencedDeclaration": 4437,
													"src": "659:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEAS_$4437",
														"typeString": "contract IEAS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:10:12"
									},
									"returnParameters": {
										"id": 4597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:0:12"
									},
									"scope": 4887,
									"src": "647:151:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4624,
										"nodeType": "Block",
										"src": "891:39:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4620,
														"name": "_onlyEAS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4886,
														"src": "901:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 4621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "901:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4622,
												"nodeType": "ExpressionStatement",
												"src": "901:10:12"
											},
											{
												"id": 4623,
												"nodeType": "PlaceholderStatement",
												"src": "922:1:12"
											}
										]
									},
									"documentation": {
										"id": 4618,
										"nodeType": "StructuredDocumentation",
										"src": "804:63:12",
										"text": "@dev Ensures that only the EAS contract can make this call."
									},
									"id": 4625,
									"name": "onlyEAS",
									"nameLocation": "881:7:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:2:12"
									},
									"src": "872:58:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										4505
									],
									"body": {
										"id": 4633,
										"nodeType": "Block",
										"src": "1028:29:12",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 4631,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1045:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 4630,
												"id": 4632,
												"nodeType": "Return",
												"src": "1038:12:12"
											}
										]
									},
									"documentation": {
										"id": 4626,
										"nodeType": "StructuredDocumentation",
										"src": "936:31:12",
										"text": "@inheritdoc ISchemaResolver"
									},
									"functionSelector": "ce46e046",
									"id": 4634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPayable",
									"nameLocation": "981:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "990:2:12"
									},
									"returnParameters": {
										"id": 4630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4634,
												"src": "1022:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1022:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:6:12"
									},
									"scope": 4887,
									"src": "972:85:12",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4646,
										"nodeType": "Block",
										"src": "1125:78:12",
										"statements": [
											{
												"condition": {
													"id": 4640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1139:12:12",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4638,
															"name": "isPayable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4634,
															"src": "1140:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
																"typeString": "function () pure returns (bool)"
															}
														},
														"id": 4639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1140:11:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4645,
												"nodeType": "IfStatement",
												"src": "1135:62:12",
												"trueBody": {
													"id": 4644,
													"nodeType": "Block",
													"src": "1153:44:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 4641,
																	"name": "NotPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4583,
																	"src": "1174:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 4642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1174:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4643,
															"nodeType": "RevertStatement",
															"src": "1167:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4635,
										"nodeType": "StructuredDocumentation",
										"src": "1063:22:12",
										"text": "@dev ETH callback."
									},
									"id": 4647,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:2:12"
									},
									"returnParameters": {
										"id": 4637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:0:12"
									},
									"scope": 4887,
									"src": "1090:113:12",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										4514
									],
									"body": {
										"id": 4664,
										"nodeType": "Block",
										"src": "1335:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4659,
															"name": "attestation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4651,
															"src": "1361:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																"typeString": "struct Attestation calldata"
															}
														},
														{
															"expression": {
																"id": 4660,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1374:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1378:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1374:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																"typeString": "struct Attestation calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4658,
														"name": "onAttest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4858,
														"src": "1352:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$4114_calldata_ptr_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (struct Attestation calldata,uint256) returns (bool)"
														}
													},
													"id": 4662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4657,
												"id": 4663,
												"nodeType": "Return",
												"src": "1345:39:12"
											}
										]
									},
									"documentation": {
										"id": 4648,
										"nodeType": "StructuredDocumentation",
										"src": "1209:31:12",
										"text": "@inheritdoc ISchemaResolver"
									},
									"functionSelector": "e60c3505",
									"id": 4665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4653,
												"name": "onlyEAS",
												"nameLocations": [
													"1312:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4625,
												"src": "1312:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1312:7:12"
										}
									],
									"name": "attest",
									"nameLocation": "1254:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4651,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "1282:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4665,
												"src": "1261:32:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4649,
														"name": "Attestation",
														"nameLocations": [
															"1261:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "1261:11:12"
													},
													"referencedDeclaration": 4114,
													"src": "1261:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:34:12"
									},
									"returnParameters": {
										"id": 4657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4665,
												"src": "1329:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1329:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:6:12"
									},
									"scope": 4887,
									"src": "1245:146:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										4527
									],
									"body": {
										"id": 4746,
										"nodeType": "Block",
										"src": "1580:1314:12",
										"statements": [
											{
												"assignments": [
													4681
												],
												"declarations": [
													{
														"constant": false,
														"id": 4681,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1598:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 4746,
														"src": "1590:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1590:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4684,
												"initialValue": {
													"expression": {
														"id": 4682,
														"name": "attestations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4670,
														"src": "1607:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "struct Attestation calldata[] calldata"
														}
													},
													"id": 4683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1620:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1607:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1590:36:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4685,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4681,
														"src": "1640:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4686,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4673,
															"src": "1650:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 4687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1657:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1650:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1640:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4693,
												"nodeType": "IfStatement",
												"src": "1636:76:12",
												"trueBody": {
													"id": 4692,
													"nodeType": "Block",
													"src": "1665:47:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 4689,
																	"name": "InvalidLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4080,
																	"src": "1686:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 4690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1686:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4691,
															"nodeType": "RevertStatement",
															"src": "1679:22:12"
														}
													]
												}
											},
											{
												"assignments": [
													4695
												],
												"declarations": [
													{
														"constant": false,
														"id": 4695,
														"mutability": "mutable",
														"name": "remainingValue",
														"nameLocation": "2127:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 4746,
														"src": "2119:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2119:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4698,
												"initialValue": {
													"expression": {
														"id": 4696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2144:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 4697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2148:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "2144:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2119:34:12"
											},
											{
												"body": {
													"id": 4742,
													"nodeType": "Block",
													"src": "2217:649:12",
													"statements": [
														{
															"assignments": [
																4713
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4713,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "2329:5:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 4742,
																	"src": "2321:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4712,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2321:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4717,
															"initialValue": {
																"baseExpression": {
																	"id": 4714,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4673,
																	"src": "2337:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 4716,
																"indexExpression": {
																	"id": 4715,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4700,
																	"src": "2344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2337:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2321:25:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4718,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4713,
																	"src": "2364:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 4719,
																	"name": "remainingValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4695,
																	"src": "2372:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2364:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4725,
															"nodeType": "IfStatement",
															"src": "2360:87:12",
															"trueBody": {
																"id": 4724,
																"nodeType": "Block",
																"src": "2388:59:12",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 4721,
																				"name": "InsufficientValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4581,
																				"src": "2413:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 4722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2413:19:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 4723,
																		"nodeType": "RevertStatement",
																		"src": "2406:26:12"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 4732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2575:33:12",
																"subExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 4727,
																				"name": "attestations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4670,
																				"src": "2585:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct Attestation calldata[] calldata"
																				}
																			},
																			"id": 4729,
																			"indexExpression": {
																				"id": 4728,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4700,
																				"src": "2598:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2585:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																				"typeString": "struct Attestation calldata"
																			}
																		},
																		{
																			"id": 4730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4713,
																			"src": "2602:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																				"typeString": "struct Attestation calldata"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4726,
																		"name": "onAttest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4858,
																		"src": "2576:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$4114_calldata_ptr_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (struct Attestation calldata,uint256) returns (bool)"
																		}
																	},
																	"id": 4731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2576:32:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4736,
															"nodeType": "IfStatement",
															"src": "2571:84:12",
															"trueBody": {
																"id": 4735,
																"nodeType": "Block",
																"src": "2610:45:12",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 4733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2635:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 4679,
																		"id": 4734,
																		"nodeType": "Return",
																		"src": "2628:12:12"
																	}
																]
															}
														},
														{
															"id": 4741,
															"nodeType": "UncheckedBlock",
															"src": "2669:187:12",
															"statements": [
																{
																	"expression": {
																		"id": 4739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4737,
																			"name": "remainingValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4695,
																			"src": "2818:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 4738,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4713,
																			"src": "2836:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2818:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4740,
																	"nodeType": "ExpressionStatement",
																	"src": "2818:23:12"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4703,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4700,
														"src": "2184:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 4704,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4681,
														"src": "2188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2184:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4743,
												"initializationExpression": {
													"assignments": [
														4700
													],
													"declarations": [
														{
															"constant": false,
															"id": 4700,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2177:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 4743,
															"src": "2169:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4699,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2169:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4702,
													"initialValue": {
														"hexValue": "30",
														"id": 4701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2181:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2169:13:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4706,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4700,
															"src": "2196:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 4708,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4700,
																	"src": "2213:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4707,
																"name": "uncheckedInc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4130,
																"src": "2200:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 4709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2200:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2196:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4711,
													"nodeType": "ExpressionStatement",
													"src": "2196:19:12"
												},
												"nodeType": "ForStatement",
												"src": "2164:702:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 4744,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2883:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 4679,
												"id": 4745,
												"nodeType": "Return",
												"src": "2876:11:12"
											}
										]
									},
									"documentation": {
										"id": 4666,
										"nodeType": "StructuredDocumentation",
										"src": "1397:31:12",
										"text": "@inheritdoc ISchemaResolver"
									},
									"functionSelector": "91db0b7e",
									"id": 4747,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4676,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4675,
												"name": "onlyEAS",
												"nameLocations": [
													"1557:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4625,
												"src": "1557:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1557:7:12"
										}
									],
									"name": "multiAttest",
									"nameLocation": "1442:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4670,
												"mutability": "mutable",
												"name": "attestations",
												"nameLocation": "1486:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 4747,
												"src": "1463:35:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Attestation[]"
												},
												"typeName": {
													"baseType": {
														"id": 4668,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4667,
															"name": "Attestation",
															"nameLocations": [
																"1463:11:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4114,
															"src": "1463:11:12"
														},
														"referencedDeclaration": 4114,
														"src": "1463:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
															"typeString": "struct Attestation"
														}
													},
													"id": 4669,
													"nodeType": "ArrayTypeName",
													"src": "1463:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_storage_$dyn_storage_ptr",
														"typeString": "struct Attestation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4673,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1527:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4747,
												"src": "1508:25:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 4671,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1508:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4672,
													"nodeType": "ArrayTypeName",
													"src": "1508:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:86:12"
									},
									"returnParameters": {
										"id": 4679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4747,
												"src": "1574:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1574:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:6:12"
									},
									"scope": 4887,
									"src": "1433:1461:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										4536
									],
									"body": {
										"id": 4764,
										"nodeType": "Block",
										"src": "3026:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4759,
															"name": "attestation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4751,
															"src": "3052:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																"typeString": "struct Attestation calldata"
															}
														},
														{
															"expression": {
																"id": 4760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3065:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3069:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3065:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																"typeString": "struct Attestation calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4758,
														"name": "onRevoke",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4869,
														"src": "3043:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$4114_calldata_ptr_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (struct Attestation calldata,uint256) returns (bool)"
														}
													},
													"id": 4762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3043:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4757,
												"id": 4763,
												"nodeType": "Return",
												"src": "3036:39:12"
											}
										]
									},
									"documentation": {
										"id": 4748,
										"nodeType": "StructuredDocumentation",
										"src": "2900:31:12",
										"text": "@inheritdoc ISchemaResolver"
									},
									"functionSelector": "e49617e1",
									"id": 4765,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4753,
												"name": "onlyEAS",
												"nameLocations": [
													"3003:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4625,
												"src": "3003:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3003:7:12"
										}
									],
									"name": "revoke",
									"nameLocation": "2945:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4751,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "2973:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4765,
												"src": "2952:32:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4749,
														"name": "Attestation",
														"nameLocations": [
															"2952:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "2952:11:12"
													},
													"referencedDeclaration": 4114,
													"src": "2952:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:34:12"
									},
									"returnParameters": {
										"id": 4757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4765,
												"src": "3020:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3020:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:6:12"
									},
									"scope": 4887,
									"src": "2936:146:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										4549
									],
									"body": {
										"id": 4846,
										"nodeType": "Block",
										"src": "3271:1313:12",
										"statements": [
											{
												"assignments": [
													4781
												],
												"declarations": [
													{
														"constant": false,
														"id": 4781,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3289:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 4846,
														"src": "3281:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3281:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4784,
												"initialValue": {
													"expression": {
														"id": 4782,
														"name": "attestations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4770,
														"src": "3298:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "struct Attestation calldata[] calldata"
														}
													},
													"id": 4783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3311:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3298:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3281:36:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4785,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4781,
														"src": "3331:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4786,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4773,
															"src": "3341:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 4787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3348:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3341:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3331:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4793,
												"nodeType": "IfStatement",
												"src": "3327:76:12",
												"trueBody": {
													"id": 4792,
													"nodeType": "Block",
													"src": "3356:47:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 4789,
																	"name": "InvalidLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4080,
																	"src": "3377:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 4790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3377:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4791,
															"nodeType": "RevertStatement",
															"src": "3370:22:12"
														}
													]
												}
											},
											{
												"assignments": [
													4795
												],
												"declarations": [
													{
														"constant": false,
														"id": 4795,
														"mutability": "mutable",
														"name": "remainingValue",
														"nameLocation": "3818:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 4846,
														"src": "3810:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3810:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4798,
												"initialValue": {
													"expression": {
														"id": 4796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3835:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 4797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3839:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "3835:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3810:34:12"
											},
											{
												"body": {
													"id": 4842,
													"nodeType": "Block",
													"src": "3908:648:12",
													"statements": [
														{
															"assignments": [
																4813
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4813,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "4020:5:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 4842,
																	"src": "4012:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4812,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4012:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4817,
															"initialValue": {
																"baseExpression": {
																	"id": 4814,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4773,
																	"src": "4028:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 4816,
																"indexExpression": {
																	"id": 4815,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4800,
																	"src": "4035:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4028:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4012:25:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4818,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4813,
																	"src": "4055:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 4819,
																	"name": "remainingValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4795,
																	"src": "4063:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4055:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4825,
															"nodeType": "IfStatement",
															"src": "4051:87:12",
															"trueBody": {
																"id": 4824,
																"nodeType": "Block",
																"src": "4079:59:12",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 4821,
																				"name": "InsufficientValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4581,
																				"src": "4104:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 4822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4104:19:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 4823,
																		"nodeType": "RevertStatement",
																		"src": "4097:26:12"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 4832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4265:33:12",
																"subExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 4827,
																				"name": "attestations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4770,
																				"src": "4275:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct Attestation calldata[] calldata"
																				}
																			},
																			"id": 4829,
																			"indexExpression": {
																				"id": 4828,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4800,
																				"src": "4288:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4275:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																				"typeString": "struct Attestation calldata"
																			}
																		},
																		{
																			"id": 4830,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4813,
																			"src": "4292:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																				"typeString": "struct Attestation calldata"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4826,
																		"name": "onRevoke",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4869,
																		"src": "4266:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$4114_calldata_ptr_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (struct Attestation calldata,uint256) returns (bool)"
																		}
																	},
																	"id": 4831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4266:32:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4836,
															"nodeType": "IfStatement",
															"src": "4261:84:12",
															"trueBody": {
																"id": 4835,
																"nodeType": "Block",
																"src": "4300:45:12",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 4833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4325:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 4779,
																		"id": 4834,
																		"nodeType": "Return",
																		"src": "4318:12:12"
																	}
																]
															}
														},
														{
															"id": 4841,
															"nodeType": "UncheckedBlock",
															"src": "4359:187:12",
															"statements": [
																{
																	"expression": {
																		"id": 4839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4837,
																			"name": "remainingValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4795,
																			"src": "4508:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 4838,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4813,
																			"src": "4526:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4508:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4840,
																	"nodeType": "ExpressionStatement",
																	"src": "4508:23:12"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4803,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4800,
														"src": "3875:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 4804,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4781,
														"src": "3879:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3875:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4843,
												"initializationExpression": {
													"assignments": [
														4800
													],
													"declarations": [
														{
															"constant": false,
															"id": 4800,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3868:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 4843,
															"src": "3860:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4799,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3860:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4802,
													"initialValue": {
														"hexValue": "30",
														"id": 4801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3872:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3860:13:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4806,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4800,
															"src": "3887:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 4808,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4800,
																	"src": "3904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4807,
																"name": "uncheckedInc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4130,
																"src": "3891:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 4809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3891:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3887:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4811,
													"nodeType": "ExpressionStatement",
													"src": "3887:19:12"
												},
												"nodeType": "ForStatement",
												"src": "3855:701:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 4844,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4573:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 4779,
												"id": 4845,
												"nodeType": "Return",
												"src": "4566:11:12"
											}
										]
									},
									"documentation": {
										"id": 4766,
										"nodeType": "StructuredDocumentation",
										"src": "3088:31:12",
										"text": "@inheritdoc ISchemaResolver"
									},
									"functionSelector": "88e5b2d9",
									"id": 4847,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4776,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4775,
												"name": "onlyEAS",
												"nameLocations": [
													"3248:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4625,
												"src": "3248:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3248:7:12"
										}
									],
									"name": "multiRevoke",
									"nameLocation": "3133:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4770,
												"mutability": "mutable",
												"name": "attestations",
												"nameLocation": "3177:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 4847,
												"src": "3154:35:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Attestation[]"
												},
												"typeName": {
													"baseType": {
														"id": 4768,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4767,
															"name": "Attestation",
															"nameLocations": [
																"3154:11:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4114,
															"src": "3154:11:12"
														},
														"referencedDeclaration": 4114,
														"src": "3154:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
															"typeString": "struct Attestation"
														}
													},
													"id": 4769,
													"nodeType": "ArrayTypeName",
													"src": "3154:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Attestation_$4114_storage_$dyn_storage_ptr",
														"typeString": "struct Attestation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4773,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "3218:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4847,
												"src": "3199:25:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 4771,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3199:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4772,
													"nodeType": "ArrayTypeName",
													"src": "3199:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3144:86:12"
									},
									"returnParameters": {
										"id": 4779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4847,
												"src": "3265:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:12"
									},
									"scope": 4887,
									"src": "3124:1460:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4848,
										"nodeType": "StructuredDocumentation",
										"src": "4590:562:12",
										"text": "@notice A resolver callback that should be implemented by child contracts.\n @param attestation The new attestation.\n @param value An explicit ETH amount that was sent to the resolver. Please note that this value is verified in\n     both attest() and multiAttest() callbacks EAS-only callbacks and that in case of multi attestations, it'll\n     usually hold that msg.value != value, since msg.value aggregated the sent ETH amounts for all the\n     attestations in the batch.\n @return Whether the attestation is valid."
									},
									"id": 4858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onAttest",
									"nameLocation": "5166:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4851,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "5196:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4858,
												"src": "5175:32:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4849,
														"name": "Attestation",
														"nameLocations": [
															"5175:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "5175:11:12"
													},
													"referencedDeclaration": 4114,
													"src": "5175:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4853,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5217:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4858,
												"src": "5209:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5209:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5174:49:12"
									},
									"returnParameters": {
										"id": 4857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4858,
												"src": "5250:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5250:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:6:12"
									},
									"scope": 4887,
									"src": "5157:99:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 4859,
										"nodeType": "StructuredDocumentation",
										"src": "5262:591:12",
										"text": "@notice Processes an attestation revocation and verifies if it can be revoked.\n @param attestation The existing attestation to be revoked.\n @param value An explicit ETH amount that was sent to the resolver. Please note that this value is verified in\n     both revoke() and multiRevoke() callbacks EAS-only callbacks and that in case of multi attestations, it'll\n     usually hold that msg.value != value, since msg.value aggregated the sent ETH amounts for all the\n     attestations in the batch.\n @return Whether the attestation can be revoked."
									},
									"id": 4869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onRevoke",
									"nameLocation": "5867:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4862,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "5897:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4869,
												"src": "5876:32:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4861,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4860,
														"name": "Attestation",
														"nameLocations": [
															"5876:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "5876:11:12"
													},
													"referencedDeclaration": 4114,
													"src": "5876:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5918:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4869,
												"src": "5910:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5910:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:49:12"
									},
									"returnParameters": {
										"id": 4868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4869,
												"src": "5951:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5951:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5950:6:12"
									},
									"scope": 4887,
									"src": "5858:99:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4885,
										"nodeType": "Block",
										"src": "6064:95:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4873,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6078:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6082:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6078:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 4877,
																"name": "_eas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4586,
																"src": "6100:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEAS_$4437",
																	"typeString": "contract IEAS"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IEAS_$4437",
																	"typeString": "contract IEAS"
																}
															],
															"id": 4876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6092:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6092:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 4878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6092:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4884,
												"nodeType": "IfStatement",
												"src": "6074:79:12",
												"trueBody": {
													"id": 4883,
													"nodeType": "Block",
													"src": "6107:46:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 4880,
																	"name": "AccessDenied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4074,
																	"src": "6128:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 4881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6128:14:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4882,
															"nodeType": "RevertStatement",
															"src": "6121:21:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4870,
										"nodeType": "StructuredDocumentation",
										"src": "5963:63:12",
										"text": "@dev Ensures that only the EAS contract can make this call."
									},
									"id": 4886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyEAS",
									"nameLocation": "6040:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6048:2:12"
									},
									"returnParameters": {
										"id": 4872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:12"
									},
									"scope": 4887,
									"src": "6031:128:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 4888,
							"src": "362:5799:12",
							"usedErrors": [
								4074,
								4078,
								4080,
								4581,
								4583
							],
							"usedEvents": []
						}
					],
					"src": "33:6128:12"
				},
				"id": 12
			},
			"EAS/Semver.sol": {
				"ast": {
					"absolutePath": "EAS/Semver.sol",
					"exportedSymbols": {
						"ISemver": [
							4560
						],
						"Semver": [
							4954
						],
						"Strings": [
							549
						]
					},
					"id": 4955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 4891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4955,
							"sourceUnit": 550,
							"src": "58:68:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4890,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 549,
										"src": "67:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/ISemver.sol",
							"file": "./ISemver.sol",
							"id": 4893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4955,
							"sourceUnit": 4561,
							"src": "128:40:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4892,
										"name": "ISemver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4560,
										"src": "137:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4895,
										"name": "ISemver",
										"nameLocations": [
											"269:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4560,
										"src": "269:7:13"
									},
									"id": 4896,
									"nodeType": "InheritanceSpecifier",
									"src": "269:7:13"
								}
							],
							"canonicalName": "Semver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4894,
								"nodeType": "StructuredDocumentation",
								"src": "170:80:13",
								"text": "@title Semver\n @notice A simple contract for managing contract versions."
							},
							"fullyImplemented": true,
							"id": 4954,
							"linearizedBaseContracts": [
								4954,
								4560
							],
							"name": "Semver",
							"nameLocation": "259:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4898,
									"mutability": "immutable",
									"name": "_major",
									"nameLocation": "349:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 4954,
									"src": "323:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4897,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 4900,
									"mutability": "immutable",
									"name": "_minor",
									"nameLocation": "428:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 4954,
									"src": "402:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4899,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 4902,
									"mutability": "immutable",
									"name": "_patch",
									"nameLocation": "507:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 4954,
									"src": "481:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4901,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "481:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 4924,
										"nodeType": "Block",
										"src": "749:79:13",
										"statements": [
											{
												"expression": {
													"id": 4914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4912,
														"name": "_major",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4898,
														"src": "759:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4913,
														"name": "major",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4905,
														"src": "768:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "759:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4915,
												"nodeType": "ExpressionStatement",
												"src": "759:14:13"
											},
											{
												"expression": {
													"id": 4918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4916,
														"name": "_minor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4900,
														"src": "783:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4917,
														"name": "minor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4907,
														"src": "792:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "783:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4919,
												"nodeType": "ExpressionStatement",
												"src": "783:14:13"
											},
											{
												"expression": {
													"id": 4922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4920,
														"name": "_patch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4902,
														"src": "807:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4921,
														"name": "patch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4909,
														"src": "816:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "807:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4923,
												"nodeType": "ExpressionStatement",
												"src": "807:14:13"
											}
										]
									},
									"documentation": {
										"id": 4903,
										"nodeType": "StructuredDocumentation",
										"src": "520:167:13",
										"text": "@dev Create a new Semver instance.\n @param major Major version number.\n @param minor Minor version number.\n @param patch Patch version number."
									},
									"id": 4925,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4905,
												"mutability": "mutable",
												"name": "major",
												"nameLocation": "712:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4925,
												"src": "704:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4907,
												"mutability": "mutable",
												"name": "minor",
												"nameLocation": "727:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4925,
												"src": "719:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4909,
												"mutability": "mutable",
												"name": "patch",
												"nameLocation": "742:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4925,
												"src": "734:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:45:13"
									},
									"returnParameters": {
										"id": 4911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "749:0:13"
									},
									"scope": 4954,
									"src": "692:136:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										4559
									],
									"body": {
										"id": 4952,
										"nodeType": "Block",
										"src": "1002:178:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4937,
																			"name": "_major",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4898,
																			"src": "1089:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 4935,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 549,
																			"src": "1072:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$549_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 4936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1080:8:13",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 297,
																		"src": "1072:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 4938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1072:24:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "2e",
																	"id": 4939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1098:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																		"typeString": "literal_string \".\""
																	},
																	"value": "."
																},
																{
																	"arguments": [
																		{
																			"id": 4942,
																			"name": "_minor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4900,
																			"src": "1120:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 4940,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 549,
																			"src": "1103:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$549_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 4941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1111:8:13",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 297,
																		"src": "1103:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 4943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1103:24:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "2e",
																	"id": 4944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1129:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																		"typeString": "literal_string \".\""
																	},
																	"value": "."
																},
																{
																	"arguments": [
																		{
																			"id": 4947,
																			"name": "_patch",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4902,
																			"src": "1151:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 4945,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 549,
																			"src": "1134:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$549_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 4946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1142:8:13",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 297,
																		"src": "1134:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 4948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1134:24:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																		"typeString": "literal_string \".\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																		"typeString": "literal_string \".\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 4933,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1055:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 4934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1059:12:13",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1055:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 4949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1055:104:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 4932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1031:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 4931,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1031:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:142:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 4930,
												"id": 4951,
												"nodeType": "Return",
												"src": "1012:161:13"
											}
										]
									},
									"documentation": {
										"id": 4926,
										"nodeType": "StructuredDocumentation",
										"src": "834:106:13",
										"text": "@notice Returns the full semver contract version.\n @return Semver contract version as a string."
									},
									"functionSelector": "54fd4d50",
									"id": 4953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "954:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:2:13"
									},
									"returnParameters": {
										"id": 4930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4953,
												"src": "987:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4928,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "987:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:15:13"
									},
									"scope": 4954,
									"src": "945:235:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4955,
							"src": "250:932:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1149:13"
				},
				"id": 13
			},
			"resolver.sol": {
				"ast": {
					"absolutePath": "resolver.sol",
					"exportedSymbols": {
						"Attestation": [
							4114
						],
						"Context": [
							177
						],
						"IEAS": [
							4437
						],
						"Ownable": [
							147
						],
						"OwnerRecipientResolver": [
							5126
						],
						"SchemaResolver": [
							4887
						]
					},
					"id": 5127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "EAS/SchemaResolver.sol",
							"file": "EAS/SchemaResolver.sol",
							"id": 4958,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5127,
							"sourceUnit": 4888,
							"src": "57:56:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4957,
										"name": "SchemaResolver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4887,
										"src": "66:14:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "EAS/IEAS.sol",
							"file": "EAS/IEAS.sol",
							"id": 4961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5127,
							"sourceUnit": 4438,
							"src": "114:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4959,
										"name": "IEAS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4437,
										"src": "123:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 4960,
										"name": "Attestation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4114,
										"src": "129:11:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5127,
							"sourceUnit": 148,
							"src": "164:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4964,
										"name": "SchemaResolver",
										"nameLocations": [
											"379:14:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4887,
										"src": "379:14:14"
									},
									"id": 4965,
									"nodeType": "InheritanceSpecifier",
									"src": "379:14:14"
								}
							],
							"canonicalName": "OwnerRecipientResolver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4963,
								"nodeType": "StructuredDocumentation",
								"src": "218:125:14",
								"text": " @title A schema resolver that checks whether the sender is the owner of the contract behind attestation.recipient."
							},
							"fullyImplemented": true,
							"id": 5126,
							"linearizedBaseContracts": [
								5126,
								4887,
								4954,
								4550,
								4560
							],
							"name": "OwnerRecipientResolver",
							"nameLocation": "353:22:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4974,
										"nodeType": "Block",
										"src": "442:2:14",
										"statements": []
									},
									"id": 4975,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4971,
													"name": "eas",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4968,
													"src": "437:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEAS_$4437",
														"typeString": "contract IEAS"
													}
												}
											],
											"id": 4972,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4970,
												"name": "SchemaResolver",
												"nameLocations": [
													"422:14:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4887,
												"src": "422:14:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "422:19:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4968,
												"mutability": "mutable",
												"name": "eas",
												"nameLocation": "417:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 4975,
												"src": "412:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEAS_$4437",
													"typeString": "contract IEAS"
												},
												"typeName": {
													"id": 4967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4966,
														"name": "IEAS",
														"nameLocations": [
															"412:4:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4437,
														"src": "412:4:14"
													},
													"referencedDeclaration": 4437,
													"src": "412:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEAS_$4437",
														"typeString": "contract IEAS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:10:14"
									},
									"returnParameters": {
										"id": 4973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:14"
									},
									"scope": 5126,
									"src": "400:44:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										4858
									],
									"body": {
										"id": 5064,
										"nodeType": "Block",
										"src": "559:1542:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4986,
															"name": "attestation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4978,
															"src": "665:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																"typeString": "struct Attestation calldata"
															}
														},
														"id": 4987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "677:9:14",
														"memberName": "recipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4107,
														"src": "665:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "690:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4988,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "690:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 4991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "690:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "665:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4996,
												"nodeType": "IfStatement",
												"src": "661:78:14",
												"trueBody": {
													"id": 4995,
													"nodeType": "Block",
													"src": "702:37:14",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 4993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "723:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 4985,
															"id": 4994,
															"nodeType": "Return",
															"src": "716:12:14"
														}
													]
												}
											},
											{
												"assignments": [
													4998
												],
												"declarations": [
													{
														"constant": false,
														"id": 4998,
														"mutability": "mutable",
														"name": "ownableCheck",
														"nameLocation": "818:12:14",
														"nodeType": "VariableDeclaration",
														"scope": 5064,
														"src": "813:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 4997,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "813:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5003,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 5000,
																"name": "attestation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4978,
																"src": "861:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																	"typeString": "struct Attestation calldata"
																}
															},
															"id": 5001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "873:4:14",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4113,
															"src": "861:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 4999,
														"name": "extractOwnableCheckFromData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5111,
														"src": "833:27:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 5002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "833:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "813:65:14"
											},
											{
												"condition": {
													"id": 5005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "945:13:14",
													"subExpression": {
														"id": 5004,
														"name": "ownableCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4998,
														"src": "946:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5009,
												"nodeType": "IfStatement",
												"src": "941:55:14",
												"trueBody": {
													"id": 5008,
													"nodeType": "Block",
													"src": "960:36:14",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 5006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "981:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 4985,
															"id": 5007,
															"nodeType": "Return",
															"src": "974:11:14"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"expression": {
																	"id": 5010,
																	"name": "attestation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4978,
																	"src": "1215:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																		"typeString": "struct Attestation calldata"
																	}
																},
																"id": 5011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1227:9:14",
																"memberName": "recipient",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4107,
																"src": "1215:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 5012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1237:4:14",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1215:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 5013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1242:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1215:33:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 5014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1252:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1215:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5019,
												"nodeType": "IfStatement",
												"src": "1211:81:14",
												"trueBody": {
													"id": 5018,
													"nodeType": "Block",
													"src": "1255:37:14",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 5016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1276:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 4985,
															"id": 5017,
															"nodeType": "Return",
															"src": "1269:12:14"
														}
													]
												}
											},
											{
												"assignments": [
													5021
												],
												"declarations": [
													{
														"constant": false,
														"id": 5021,
														"mutability": "mutable",
														"name": "currentChainId",
														"nameLocation": "1376:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 5064,
														"src": "1368:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5020,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1368:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5022,
												"nodeType": "VariableDeclarationStatement",
												"src": "1368:22:14"
											},
											{
												"AST": {
													"nativeSrc": "1409:51:14",
													"nodeType": "YulBlock",
													"src": "1409:51:14",
													"statements": [
														{
															"nativeSrc": "1423:27:14",
															"nodeType": "YulAssignment",
															"src": "1423:27:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nativeSrc": "1441:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1441:7:14"
																},
																"nativeSrc": "1441:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1441:9:14"
															},
															"variableNames": [
																{
																	"name": "currentChainId",
																	"nativeSrc": "1423:14:14",
																	"nodeType": "YulIdentifier",
																	"src": "1423:14:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5021,
														"isOffset": false,
														"isSlot": false,
														"src": "1423:14:14",
														"valueSize": 1
													}
												],
												"id": 5023,
												"nodeType": "InlineAssembly",
												"src": "1400:60:14"
											},
											{
												"assignments": [
													5025
												],
												"declarations": [
													{
														"constant": false,
														"id": 5025,
														"mutability": "mutable",
														"name": "expectedChainId",
														"nameLocation": "1486:15:14",
														"nodeType": "VariableDeclaration",
														"scope": 5064,
														"src": "1478:23:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1478:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5030,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 5027,
																"name": "attestation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4978,
																"src": "1527:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																	"typeString": "struct Attestation calldata"
																}
															},
															"id": 5028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1539:4:14",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4113,
															"src": "1527:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 5026,
														"name": "extractChainIdFromData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5087,
														"src": "1504:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (bytes memory) pure returns (uint256)"
														}
													},
													"id": 5029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1504:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1478:66:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5031,
														"name": "currentChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5021,
														"src": "1558:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5032,
														"name": "expectedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5025,
														"src": "1576:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1558:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5037,
												"nodeType": "IfStatement",
												"src": "1554:76:14",
												"trueBody": {
													"id": 5036,
													"nodeType": "Block",
													"src": "1593:37:14",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 5034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1614:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 4985,
															"id": 5035,
															"nodeType": "Return",
															"src": "1607:12:14"
														}
													]
												}
											},
											{
												"assignments": [
													5040
												],
												"declarations": [
													{
														"constant": false,
														"id": 5040,
														"mutability": "mutable",
														"name": "ownableContract",
														"nameLocation": "1706:15:14",
														"nodeType": "VariableDeclaration",
														"scope": 5064,
														"src": "1698:23:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Ownable_$147",
															"typeString": "contract Ownable"
														},
														"typeName": {
															"id": 5039,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5038,
																"name": "Ownable",
																"nameLocations": [
																	"1698:7:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 147,
																"src": "1698:7:14"
															},
															"referencedDeclaration": 147,
															"src": "1698:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ownable_$147",
																"typeString": "contract Ownable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5045,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 5042,
																"name": "attestation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4978,
																"src": "1732:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																	"typeString": "struct Attestation calldata"
																}
															},
															"id": 5043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1744:9:14",
															"memberName": "recipient",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4107,
															"src": "1732:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5041,
														"name": "Ownable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1724:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Ownable_$147_$",
															"typeString": "type(contract Ownable)"
														}
													},
													"id": 5044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1724:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Ownable_$147",
														"typeString": "contract Ownable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1698:56:14"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 5057,
															"nodeType": "Block",
															"src": "1817:138:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 5055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 5052,
																				"name": "attestation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4978,
																				"src": "1915:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
																					"typeString": "struct Attestation calldata"
																				}
																			},
																			"id": 5053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1927:8:14",
																			"memberName": "attester",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4109,
																			"src": "1915:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 5054,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5050,
																			"src": "1939:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1915:29:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 4985,
																	"id": 5056,
																	"nodeType": "Return",
																	"src": "1908:36:14"
																}
															]
														},
														"errorName": "",
														"id": 5058,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 5051,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 5050,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "1810:5:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 5058,
																	"src": "1802:13:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 5049,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1802:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "1801:15:14"
														},
														"src": "1793:162:14"
													},
													{
														"block": {
															"id": 5061,
															"nodeType": "Block",
															"src": "1962:133:14",
															"statements": [
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 5059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2079:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 4985,
																	"id": 5060,
																	"nodeType": "Return",
																	"src": "2072:12:14"
																}
															]
														},
														"errorName": "",
														"id": 5062,
														"nodeType": "TryCatchClause",
														"src": "1956:139:14"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 5046,
															"name": "ownableContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5040,
															"src": "1769:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ownable_$147",
																"typeString": "contract Ownable"
															}
														},
														"id": 5047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1785:5:14",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "1769:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 5048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:23:14",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 5063,
												"nodeType": "TryStatement",
												"src": "1765:330:14"
											}
										]
									},
									"id": 5065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onAttest",
									"nameLocation": "459:8:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 4982,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "535:8:14"
									},
									"parameters": {
										"id": 4981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4978,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "489:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 5065,
												"src": "468:32:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 4977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4976,
														"name": "Attestation",
														"nameLocations": [
															"468:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "468:11:14"
													},
													"referencedDeclaration": 4114,
													"src": "468:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5065,
												"src": "502:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:53:14"
									},
									"returnParameters": {
										"id": 4985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5065,
												"src": "553:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4983,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "553:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:6:14"
									},
									"scope": 5126,
									"src": "450:1651:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5086,
										"nodeType": "Block",
										"src": "2190:359:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5073,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5067,
																	"src": "2208:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 5074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2213:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2208:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "323536",
																"id": 5075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2223:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "256"
															},
															"src": "2208:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4461746120746f6f2073686f7274",
															"id": 5077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2228:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
																"typeString": "literal_string \"Data too short\""
															},
															"value": "Data too short"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
																"typeString": "literal_string \"Data too short\""
															}
														],
														"id": 5072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2200:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5079,
												"nodeType": "ExpressionStatement",
												"src": "2200:45:14"
											},
											{
												"assignments": [
													5081
												],
												"declarations": [
													{
														"constant": false,
														"id": 5081,
														"mutability": "mutable",
														"name": "extractedValue",
														"nameLocation": "2349:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 5086,
														"src": "2341:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5080,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2341:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5082,
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:22:14"
											},
											{
												"AST": {
													"nativeSrc": "2382:121:14",
													"nodeType": "YulBlock",
													"src": "2382:121:14",
													"statements": [
														{
															"nativeSrc": "2396:39:14",
															"nodeType": "YulAssignment",
															"src": "2396:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2424:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2424:4:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2430:3:14",
																				"nodeType": "YulLiteral",
																				"src": "2430:3:14",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2420:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2420:3:14"
																		},
																		"nativeSrc": "2420:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2420:14:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2414:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2414:5:14"
																},
																"nativeSrc": "2414:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2414:21:14"
															},
															"variableNames": [
																{
																	"name": "extractedValue",
																	"nativeSrc": "2396:14:14",
																	"nodeType": "YulIdentifier",
																	"src": "2396:14:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5067,
														"isOffset": false,
														"isSlot": false,
														"src": "2424:4:14",
														"valueSize": 1
													},
													{
														"declaration": 5081,
														"isOffset": false,
														"isSlot": false,
														"src": "2396:14:14",
														"valueSize": 1
													}
												],
												"id": 5083,
												"nodeType": "InlineAssembly",
												"src": "2373:130:14"
											},
											{
												"expression": {
													"id": 5084,
													"name": "extractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5081,
													"src": "2528:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5071,
												"id": 5085,
												"nodeType": "Return",
												"src": "2521:21:14"
											}
										]
									},
									"id": 5087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "extractChainIdFromData",
									"nameLocation": "2116:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5067,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2152:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 5087,
												"src": "2139:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5066,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2139:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:19:14"
									},
									"returnParameters": {
										"id": 5071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5087,
												"src": "2181:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:9:14"
									},
									"scope": 5126,
									"src": "2107:442:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5110,
										"nodeType": "Block",
										"src": "2640:429:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5095,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5089,
																	"src": "2658:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 5096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2663:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2658:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "323838",
																"id": 5097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2673:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_288_by_1",
																	"typeString": "int_const 288"
																},
																"value": "288"
															},
															"src": "2658:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4461746120746f6f2073686f7274",
															"id": 5099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2678:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
																"typeString": "literal_string \"Data too short\""
															},
															"value": "Data too short"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
																"typeString": "literal_string \"Data too short\""
															}
														],
														"id": 5094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5101,
												"nodeType": "ExpressionStatement",
												"src": "2650:45:14"
											},
											{
												"assignments": [
													5103
												],
												"declarations": [
													{
														"constant": false,
														"id": 5103,
														"mutability": "mutable",
														"name": "extractedValue",
														"nameLocation": "2815:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 5110,
														"src": "2807:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2807:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5104,
												"nodeType": "VariableDeclarationStatement",
												"src": "2807:22:14"
											},
											{
												"AST": {
													"nativeSrc": "2848:170:14",
													"nodeType": "YulBlock",
													"src": "2848:170:14",
													"statements": [
														{
															"nativeSrc": "2862:39:14",
															"nodeType": "YulAssignment",
															"src": "2862:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2890:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2890:4:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2896:3:14",
																				"nodeType": "YulLiteral",
																				"src": "2896:3:14",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2886:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2886:3:14"
																		},
																		"nativeSrc": "2886:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2886:14:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2880:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2880:5:14"
																},
																"nativeSrc": "2880:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2880:21:14"
															},
															"variableNames": [
																{
																	"name": "extractedValue",
																	"nativeSrc": "2862:14:14",
																	"nodeType": "YulIdentifier",
																	"src": "2862:14:14"
																}
															]
														},
														{
															"nativeSrc": "2940:42:14",
															"nodeType": "YulAssignment",
															"src": "2940:42:14",
															"value": {
																"arguments": [
																	{
																		"name": "extractedValue",
																		"nativeSrc": "2962:14:14",
																		"nodeType": "YulIdentifier",
																		"src": "2962:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2978:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2978:3:14",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2958:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:14"
																},
																"nativeSrc": "2958:24:14",
																"nodeType": "YulFunctionCall",
																"src": "2958:24:14"
															},
															"variableNames": [
																{
																	"name": "extractedValue",
																	"nativeSrc": "2940:14:14",
																	"nodeType": "YulIdentifier",
																	"src": "2940:14:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5089,
														"isOffset": false,
														"isSlot": false,
														"src": "2890:4:14",
														"valueSize": 1
													},
													{
														"declaration": 5103,
														"isOffset": false,
														"isSlot": false,
														"src": "2862:14:14",
														"valueSize": 1
													},
													{
														"declaration": 5103,
														"isOffset": false,
														"isSlot": false,
														"src": "2940:14:14",
														"valueSize": 1
													},
													{
														"declaration": 5103,
														"isOffset": false,
														"isSlot": false,
														"src": "2962:14:14",
														"valueSize": 1
													}
												],
												"id": 5105,
												"nodeType": "InlineAssembly",
												"src": "2839:179:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5106,
														"name": "extractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5103,
														"src": "3043:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 5107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3043:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 5093,
												"id": 5109,
												"nodeType": "Return",
												"src": "3036:26:14"
											}
										]
									},
									"id": 5111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "extractOwnableCheckFromData",
									"nameLocation": "2564:27:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2605:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 5111,
												"src": "2592:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2592:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:19:14"
									},
									"returnParameters": {
										"id": 5093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5111,
												"src": "2634:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2634:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:6:14"
									},
									"scope": 5126,
									"src": "2555:514:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										4869
									],
									"body": {
										"id": 5124,
										"nodeType": "Block",
										"src": "3188:28:14",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 5122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3205:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 5121,
												"id": 5123,
												"nodeType": "Return",
												"src": "3198:11:14"
											}
										]
									},
									"id": 5125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onRevoke",
									"nameLocation": "3084:8:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 5118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3164:8:14"
									},
									"parameters": {
										"id": 5117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5125,
												"src": "3093:20:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$4114_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 5113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 5112,
														"name": "Attestation",
														"nameLocations": [
															"3093:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4114,
														"src": "3093:11:14"
													},
													"referencedDeclaration": 4114,
													"src": "3093:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$4114_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5125,
												"src": "3131:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3092:57:14"
									},
									"returnParameters": {
										"id": 5121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5125,
												"src": "3182:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3182:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:6:14"
									},
									"scope": 5126,
									"src": "3075:141:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5127,
							"src": "344:2874:14",
							"usedErrors": [
								4074,
								4078,
								4080,
								4581,
								4583
							],
							"usedEvents": []
						}
					],
					"src": "32:3186:14"
				},
				"id": 14
			}
		}
	}
}